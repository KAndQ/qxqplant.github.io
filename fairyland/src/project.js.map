{"version":3,"sources":["assets/scripts/fairyland/ui/component/common/AlertViewComponent.ts","assets/scripts/native/AnalyticsUtils.ts","assets/scripts/App.ts","assets/scripts/fairyland/Consts.ts","assets/scripts/demo/DemoBattleMain.ts","assets/scripts/fairyland/ui/component/demo/DemoHomeComponent.ts","assets/scripts/fairyland/ui/component/demo/DemoLoginComponent.ts","assets/scripts/fairyland/ui/component/demo/DemoPropCellComponent.ts","assets/scripts/fairyland/system/DeployLaborForceSystem.ts","assets/scripts/fairyland/system/DeployLaborForceToPropSystem.ts","assets/scripts/fairyland/utils/Formatter.ts","assets/scripts/fairyland/system/HandlePropSystem.ts","assets/scripts/fairyland/system/InitOriginSystem.ts","assets/scripts/fairyland/system/LocalStorageSystem.ts","assets/scripts/sys/i18n/Localized.ts","assets/scripts/MainComponent.ts","assets/scripts/native/NativeResponse.ts","assets/scripts/fairyland/State.ts","assets/scripts/sys/Utils.ts"],"names":["_a","cc","_decorator","ccclass","property","AlertViewComponent","_super","_this","apply","this","arguments","label","__extends","prototype","setTitle","title","string","onClickClose","node","active","__decorate","Label","Component","exports","default","AnalyticsUtils","trackPageAppear","page","sys","isNative","os","OS_IOS","jsb","reflection","callStaticMethod","JSON","stringify","trackPageDisappear","trackEvent","name","properties","trackEventDurationBegin","trackEventDurationEnd","trackEventWithDuration","duration","AlertViewComponent_1","require","App","main","s_instance","Error","getInstance","Object","defineProperty","get","getChildByName","showAlert","getComponent","big_js_1","PLACE_PROP_ID","B_CONFINE_MAX","K_CONFINE_MAX","mul","M_CONFINE_MAX","G_CONFINE_MAX","_","DemoBattleMain","m_monsterGroups","m_monsters","monsterViews","monsterListView","onLoad","genMonsters","updateMonsterListView","genMonster","hp","random","atk","max","i","push","sort","a","b","divideIntoGroups","split","Math","floor","length","limit","j","onClickAttack","_i","damage","_b","group_1","m","updateMonsterViews","onClickMonsterList","onClickCloseMonsterListView","onClickDivide","index","labelNode","group","count","group_2","color","Color","RED","BLACK","content","setContentSize","winSize","width","height","removeAllChildren","Node","opacity","anchorY","y","addComponent","fontSize","addChild","getContentSize","State_1","App_1","Consts_1","DemoPropCellComponent_1","DeployLaborForceSystem_1","HandlePropSystem_1","DeployLaborForceToPropSystem_1","LocalStorageSystem_1","DemoHomeComponent","labelNum","listView","cellTemplate","m_elapse","onAttributeChanged","bind","updateLabelUpdate","size","offset","v2","propConfigs","configs","props","PROP_KEYS","contentSize","_loop_1","cell","instantiate","this_1","x","parseInt","k","config","cellComponent","DemoPropCellComponent","prop","getProp","id","place","dependencies","arr","num","depConfig","join","initProps","increaseRate","laborForce","onPressPlus","addLaborForceToProp","onPressMinus","subLaborForceFromProp","on","onDestroy","removeListener","update","dt","now","Date","origin","timestamp","produceProps","set","onClickAddMaxLaborForce","addMaxLaborForce","save","onClickSubMaxLaborForce","subMaxLaborForce","propId","clean","delAccount","isBrowser","window","location","href","args","route","getLaborForce","getMaxLaborForce","ScrollView","Prefab","Utils","DemoLoginComponent","eBoxAccountInput","loadConfigs","sent","account","getAccount","loadAccount","enterHome","onLoginClick","trim","setAccount","loadPrefab","resource","homeNode","gameContainer","destroy","EditBox","Localized_1","Formatter_1","m_props","m_isInit","labelName","labelIncreaseRate","labelLaborForce","getListenerKey","setNum","setIncreaseRate","setName","setLaborForce","value","formatPropNum","getValueSync","bigValue","eq","WHITE","lt","GREEN","add","state","addend","result","plus","toString","isCanSub","subtractor","gte","sub","minus","isCanSubMaxLaborForce","addLaborForce","isCanSubLaborForce","subLaborForce","maxLaborForce","addedLaborForce","bigCurrentLaborForce","bigAddedLaborForce","subedLaborForce","bigPropCurrentLaborForce","bigNum","div","toFixed","getPropKey","getDefaultProp","lastNum","setProp","assign","calculateIncreaseRate","calculatePureProduceNum","numPerSec","numPerLaborForce","produceProp","filter","advanceProduceNum","actualProduceNum","depProp","gt","tempActualProduceNum","_c","_d","_e","consume","PLACE_PROP_ID_1","PLACE_PROP_ID_2","PLACE_PROP_ID_3","initOrigin","localStorage","getItem","setItem","removeItem","NativeResponse_1","Localized","getLanguage","s_language","Promise","resolve","process","navigator","language","callback","getValue","key","loadLocalizedText","s_dict","s_defaultDict","getDefaultTTF","localizeLabel","reject","__awaiter","loader","loadRes","Font","err","font","getLocalizedRes","url","toLocaleLowerCase","log","indexOf","language_1","p1","file","json","p2_1","then","catch","MainComponent","loginNode","s_session","s_callbacks","NativeResponse","session","onNativeResponse","isRemove","undefined","events_1","InitOriginSystem_1","State","call","m_origin","user","m_configs","emit","defaultValue","getOriginLocalStorageKey","loadJson","jsonOrigin","parse","EventEmitter","jsonAssets"],"mappings":"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","sourcesContent":["/**\n * 警告弹窗\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AlertViewComponent extends cc.Component {\n  /**\n   * 设置弹窗提示标题\n   * @author Radish\n   */\n  public setTitle(title: string) {\n    this.label.string = title;\n  }\n\n  /**\n   * 点击关闭按钮\n   * @author Radish\n   */\n  public onClickClose() {\n    this.node.active = false;\n  }\n\n  @property(cc.Label)\n  label: cc.Label = null;\n}\n","/**\n * 分析统计 SDK 调用接口\n * @author Radish\n */\n\nexport default class AnalyticsUtils {\n  /**\n   * 页面呈现时调用\n   * @author Radish\n   */\n  public static trackPageAppear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageAppear:\",\n        JSON.stringify({ page })\n      );\n    }\n  }\n\n  /**\n   * 页面关闭时调用\n   * @author Radish\n   */\n  public static trackPageDisappear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageDisappear:\",\n        JSON.stringify({ page })\n      );\n    }\n  }\n\n  /**\n   * 追踪事件\n   * @author Radish\n   */\n  public static trackEvent(name: string, properties?: { [k: string]: string }) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEvent:\",\n        JSON.stringify({ name, properties })\n      );\n    }\n  }\n\n  /**\n   * 上报事件开始\n   * @author Radish\n   */\n  public static trackEventDurationBegin(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationBegin:\",\n        JSON.stringify({ name })\n      );\n    }\n  }\n\n  /**\n   * 上报事件结束\n   * @author Radish\n   */\n  public static trackEventDurationEnd(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationEnd:\",\n        JSON.stringify({ name })\n      );\n    }\n  }\n\n  /**\n   * 上报一个带时长的事件\n   * @author Radish\n   */\n  public static trackEventWithDuration(name: string, duration: number) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventWithDuration:\",\n        JSON.stringify({ name, duration })\n      );\n    }\n  }\n}\n","/**\n * 当前客户端的 App 实例\n * @author Radish\n */\n\nimport AlertViewComponent from \"./fairyland/ui/component/common/AlertViewComponent\";\n\nexport default class App {\n  /**\n   * 单例模式, 获得 App 实例\n   * @author Radish\n   */\n  public static getInstance() {\n    if (this.s_instance === null) {\n      this.s_instance = new App();\n    }\n    return this.s_instance;\n  }\n\n  /**\n   * 获得 gameContainer 容器\n   * @author Radish\n   */\n  public get gameContainer(): cc.Node {\n    return this.main.getChildByName(\"gameContainer\");\n  }\n\n  /**\n   * 获得 sysContainer 容器\n   * @author Radish\n   */\n  public get sysContainer(): cc.Node {\n    return this.main.getChildByName(\"sysContainer\");\n  }\n\n  /**\n   * 显示弹窗\n   * @author Radish\n   */\n  public showAlert(title: string) {\n    let node = this.main.getChildByName(\"alertView\");\n    let component = node.getComponent(AlertViewComponent);\n    component.setTitle(title);\n    node.active = true;\n  }\n\n  public main: cc.Node = null;\n\n  /********************************************************************************\n   * private\n   ********************************************************************************/\n\n  private constructor() {\n    if (App.s_instance !== null) {\n      throw new Error(\"App already initialized.\");\n    }\n  }\n  private static s_instance: App = null;\n}\n","/**\n * 通用常量定义\n * @author Radish\n */\n\nimport Big from \"big.js\";\n\nexport let PLACE_PROP_ID = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\"];\nexport let B_CONFINE_MAX = new Big(1000);\nexport let K_CONFINE_MAX = B_CONFINE_MAX.mul(1000);\nexport let M_CONFINE_MAX = K_CONFINE_MAX.mul(1000);\nexport let G_CONFINE_MAX = M_CONFINE_MAX.mul(1000);\n","const { ccclass, property } = cc._decorator;\n\nimport * as _ from \"lodash\";\n\ninterface Monster {\n  name: string;\n  hp: number;\n  atk: number;\n}\n\n@ccclass\nexport default class DemoBattleMain extends cc.Component {\n  onLoad() {\n    this.genMonsters();\n    this.updateMonsterListView();\n  }\n\n  /**\n   * 生成单个怪物对象\n   * @author Radish\n   */\n  private genMonster(): Monster {\n    return {\n      name: \"鸭嘴兽\",\n      hp: _.random(1, 100, false),\n      atk: 1\n    };\n  }\n\n  /**\n   * 生成怪物对象集合\n   * @author Radish\n   */\n  private genMonsters() {\n    let max = _.random(20, 50, false);\n    for (let i = 0; i < max; ++i) {\n      this.m_monsters.push(this.genMonster());\n    }\n    this.m_monsters.sort((a, b) => {\n      return a.hp - b.hp;\n    });\n  }\n\n  /**\n   * 降怪物分组\n   * @author Radish\n   */\n  private divideIntoGroups() {\n    this.m_monsterGroups = [[], [], []];\n    let split = Math.floor(this.m_monsters.length / 3);\n    for (let i = 0; i < 3; ++i) {\n      let limit = split * (i + 1);\n      if (i === 2) {\n        limit = this.m_monsters.length;\n      }\n\n      for (let j = split * i; j < limit; ++j) {\n        this.m_monsterGroups[i].push(this.m_monsters[j]);\n      }\n    }\n  }\n\n  /**\n   * 点击攻击\n   * @author Radish\n   */\n  private onClickAttack() {\n    for (let group of this.m_monsterGroups) {\n      let damage = 100;\n      for (let m of group) {\n        if (damage > 0) {\n          if (m.hp >= damage) {\n            m.hp -= damage;\n            damage = 0;\n          } else {\n            damage -= m.hp;\n            m.hp = 0;\n          }\n        }\n\n        if (damage === 0) {\n          break;\n        }\n      }\n    }\n\n    this.updateMonsterViews();\n  }\n\n  /**\n   * 点击怪物列表\n   * @author Radish\n   */\n  private onClickMonsterList() {\n    this.monsterListView.active = true;\n  }\n\n  private onClickCloseMonsterListView() {\n    this.monsterListView.active = false;\n  }\n\n  /**\n   * 点击拆分\n   * @author Radish\n   */\n  private onClickDivide() {\n    this.divideIntoGroups();\n    this.updateMonsterViews();\n  }\n\n  /**\n   * 更新妖怪视图\n   * @author Radish\n   */\n  private updateMonsterViews() {\n    for (let index in this.m_monsterGroups) {\n      let view = this.monsterViews[index];\n      let labelNode = view.getChildByName(\"label\");\n      let label = labelNode.getComponent(cc.Label);\n\n      let group = this.m_monsterGroups[index];\n      if (group.length === 0) {\n        label.string = \"-\";\n        continue;\n      }\n\n      let hp = 0;\n      let count = 0;\n      let name = \"\";\n      for (let m of group) {\n        if (name === \"\") {\n          name = m.name;\n        }\n\n        hp += m.hp;\n        if (m.hp > 0) {\n          ++count;\n        }\n      }\n\n      label.string = `${name}\\n血量: ${hp}\\n数量: ${count}`;\n\n      if (count === 0) {\n        labelNode.color = cc.Color.RED;\n      } else {\n        labelNode.color = cc.Color.BLACK;\n      }\n    }\n  }\n\n  /**\n   * 更新\n   */\n  private updateMonsterListView() {\n    let view = this.monsterListView.getChildByName(\"view\");\n    let content = view.getChildByName(\"content\");\n    content.setContentSize(cc.winSize.width, cc.winSize.height);\n    content.removeAllChildren();\n\n    let height = 0;\n    for (let i in this.m_monsters) {\n      let m = this.m_monsters[i];\n      let node = new cc.Node();\n      if (m.hp > 0) {\n        node.color = cc.Color.BLACK;\n      } else {\n        node.color = cc.Color.RED;\n      }\n      node.opacity = 255;\n      node.anchorY = 1.0;\n      node.y = -i * 32;\n      height += 32;\n\n      let label = node.addComponent(cc.Label);\n      label.fontSize = 24;\n      label.string = `=>${i + 1}, ${m.name}, hp = ${m.hp}`;\n\n      content.addChild(node);\n    }\n\n    if (content.getContentSize().height < height) {\n      content.setContentSize(cc.winSize.width, height);\n    }\n  }\n\n  private m_monsterGroups: Array<Monster[]> = [[], [], []];\n  private m_monsters: Monster[] = [];\n\n  @property([cc.Node])\n  public monsterViews: cc.Node[] = [];\n\n  @property(cc.Node)\n  public monsterListView: cc.Node = null;\n}\n","/**\n * Demo 家园\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport State from \"../../../State\";\nimport App from \"../../../../App\";\nimport { IPropConfig, IProp } from \"../../../Types\";\nimport { PLACE_PROP_ID } from \"../../../Consts\";\nimport { DemoPropCellComponent } from \"./DemoPropCellComponent\";\nimport {\n  getLaborForce,\n  getMaxLaborForce,\n  addMaxLaborForce,\n  subMaxLaborForce\n} from \"../../../system/DeployLaborForceSystem\";\nimport { getProp, produceProps } from \"../../../system/HandlePropSystem\";\nimport {\n  addLaborForceToProp,\n  subLaborForceFromProp\n} from \"../../../system/DeployLaborForceToPropSystem\";\nimport { delAccount } from \"../../../system/LocalStorageSystem\";\n\n@ccclass\nexport default class DemoHomeComponent extends cc.Component {\n  onLoad() {\n    this.onAttributeChanged = this.onAttributeChanged.bind(this);\n    this.updateLabelUpdate();\n\n    // 列表\n    let size = this.listView.content.getContentSize();\n    let offset = cc.v2(-size.width * 0.5 + 64, 0);\n    let propConfigs = State.getInstance().configs.props;\n    const PROP_KEYS = PLACE_PROP_ID;\n    let contentSize = cc.size(size.width, 0);\n    for (let i in PROP_KEYS) {\n      let cell = cc.instantiate(this.cellTemplate) as cc.Node;\n      this.listView.content.addChild(cell);\n\n      cell.x = offset.x;\n      cell.y = offset.y + (parseInt(i) + 1) * -cell.getContentSize().height;\n      contentSize.height += cell.getContentSize().height;\n\n      let k = PROP_KEYS[i];\n      let config: IPropConfig = propConfigs[k];\n\n      let cellComponent = cell.getComponent(DemoPropCellComponent);\n      let prop: IProp = getProp(State.getInstance(), config.id);\n      let name: string = config.name;\n      if (config.place && config.place.dependencies) {\n        name += \"(\";\n        let arr = [];\n        for (const { id, num } of config.place.dependencies) {\n          let depConfig = State.getInstance().configs.props[id];\n          arr.push(`${num}${depConfig.name}`);\n        }\n        name += arr.join(\"+\");\n        name += \")\";\n      }\n      cellComponent.initProps({\n        id: config.id,\n        num: prop.num,\n        name,\n        increaseRate: prop.increaseRate,\n        laborForce: prop.laborForce,\n        onPressPlus: () => {\n          this.addLaborForceToProp(config.id, \"1\");\n        },\n        onPressMinus: () => {\n          this.subLaborForceFromProp(config.id, \"1\");\n        }\n      });\n    }\n    this.listView.content.setContentSize(contentSize);\n\n    State.getInstance().on(\"attribute_changed\", this.onAttributeChanged);\n  }\n\n  onDestroy() {\n    State.getInstance().removeListener(\n      \"attribute_changed\",\n      this.onAttributeChanged\n    );\n  }\n\n  update(dt: number) {\n    let now = Date.now();\n    let duration = (now - State.getInstance().origin.timestamp) / 1000;\n    if (duration >= 0.1) {\n      produceProps(State.getInstance(), duration);\n      State.getInstance().set(\"timestamp\", now);\n    }\n  }\n\n  /**\n   * 点击 + 按钮\n   * @author Radish\n   */\n  public onClickAddMaxLaborForce() {\n    addMaxLaborForce(State.getInstance(), \"1\");\n    State.getInstance().save();\n  }\n\n  /**\n   * 点击 - 按钮\n   * @author Radish\n   */\n  public onClickSubMaxLaborForce() {\n    if (!subMaxLaborForce(State.getInstance(), \"1\")) {\n      App.getInstance().showAlert(\"目前不满足减少劳动力上限条件\");\n    } else {\n      State.getInstance().save();\n    }\n  }\n\n  /**\n   * 给道具增加劳动力分配\n   * @author Radish\n   */\n  public addLaborForceToProp(propId: string, num: string) {\n    if (addLaborForceToProp(State.getInstance(), propId, num)) {\n      State.getInstance().save();\n    } else {\n      App.getInstance().showAlert(\"劳动力不足\");\n    }\n  }\n\n  /**\n   * 给道具减少劳动力分配\n   * @author Radish\n   */\n  public subLaborForceFromProp(propId: string, num: string) {\n    if (subLaborForceFromProp(State.getInstance(), propId, num)) {\n      State.getInstance().save();\n    } else {\n      App.getInstance().showAlert(\"该道具已没有多余的劳动力\");\n    }\n  }\n\n  /**\n   * 保存\n   * @author Radish\n   */\n  public save() {\n    State.getInstance().save();\n  }\n\n  /**\n   * 清空账户数据\n   * @author Radish\n   */\n  public clean() {\n    delAccount();\n\n    if (cc.sys.isBrowser) {\n      window.location.href = window.location.href;\n    }\n  }\n\n  private onAttributeChanged(args: { route: string; value: any }) {\n    if (args.route === \"laborForce\" || args.route === \"maxLaborForce\") {\n      this.updateLabelUpdate();\n    }\n  }\n\n  /**\n   * 更新 labelNum 视图显示\n   * @author Radish\n   */\n  private updateLabelUpdate() {\n    this.labelNum.string = `${getLaborForce(\n      State.getInstance()\n    )}/${getMaxLaborForce(State.getInstance())}`;\n  }\n\n  @property(cc.Label)\n  labelNum: cc.Label = null;\n\n  @property(cc.ScrollView)\n  listView: cc.ScrollView = null;\n\n  @property(cc.Prefab)\n  cellTemplate: cc.Prefab = null;\n\n  private m_elapse: number = 0;\n}\n","/**\n * Demo 登录界面\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport App from \"../../../../App\";\nimport * as Utils from \"../../../../sys/Utils\";\nimport State from \"../../../State\";\nimport { getAccount, setAccount } from \"../../../system/LocalStorageSystem\";\n\n@ccclass\nexport default class DemoLoginComponent extends cc.Component {\n  async onLoad() {\n    await State.getInstance().loadConfigs();\n\n    let account = getAccount();\n    if (account) {\n      this.eBoxAccountInput.string = account;\n      await State.getInstance().loadAccount(account);\n      this.enterHome();\n    }\n  }\n\n  /**\n   * 点击登录\n   * @author Radish\n   */\n  public async onLoginClick() {\n    if (this.eBoxAccountInput.string === \"\" || !this.eBoxAccountInput.string) {\n      App.getInstance().showAlert(\"用户名不能为空\");\n      return;\n    }\n\n    let account = this.eBoxAccountInput.string.trim();\n    State.getInstance().set(\"user\", {\n      id: \"0\",\n      account,\n      name: account\n    });\n    setAccount(account);\n    State.getInstance().save();\n\n    await this.enterHome();\n  }\n\n  /**\n   * 进入家园界面\n   * @author Radish\n   */\n  private async enterHome() {\n    let resource = await Utils.loadPrefab(\"prefabs/DemoHome\");\n    let homeNode = cc.instantiate(resource);\n    App.getInstance().gameContainer.addChild(homeNode as cc.Node);\n    this.node.destroy();\n  }\n\n  @property(cc.EditBox)\n  eBoxAccountInput: cc.EditBox = null;\n}\n","/**\n * 放置道具列表中的单项元素\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport Localized from \"../../../../sys/i18n/Localized\";\nimport State from \"../../../State\";\nimport { IProp } from \"../../../Types\";\nimport Big from \"big.js\";\nimport { formatPropNum } from \"../../../utils/Formatter\";\n\nexport interface IProps {\n  id: string; // 道具 id\n  num: string; // 当前拥有数量\n  name: string; // 名字\n  increaseRate: string; // 增长率\n  laborForce: string; // 分配的妖怪种类数量\n\n  onPressPlus: () => void; // 点击 + 号按钮\n  onPressMinus: () => void; // 点击 - 号按钮\n}\n\n@ccclass\nexport class DemoPropCellComponent extends cc.Component {\n  onDestroy() {\n    State.getInstance().removeListener(\n      this.getListenerKey(),\n      this.onAttributeChanged\n    );\n  }\n\n  /**\n   * 初始化显示\n   * @author Radish\n   */\n  public initProps(props: IProps) {\n    if (this.m_isInit) {\n      return;\n    }\n\n    this.m_isInit = true;\n    this.m_props = props;\n\n    this.setNum(this.m_props.num);\n    this.setIncreaseRate(this.m_props.increaseRate);\n    this.setName(this.m_props.name);\n    this.setLaborForce(this.m_props.laborForce);\n\n    this.onAttributeChanged = this.onAttributeChanged.bind(this);\n    State.getInstance().on(this.getListenerKey(), this.onAttributeChanged);\n  }\n\n  /**\n   * 设置数量\n   * @author Radish\n   */\n  public setNum(value: string) {\n    this.labelNum.string = formatPropNum(value);\n  }\n\n  /**\n   * 设置名字\n   * @author Radish\n   */\n  public setName(value: string) {\n    this.labelName.string = value;\n  }\n\n  /**\n   * 设置增长率\n   * @author Radish\n   */\n  public setIncreaseRate(value: string) {\n    this.labelIncreaseRate.string =\n      Localized.getValueSync(\"增长率: \") +\n      value +\n      Localized.getValueSync(\"/秒\");\n\n    let bigValue = new Big(value);\n    if (bigValue.eq(0)) {\n      this.labelIncreaseRate.node.color = cc.Color.WHITE;\n    } else if (bigValue.lt(0)) {\n      this.labelIncreaseRate.node.color = cc.Color.RED;\n    } else {\n      this.labelIncreaseRate.node.color = cc.Color.GREEN;\n    }\n  }\n\n  /**\n   * 设置妖怪类别数量\n   * @author Radish\n   */\n  public setLaborForce(value: string) {\n    this.labelLaborForce.string = value;\n  }\n\n  /**\n   * 点击 + 号按钮\n   * @author Radish\n   */\n  public onPressPlus() {\n    this.m_props.onPressPlus();\n  }\n\n  /**\n   * 点击 - 号按钮\n   * @author Radish\n   */\n  public onPressMinus() {\n    this.m_props.onPressMinus();\n  }\n\n  /**\n   * 侦听 State 的属性修改\n   * @author Radish\n   */\n  private onAttributeChanged(args: { route: string; value: IProp }) {\n    this.setNum(args.value.num);\n    this.setLaborForce(args.value.laborForce);\n    this.setIncreaseRate(args.value.increaseRate);\n  }\n\n  /**\n   * 获得侦听的键\n   * @author Radish\n   */\n  private getListenerKey() {\n    return \"attribute_changed_\" + `props[${this.m_props.id}]`;\n  }\n\n  private m_props: IProps = null;\n  private m_isInit: boolean = false;\n\n  @property(cc.Label)\n  labelNum: cc.Label = null;\n\n  @property(cc.Label)\n  labelName: cc.Label = null;\n\n  @property(cc.Label)\n  labelIncreaseRate: cc.Label = null;\n\n  @property(cc.Label)\n  labelLaborForce: cc.Label = null;\n}\n","/**\n * 在 demo 中, 劳动力的处理方式\n * @author Radish\n */\n\nimport State from \"../State\";\nimport Big from \"big.js\";\n\nfunction add(state: State, route: string, addend: string): string {\n  let num: Big = new Big(state.get(route));\n  let result = num.plus(addend).toString();\n  state.set(route, result);\n  return result;\n}\n\nfunction isCanSub(state: State, route: string, subtractor: string): boolean {\n  let num: Big = new Big(state.get(route));\n  return num.gte(subtractor);\n}\n\nfunction sub(state: State, route: string, subtractor: string): boolean {\n  if (isCanSub(state, route, subtractor)) {\n    let num: Big = new Big(state.get(route));\n    state.set(route, num.minus(subtractor).toString());\n    return true;\n  }\n  return false;\n}\n\n/**\n * 获得当前劳动力的数量\n * @author Radish\n */\nexport function getLaborForce(state: State): string {\n  return state.get(\"laborForce\", \"0\");\n}\n\n/**\n * 获得当前劳动力的最大值\n * @author Radish\n */\nexport function getMaxLaborForce(state: State): string {\n  return state.get(\"maxLaborForce\", \"0\");\n}\n\n/**\n * 增加当前劳动力\n * @return 返回加法运算之后的结果\n * @author Radish\n */\nexport function addLaborForce(state: State, addend: string): string {\n  return add(state, \"laborForce\", addend);\n}\n\n/**\n * 判断是否能够减少当前劳动力总数\n * @returns true 可减, false 不可减\n * @author Radish\n */\nexport function isCanSubLaborForce(state: State, subtractor: string): boolean {\n  return isCanSub(state, \"laborForce\", subtractor);\n}\n\n/**\n * 减少当前劳动力\n * @return 如果减掉 subtractor 小于 0, 那么返回 false, 表示减法运算不成功; 否则返回 true.\n * @author Radish\n */\nexport function subLaborForce(state: State, subtractor: string): boolean {\n  return sub(state, \"laborForce\", subtractor);\n}\n\n/**\n * 增加劳动力上限\n * @author Radish\n */\nexport function addMaxLaborForce(\n  state: State,\n  addend: string\n): { laborForce: string; maxLaborForce: string } {\n  let laborForce = add(state, \"laborForce\", addend);\n  let maxLaborForce = add(state, \"maxLaborForce\", addend);\n  return { laborForce, maxLaborForce };\n}\n\n/**\n * 判断是否能够减少劳动力上限\n * @author Radish\n */\nexport function isCanSubMaxLaborForce(\n  state: State,\n  subtractor: string\n): boolean {\n  let laborForce = getLaborForce(state);\n  let maxLaborForce = getMaxLaborForce(state);\n  let result = laborForce == maxLaborForce;\n  if (result) {\n    return isCanSub(state, \"maxLaborForce\", subtractor);\n  }\n  return result;\n}\n\n/**\n * 判断是否能够减少劳动力上限\n * @author Radish\n */\nexport function subMaxLaborForce(state: State, subtractor: string): boolean {\n  if (isCanSubMaxLaborForce(state, subtractor)) {\n    sub(state, \"laborForce\", subtractor);\n    sub(state, \"maxLaborForce\", subtractor);\n    return true;\n  }\n  return false;\n}\n","/**\n * 分配劳动力给素材的相关功能\n * @author Radish\n */\n\nimport State from \"../State\";\nimport { IProp } from \"../Types\";\nimport { getProp } from \"./HandlePropSystem\";\nimport {\n  getLaborForce,\n  getMaxLaborForce,\n  addLaborForce,\n  subLaborForce\n} from \"./DeployLaborForceSystem\";\nimport Big from \"big.js\";\n\n/**\n * 给素材分配劳动力\n * @returns true 操作成功, false 操作失败\n * @author Radish\n */\nexport function addLaborForceToProp(\n  state: State,\n  propId: string,\n  addedLaborForce: string\n): boolean {\n  let prop = getProp(state, propId);\n  let bigCurrentLaborForce = new Big(getLaborForce(state));\n  let bigAddedLaborForce = new Big(addedLaborForce);\n  if (bigCurrentLaborForce.gte(bigAddedLaborForce)) {\n    prop.laborForce = bigAddedLaborForce.add(prop.laborForce).toString();\n    state.set(\"props[\" + prop.id + \"]\", prop);\n    subLaborForce(state, addedLaborForce);\n    return true;\n  }\n  return false;\n}\n\n/**\n * 给素材减少劳动力\n * @author Radish\n */\nexport function subLaborForceFromProp(\n  state: State,\n  propId: string,\n  subedLaborForce: string\n): boolean {\n  let prop = getProp(state, propId);\n  let bigPropCurrentLaborForce = new Big(prop.laborForce);\n  if (bigPropCurrentLaborForce.gte(subedLaborForce)) {\n    prop.laborForce = bigPropCurrentLaborForce\n      .minus(subedLaborForce)\n      .toString();\n    state.set(\"props[\" + prop.id + \"]\", prop);\n    addLaborForce(state, subedLaborForce);\n    return true;\n  }\n  return false;\n}\n","/**\n * 格式化文本相关处理\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport {\n  B_CONFINE_MAX,\n  K_CONFINE_MAX,\n  M_CONFINE_MAX,\n  G_CONFINE_MAX\n} from \"../Consts\";\n\n/**\n * 格式化道具当前数量文本\n * @author Radish\n */\nexport function formatPropNum(num: string): string {\n  let bigNum = new Big(num);\n  if (bigNum.lt(B_CONFINE_MAX)) {\n    return num;\n  } else if (bigNum.lt(K_CONFINE_MAX)) {\n    return bigNum.div(B_CONFINE_MAX).toFixed(2) + \"K\";\n  } else if (bigNum.lt(M_CONFINE_MAX)) {\n    return bigNum.div(K_CONFINE_MAX).toFixed(2) + \"M\";\n  } else if (bigNum.lt(G_CONFINE_MAX)) {\n    return bigNum.div(M_CONFINE_MAX).toFixed(2) + \"G\";\n  } else {\n    return bigNum.div(G_CONFINE_MAX).toFixed(2) + \"T\";\n  }\n}\n","/**\n * 处理道具相关功能的系统\n * @author Radish\n */\n\nimport State from \"../State\";\nimport { IProp, IPropConfig } from \"../Types\";\nimport { PLACE_PROP_ID } from \"../Consts\";\nimport Big from \"big.js\";\n\n/**\n * 获得道具的路由键\n * @author Radish\n */\nexport function getPropKey(propId: string) {\n  return \"props\" + `[${propId}]`;\n}\n\n/**\n * 获得默认的道具数据对象\n * @return 返回实际的实例引用\n * @author Radish\n */\nexport function getDefaultProp(propId: string): IProp {\n  return {\n    id: propId,\n    num: \"0\",\n    lastNum: \"0\",\n    laborForce: \"0\",\n    increaseRate: \"0\"\n  };\n}\n\n/**\n * 设置 prop\n * @author Radish\n */\nexport function setProp(state: State, prop: IProp) {\n  let route = getPropKey(prop.id);\n  state.set(route, prop);\n}\n\n/**\n * 获得指定道具数量\n * @returns 实例副本, 浅拷贝\n * @author Radish\n */\nexport function getProp(state: State, propId: string): IProp {\n  let route = getPropKey(propId);\n  let prop = state.get(route, getDefaultProp(propId));\n  return Object.assign({}, prop);\n}\n\n/**\n * 计算增长率\n * @author Radish\n */\nexport function calculateIncreaseRate(\n  state: State,\n  propId: string,\n  duration: number\n) {\n  let prop: IProp = getProp(state, propId);\n  let bigNum = new Big(prop.num);\n  prop.increaseRate = bigNum\n    .sub(prop.lastNum)\n    .div(duration)\n    .toString();\n  setProp(state, prop);\n}\n\n/**\n * 计算纯的增长数量\n * @author Radish\n */\nfunction calculatePureProduceNum(state: State, propId: string, duration: number) {\n  let prop = getProp(state, propId);\n  let config = state.configs.props[propId];\n  return new Big(config.place.numPerSec)\n    .mul(config.place.numPerLaborForce)\n    .mul(prop.laborForce)\n    .mul(duration)\n    .toString();\n}\n\n/**\n * 道具生产\n * @author Radish\n */\nfunction produceProp(\n  state: State,\n  propId: string,\n  filter: { [k: string]: boolean },\n  duration: number\n) {\n  if (filter[propId]) {\n    return;\n  }\n  filter[propId] = true;\n\n  let config: IPropConfig = state.configs.props[propId];\n  if (config.place) {\n    let prop = getProp(state, propId);\n\n    if (config.place.dependencies) {\n      // 1. 预计算总消耗量\n      let advanceProduceNum = calculatePureProduceNum(state, propId, duration);\n      let actualProduceNum: Big = new Big(advanceProduceNum);\n\n      // 2. 生产依赖的素材\n      for (let { id, num } of config.place.dependencies) {\n        produceProp(state, id, filter, duration);\n\n        let depProp = getProp(state, id);\n\n        // 2.1 计算依赖道具需要的消耗\n        let bigConsume = new Big(num).mul(advanceProduceNum);\n\n        // 2.2 如果依赖道具不足, 那么根据当前依赖道具拥有的数量, 计算出实际合成产出, 这个产出是所有依赖道具所能产生的最小值\n        if (bigConsume.gt(depProp.num)) {\n          let tempActualProduceNum = new Big(depProp.num).div(num);\n          if (actualProduceNum.gt(tempActualProduceNum)) {\n            actualProduceNum = tempActualProduceNum;\n          }\n        }\n      }\n\n      // 没有生产则直接返回\n      if (actualProduceNum.eq(\"0\")) {\n        return;\n      }\n\n      // 3. 计算累加合成道具的数量\n      prop.num = actualProduceNum.add(prop.num).toString();\n      setProp(state, prop);\n\n      // 4. 根据实际的产出数量计算依赖道具的消耗\n      for (const { id, num } of config.place.dependencies) {\n        let depProp = getProp(state, id);\n        let consume: Big = new Big(num).mul(actualProduceNum);\n        depProp.num = new Big(depProp.num).sub(consume).toString();\n        setProp(state, depProp);\n      }\n    } else {\n      prop.num = new Big(calculatePureProduceNum(state, propId, duration)).add(prop.num).toString();\n      setProp(state, prop);\n    }\n  }\n}\n\n/**\n * 更新道具的数量\n * @author Radish\n */\nexport function produceProps(state: State, duration: number) {\n  for (let id of PLACE_PROP_ID) {\n    let prop = getProp(state, id);\n    prop.lastNum = prop.num;\n    setProp(state, prop);\n  }\n\n  let filter: { [k: string]: boolean } = {};\n  for (let id of PLACE_PROP_ID) {\n    produceProp(state, id, filter, duration);\n  }\n\n  for (let id of PLACE_PROP_ID) {\n    calculateIncreaseRate(state, id, duration);\n  }\n}\n","import { IOrigin } from \"../Types\";\n\n/**\n * 初始化 State.origin\n * @author Radish\n */\n\nexport function initOrigin(origin: IOrigin) {\n  if (!origin.timestamp) {\n    origin.timestamp = Date.now();\n  }\n\n  return origin;\n}\n\n","/**\n * 本地存储相关处理\n * @author Radish\n */\n\n/**\n * 获得本地存储的账户\n * @author Radish\n */\nexport function getAccount() {\n  return cc.sys.localStorage.getItem(\"account\");\n}\n\n/**\n * 设置本地存储的账户数据\n * @author Radish\n */\nexport function setAccount(account: string) {\n  cc.sys.localStorage.setItem(\"account\", account);\n}\n\n/**\n * 删除本地缓存的账户信息\n * @author Radish\n */\nexport function delAccount() {\n  cc.sys.localStorage.removeItem(\"account\");\n}\n","/**\n * i18n 处理\n * @author Radish\n */\n\nimport NativeResponse from \"../../native/NativeResponse\";\n\nexport default class Localized {\n  /**\n   * 获得当前使用语言标识\n   * @author Radish\n   */\n  public static async getLanguage() {\n    if (!this.s_language) {\n      if (cc.sys.isBrowser) {\n        this.s_language = this.process(window.navigator.language);\n        return Promise.resolve(this.s_language);\n      }\n\n      if (cc.sys.os === cc.sys.OS_IOS) {\n        return new Promise(resolve => {\n          jsb.reflection.callStaticMethod(\n            \"QXQUtils\",\n            \"getLanguage:\",\n            JSON.stringify({\n              callback: NativeResponse.push((value: string) => {\n                this.s_language = this.process(value);\n                resolve(this.s_language);\n              })\n            })\n          );\n        });\n      } else {\n        this.s_language = \"en\";\n        return Promise.resolve(this.s_language);\n      }\n    } else {\n      return Promise.resolve(this.s_language);\n    }\n  }\n\n  /**\n   * 本地化文本内容, 异步\n   * @author Radish\n   */\n  public static async getValue(key: string) {\n    await this.loadLocalizedText();\n    return this.getValueSync(key);\n  }\n\n  /**\n   * 本地化文本内容, 同步\n   * @author Radish\n   */\n  public static getValueSync(key: string) {\n    let value = this.s_dict[key];\n    if (!value) {\n      value = this.s_defaultDict[key];\n      if (!value) {\n        return key;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * 获得默认的 TTF 字体\n   * @author Radish\n   */\n  public static async getDefaultTTF() {\n    let language = await this.getLanguage();\n    return language + \"/fonts/default.ttf\";\n  }\n\n  /**\n   * 本地化 label 控件\n   * @author Radish\n   */\n  public static async localizeLabel(label: cc.Label) {\n    label.string = await this.getValue(label.string);\n    return new Promise(async (resolve, reject) => {\n      cc.loader.loadRes(await this.getDefaultTTF(), cc.Font, (err, font) => {\n        if (err) {\n          if (CC_DEBUG) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        } else {\n          label.font = font;\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * 获得本地化资源\n   * @author Radish\n   */\n  public static async getLocalizedRes(url: string) {\n    let language = await this.getLanguage();\n    return language + \"/\" + url;\n  }\n\n  /**\n   * 对浏览器/终端返回的语言字符串做处理\n   * @author Radish\n   */\n  private static process(value: string): string {\n    value = value.toLocaleLowerCase();\n    cc.log(`=> process value = ${value}`);\n\n    if (value.indexOf(\"zh-hant\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-hans\") !== -1) {\n      return \"zh-hans\";\n    } else if (value.indexOf(\"zh-tw\") !== -1 || value.indexOf(\"zh-hk\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-cn\") !== -1) {\n      return \"zh-hans\";\n    } else if (value === \"zh\") {\n      return \"zh-hans\";\n    } else {\n      return \"en\";\n    }\n  }\n\n  /**\n   * 加载本地化的文本\n   * @author Radish\n   */\n  private static async loadLocalizedText() {\n    if (this.s_dict === null && this.s_defaultDict === null) {\n      let language = await this.getLanguage();\n      let p1 = new Promise(async (resolve, reject) => {\n        cc.loader.loadRes(language + \"/configs/Localized\", (err, file) => {\n          if (!err) {\n            this.s_dict = file.json;\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n\n      let p2 = new Promise((resolve, reject) => {\n        cc.loader.loadRes(language + \"/configs/Localized\", (err, file) => {\n          if (!err) {\n            this.s_defaultDict = file.json;\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n      return p1.then(() => p2).catch(() => p2);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  private static s_language: string = null;\n  private static s_dict: { [k: string]: string } = {};\n  private static s_defaultDict: { [k: string]: string } = {};\n}\n","const { ccclass } = cc._decorator;\n\nimport App from \"./App\";\nimport * as Utils from \"./sys/Utils\";\n\nconst LoginPrefabPath = \"prefabs/DemoLogin\";\n\n@ccclass\nexport default class MainComponent extends cc.Component {\n  async onLoad() {\n    App.getInstance().main = this.node;\n\n    let resource = await Utils.loadPrefab(LoginPrefabPath);\n    let loginNode = cc.instantiate(resource);\n    App.getInstance().gameContainer.addChild(loginNode as cc.Node);\n  }\n}\n","/**\n * Native 回调管理相关\n * @author Radish\n */\n\nlet s_session: number = 0;\nlet s_callbacks: { [s: number]: (value: string) => void } = {};\n\nexport default class NativeResponse {\n  /**\n   * 添加回调函数\n   * @author Radish\n   */\n  public static push(callback: (value: string) => void): number {\n    let session = ++s_session;\n    s_callbacks[session] = callback;\n    return session;\n  }\n}\n\nif (cc.sys.isNative) {\n  if (!jsb.onNativeResponse) {\n    jsb.onNativeResponse = (\n      session: number,\n      value?: string,\n      isRemove: boolean = true\n    ) => {\n      if (value === null || value === undefined) {\n        delete s_callbacks[session];\n      } else {\n        let callback = s_callbacks[session];\n        if (callback) {\n          callback(value);\n\n          if (isRemove) {\n            delete s_callbacks[session];\n          }\n        }\n      }\n    };\n  }\n}\n","/**\n * 数据相关处理内容\n * @author Radish\n */\n\nimport { EventEmitter } from \"events\";\nimport * as _ from \"lodash\";\nimport * as Utils from \"../sys/Utils\";\nimport Localized from \"../sys/i18n/Localized\";\nimport { IOrigin, IConfig } from \"./Types\";\nimport { initOrigin } from \"./system/InitOriginSystem\";\n\ninterface IStateExtend {\n  [k: string]: any;\n}\n\nexport default class State extends EventEmitter implements IStateExtend {\n  /**\n   * 获得 State 实例\n   * @author Radish\n   */\n  public static getInstance() {\n    if (this.s_instance === null) {\n      this.s_instance = new State();\n    }\n    return this.s_instance;\n  }\n\n  /**\n   * 设置 origin 值\n   * @author Radish\n   */\n  public set<T>(route: string, value: T) {\n    _.set(this.m_origin, route, value);\n    this.emit(\"attribute_changed\", { route, value });\n    this.emit(\"attribute_changed_\" + route, { route, value });\n  }\n\n  /**\n   * 获得 origin 值\n   * @author Radish\n   */\n  public get<T>(route: string, defaultValue?: T): T {\n    let value = _.get(this.m_origin, route);\n    if ((value === null || value === undefined) && defaultValue !== undefined) {\n      _.set(this.m_origin, route, defaultValue);\n      return defaultValue;\n    }\n    return value;\n  }\n\n  /**\n   * 获得 origin 实例\n   * @author Radish\n   */\n  public get origin() {\n    return this.m_origin;\n  }\n\n  /**\n   * 获得 configs 实例\n   * @author Radish\n   */\n  public get configs() {\n    return this.m_configs;\n  }\n\n  /**\n   * 数据存档\n   * @author Radish\n   */\n  public async save() {\n    cc.sys.localStorage.setItem(\n      this.getOriginLocalStorageKey(this.m_origin.user.account),\n      JSON.stringify(this.m_origin)\n    );\n  }\n\n  /**\n   * 加载配置\n   * @author Radish\n   */\n  public async loadConfigs() {\n    let propConfigs = await Utils.loadJson(\n      await Localized.getLocalizedRes(\"configs/Props\")\n    );\n    _.set(this.configs, \"props\", propConfigs);\n  }\n\n  /**\n   * 读取存档数据\n   * @author Radish\n   */\n  public async loadAccount(account: string) {\n    let jsonOrigin = cc.sys.localStorage.getItem(\n      this.getOriginLocalStorageKey(account)\n    );\n\n    if (jsonOrigin) {\n      this.m_origin = initOrigin(JSON.parse(jsonOrigin));\n    }\n  }\n\n  /****************************************************************************************************\n   * private\n   ****************************************************************************************************/\n\n  /**\n   * 获得本地存储玩家数据的键\n   * @author Radish\n   */\n  private getOriginLocalStorageKey(account: string) {\n    return account + \"-origin\";\n  }\n\n  private m_origin: IOrigin = {\n    user: {},\n    laborForce: \"0\",\n    props: {},\n    timestamp: Date.now()\n  };\n\n  private m_configs: IConfig = {\n    props: {}\n  };\n\n  private constructor() {\n    super();\n\n    if (State.s_instance) {\n      new Error(\"State is already init.\");\n    }\n  }\n  private static s_instance: State = null;\n}\n","/**\n * 常用的工具整合\n * @author Radish\n */\n\n/**\n * 加载 cc.Prefab 资源\n * @author Radish\n */\nexport async function loadPrefab(url: string) {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, cc.Prefab, (err, resource) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(resource);\n      }\n    });\n  });\n}\n\n/**\n * 加载 json 资源\n * @author Radish\n */\nexport async function loadJson(url: string) {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, (err, jsonAssets) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(jsonAssets.json);\n      }\n    });\n  });\n}\n"],"sourceRoot":"/source/","file":"project.js"}