{"version":3,"sources":["assets/Script/ui/ActivityNode.ts","assets/Script/native/AnalyticsUtils.ts","assets/Script/AnswersConstants.ts","assets/Script/AnswersDictionary.ts","assets/Script/App.ts","assets/Script/utils/ButtonUtils.ts","assets/Script/ui/DeveloperInfo.ts","assets/Script/ui/EvaluateAnimation.ts","assets/Script/LocalizedDictionary.ts","assets/Script/utils/i18n/Localized.ts","assets/Script/MainNode.ts","assets/Script/native/NativeResponse.ts","assets/Script/ui/PurchaseInfo.ts","assets/Script/test/TestAnalytiesUtils.ts","assets/Script/utils/Utils.ts"],"names":["_a","cc","_decorator","ccclass","property","ActivityNode","_super","_this","apply","this","arguments","icon","__extends","prototype","onEnable","log","stopAllActions","runAction","repeatForever","rotateBy","onDisable","__decorate","Node","Component","exports","default","AnalyticsUtils","trackPageAppear","page","sys","isNative","os","OS_IOS","jsb","reflection","callStaticMethod","JSON","stringify","trackPageDisappear","trackEvent","name","properties","trackEventDurationBegin","trackEventDurationEnd","trackEventWithDuration","duration","STORAGE_KEYS","SHOW_COUNT","IS_EVALUATE","EVALUATE_TIME","EVALUATE","SHOW_COUNT_MAX","EVALUATE_TIME_MAX","APP","APPLE_APP_ID","CAPTURE_SCREEN_FILE_NAME","EVENT","CHANGE_IS_EVALUATE","AnswersDictionary","rawdata","m_arrayText","m_dictText","splitRawdata","_i","length","t","randomText","index","parseInt","Math","random","toString","text","replace","patch","push","texts","split","AnswersDictionary_1","require","AnswersConstants_1","Localized_1","s_app","App","m_isInit","m_answersDictionary","m_showCount","m_isEvaluate","m_evaluateTime","mainNode","bottomNode","middleNode","topNode","activityNode","getInstance","Object","defineProperty","get","init","Promise","resolve","reject","__awaiter","getLanguage","language","sent","loader","loadRes","err","file","load","url","content","localStorage","getItem","time","set","value","setItem","now","removeItem","director","emit","isEvaluate","showCount","active","BLACK","color","WHITE","Color","ButtonUtils","onColor","button","childName","child_1","node","getChildByName","on","EventType","TOUCH_START","TOUCH_END","children","offColor","off","App_1","NativeResponse_1","AnalyticsUtils_1","Utils_1","DeveloperInfo","labelWebsite","labelEmail","onLoad","btnDonate","find","angle","actions","rotateTo","easing","easeOut","easeElasticOut","delayTime","sequence","isPressed","hide","show","onDestroy","bg","y","getContentSize","height","moveBy","callFunc","destroy","onClickPurchase","Prefab","resource","instantiate","addChild","onClickCopyEmail","string","callback","showAlert","getValue","onClickCopyWebsite","onClickGoWebsite","openURL","onClickSendEmail","subject","toRecipients","isBrowser","window","location","href","Label","EvaluateAnimation","easeSineOut","easeSineInOut","LocalizedDictionary","s_instance","Localized","s_language","process","navigator","p1","s_dict","json","p2","s_defaultDict","then","catch","key","localizeLabel","label","toLocaleLowerCase","indexOf","ButtonUtils_1","MainNode","labelAnswer","btnInfo","btnEvaluate","btnShare","rawcclog_1","msg","rest","concat","console","onHide","onShow","showAnswer","_d","_b","_c","fontSize","size","setContentSize","app","getComponent","Button","onChangeIsEvaluate","bind","answersDictionary","opacity","fadeIn","fadeOut","isShowEvaluate","duration1","onClickInfo","showDevelopInfo","onClickEvaluate","appId","isUseAppStore","parse","state","onClickShare","path","fileUtils","getWritablePath","captureScreen","result","child","removeChild","error","resounce","winSize","s_session","s_callbacks","NativeResponse","session","onNativeResponse","isRemove","undefined","PRODUCT_IDENTIFIERS","PurchaseInfo","labelTitle","labelClose","btnDonateWater","btnDonateCoffee","btnDonateNoodles","m_buttons","m_products","initButtons","data","action","product","findProduct","payment","productIdentifier","localizedDescription","identifiers","products","p","identifier","initButton","onClickDonate","eventTouch","onClickClose","dot","price","currencySymbol","localizedTitle","buttons","buttons_1","b","TestAnalyticsUtils","onClickPageAppear","onClickPageDisappear","onClickTrackEvent","onClickTrackEventWithProperties","key1","key2","onClickTrackEventDurationBegin","onClickTrackEventDurationEnd","onClickTrackEventDuration","Utils","parent","filePath","width","camera","addComponent","Camera","texture","RenderTexture","initWithSize","targetTexture","scaleY","render","readPixels","fullPath","isFileExist","removeFile","saveImageData","title","message","buttonTitles","forEach","style","idx"],"mappings":"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","sourcesContent":["/**\n * 顶层屏蔽触摸节点\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ActivityNode extends cc.Component {\n  onEnable() {\n    cc.log(\"=> ActivityNode Enabled\");\n    this.icon.stopAllActions();\n    this.icon.runAction(cc.repeatForever(cc.rotateBy(0.3, -90)));\n  }\n\n  onDisable() {\n    cc.log(\"=> ActivityNode Disable\");\n    this.icon.stopAllActions();\n  }\n\n  @property(cc.Node)\n  icon: cc.Node = null;\n}\n\n","/**\n * 分析统计 SDK 调用接口\n * @author Radish\n */\n\nexport default class AnalyticsUtils {\n  /**\n   * 页面呈现时调用\n   * @author Radish\n   */\n  public static trackPageAppear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageAppear:\",\n        JSON.stringify({ page })\n      );\n    }\n  }\n\n  /**\n   * 页面关闭时调用\n   * @author Radish\n   */\n  public static trackPageDisappear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageDisappear:\",\n        JSON.stringify({ page })\n      );\n    }\n  }\n\n  /**\n   * 追踪事件\n   * @author Radish\n   */\n  public static trackEvent(name: string, properties?: { [k: string]: string }) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEvent:\",\n        JSON.stringify({ name, properties })\n      );\n    }\n  }\n\n  /**\n   * 上报事件开始\n   * @author Radish\n   */\n  public static trackEventDurationBegin(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationBegin:\",\n        JSON.stringify({ name })\n      );\n    }\n  }\n\n  /**\n   * 上报事件结束\n   * @author Radish\n   */\n  public static trackEventDurationEnd(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationEnd:\",\n        JSON.stringify({ name })\n      );\n    }\n  }\n\n  /**\n   * 上报一个带时长的事件\n   * @author Radish\n   */\n  public static trackEventWithDuration(name: string, duration: number) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventWithDuration:\",\n        JSON.stringify({ name, duration })\n      );\n    }\n  }\n}\n","/**\n * 一些常量定义\n * @author Radish\n */\n\nexport default {\n  // 本地存储使用的键\n  STORAGE_KEYS: {\n    SHOW_COUNT: \"SHOW_COUNT\", // 展示次数\n    IS_EVALUATE: \"IS_EVALUATE\", // 是否评分\n    EVALUATE_TIME: \"EVALUATE_TIME\" // 评分时间\n  },\n\n  // 评价相关\n  EVALUATE: {\n    SHOW_COUNT_MAX: 10, // 展示最大次数, 超过该次数将推送评分\n    EVALUATE_TIME_MAX: 60 * 60 * 24 * 90 * 1000 // 评分间隔时间, 超过该时间, 将再次展示评分, 毫秒为单位\n  },\n\n  // 应用相关\n  APP: {\n    APPLE_APP_ID: \"1446266225\", // Apple app id\n    CAPTURE_SCREEN_FILE_NAME: \"tmp_capture_screen.png\" // 截屏保存图片名\n  },\n\n  // 事件\n  EVENT: {\n    CHANGE_IS_EVALUATE: \"CHANGE_IS_EVALUATE\" // 评价属性改变\n  }\n};\n","/**\n * 答案字典, 管理答案数据\n * @author Radish\n */\n\nconst SPLIT_CHARACTERS_1 = \";\\n\";\nconst SPLIT_CHARACTERS_2 = \";\\r\\n\";\n\nexport default class AnswersDictionary {\n  constructor(rawdata: string) {\n    this.m_arrayText = this.splitRawdata(rawdata);\n    for (let t of this.m_arrayText) {\n      this.m_dictText[t] = true;\n    }\n  }\n\n  /**\n   * 随机挑选出使用的文本\n   * @author Radish\n   */\n  public randomText() {\n    let index = parseInt((this.m_arrayText.length * Math.random()).toString());\n    cc.log(`=> index = ${index}`);\n\n    let text = this.m_arrayText[index];\n    cc.log(`=> text = ${text}`);\n\n    return text.replace(\"|\", \"\\n\");\n  }\n\n  /**\n   * 补充答案内容\n   * @author Radish\n   */\n  public patch(rawdata: string) {\n    for (let t of this.splitRawdata(rawdata)) {\n      if (!this.m_dictText[t]) {\n        this.m_arrayText.push(t);\n        this.m_dictText[t] = true;\n      }\n    }\n  }\n\n  /**\n   * 解析文本数据\n   * @author Radish\n   */\n  private splitRawdata(rawdata: string) {\n    let texts = rawdata.split(SPLIT_CHARACTERS_1);\n    if (texts.length === 1) {\n      texts = rawdata.split(SPLIT_CHARACTERS_2);\n    }\n    return texts;\n  }\n\n  private m_arrayText: string[] = [];\n  private m_dictText: { [k: string]: boolean } = {};\n}\n","/**\n * 当前应用实例, 单例\n * @author Radish\n */\n\nimport AnswersDictionary from \"./AnswersDictionary\";\nimport Constants from \"./AnswersConstants\";\nimport Localized from \"./utils/i18n/Localized\";\n\nlet s_app: App = null;\n\nexport default class App {\n  /**\n   * 获得唯一的 App 实例\n   * @author Radish\n   */\n  public static getInstance(): App {\n    if (s_app === null) {\n      s_app = new App();\n    }\n    return s_app;\n  }\n\n  /**\n   * 获得 AnswersDictionary 对象\n   * @author Radish\n   */\n  public get answersDictionary(): AnswersDictionary {\n    return this.m_answersDictionary;\n  }\n\n  /**\n   * 初始化\n   * @author Radish\n   */\n  public async init() {\n    if (this.m_isInit) {\n      return;\n    }\n\n    this.m_isInit = true;\n\n    let promise = new Promise(async (resolve, reject) => {\n      let language = await Localized.getLanguage();\n      cc.loader.loadRes(\"configs/answers-\" + language, (err, file) => {\n        if (err) {\n          reject(err);\n        } else {\n          // 从本地文件初始化数据\n          this.m_answersDictionary = new AnswersDictionary(file.text);\n\n          // 从网络读取资源\n          cc.loader.load({ url: \"http://www.qxqplant.com/answers/configs/answers-patch-\" + language + \".txt\"}, (err, content) => {\n            if (err) {\n              cc.log(err);\n            } else {\n              this.m_answersDictionary.patch(content);\n            }\n          });\n\n          this.m_showCount = cc.sys.localStorage.getItem(\n            Constants.STORAGE_KEYS.SHOW_COUNT\n          );\n          if (!this.m_showCount) {\n            this.m_showCount = 0;\n          }\n\n          this.m_isEvaluate = cc.sys.localStorage.getItem(\n            Constants.STORAGE_KEYS.IS_EVALUATE\n          );\n          if (!this.m_isEvaluate) {\n            this.m_isEvaluate = false;\n          } else {\n            let time = cc.sys.localStorage.getItem(\n              Constants.STORAGE_KEYS.EVALUATE_TIME\n            );\n            if (time) {\n              this.m_evaluateTime = parseInt(time);\n            }\n          }\n\n          resolve();\n        }\n      });\n    });\n\n    return promise;\n  }\n\n  public get showCount() {\n    return this.m_showCount;\n  }\n\n  public set showCount(value) {\n    this.m_showCount = value;\n    cc.sys.localStorage.setItem(\n      Constants.STORAGE_KEYS.SHOW_COUNT,\n      this.m_showCount\n    );\n  }\n\n  public get isEvaluate() {\n    return this.m_isEvaluate;\n  }\n\n  public set isEvaluate(value) {\n    this.m_isEvaluate = value;\n    cc.sys.localStorage.setItem(\n      Constants.STORAGE_KEYS.IS_EVALUATE,\n      this.m_isEvaluate\n    );\n\n    if (this.m_isEvaluate) {\n      this.m_evaluateTime = cc.sys.now();\n      cc.sys.localStorage.setItem(\n        Constants.STORAGE_KEYS.EVALUATE_TIME,\n        this.m_evaluateTime\n      );\n    } else {\n      this.m_evaluateTime = null;\n      cc.sys.localStorage.removeItem(Constants.STORAGE_KEYS.EVALUATE_TIME);\n    }\n\n    cc.director.emit(Constants.EVENT.CHANGE_IS_EVALUATE);\n  }\n\n  /**\n   * 判断是否展示评分\n   * @returns true 展示, false 不展示\n   * @author Radish\n   */\n  public get isShowEvaluate() {\n    if (!this.isEvaluate) {\n      if (this.showCount >= Constants.EVALUATE.SHOW_COUNT_MAX) {\n        return true;\n      }\n    } else {\n      if (this.m_evaluateTime) {\n        let now = cc.sys.now();\n        if (now - this.m_evaluateTime >= Constants.EVALUATE.EVALUATE_TIME_MAX) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 触摸屏蔽层控制\n   * @author Radish\n   */\n  public set active(value: boolean) {\n    this.activityNode.active = value;\n  }\n\n  private constructor() {}\n  private m_isInit: boolean = false;\n  private m_answersDictionary: AnswersDictionary = null;\n  private m_showCount = 0;\n  private m_isEvaluate = false;\n  private m_evaluateTime = null;\n\n  public mainNode: cc.Node = null;\n  public bottomNode: cc.Node = null;\n  public middleNode: cc.Node = null;\n  public topNode: cc.Node = null;\n  public activityNode: cc.Node = null;\n}\n","const BLACK = cc.color(128, 128, 128);\nconst WHITE = cc.Color.WHITE;\n\nexport default class ButtonUtils {\n  /**\n   * 给 button 添加点击着色处理\n   * @author Radish\n   */\n  public static onColor(button: cc.Button, childName?: string) {\n    if (childName) {\n      let child = button.node.getChildByName(childName);\n\n      button.node.on(cc.Node.EventType.TOUCH_START, () => {\n        if (child) {\n          child.color = BLACK;\n        }\n      });\n\n      button.node.on(cc.Node.EventType.TOUCH_END, () => {\n        if (child) {\n          child.color = WHITE;\n        }\n      });\n    } else {\n      button.node.on(cc.Node.EventType.TOUCH_START, () => {\n        for (let c of button.node.children) {\n          c.color = BLACK;\n        }\n      });\n\n      button.node.on(cc.Node.EventType.TOUCH_END, () => {\n        for (let c of button.node.children) {\n          c.color = WHITE;\n        }\n      });\n    }\n  }\n\n  /**\n   * 取消 button 之前添加的着色处理\n   * @author Radish\n   */\n  public static offColor(button: cc.Button) {\n    button.node.off(cc.Node.EventType.TOUCH_START);\n    button.node.off(cc.Node.EventType.TOUCH_END);\n  }\n}\n","const { ccclass, property } = cc._decorator;\n\nimport App from \"../App\";\nimport NativeResponse from \"../native/NativeResponse\";\nimport AnalyticsUtils from \"../native/AnalyticsUtils\";\nimport Utils from \"../utils/Utils\";\nimport Localized from \"../utils/i18n/Localized\";\n\n@ccclass\nexport default class DeveloperInfo extends cc.Component {\n  onLoad() {\n    AnalyticsUtils.trackEvent(\"DevelopInfoPage\");\n\n    // donate 按钮动画\n    let btnDonate: cc.Node = cc.find(\"bg/btnDonate\", this.node);\n    btnDonate.angle = 0;\n    let actions: cc.ActionInstant[] = [];\n    actions.push(cc.rotateTo(0.8, -18).easing(cc.easeOut(3.0)));\n    actions.push(cc.rotateTo(0.45, 0).easing(cc.easeElasticOut(0.3)));\n    actions.push(cc.delayTime(1.618));\n    btnDonate.runAction(cc.repeatForever(cc.sequence(actions)));\n\n    // 触摸其他区域关闭当前界面\n    let isPressed = false;\n    this.node.on(cc.Node.EventType.TOUCH_START, () => {\n      isPressed = true;\n    });\n\n    this.node.on(cc.Node.EventType.TOUCH_END, () => {\n      if (isPressed) {\n        isPressed = false;\n        this.hide();\n      }\n    });\n\n    this.show();\n  }\n\n  onDestroy() {}\n\n  /**\n   * 展示\n   * @author Radish\n   */\n  show() {\n    let bg: cc.Node = this.node.getChildByName(\"bg\");\n    bg.stopAllActions();\n\n    bg.y = -bg.getContentSize().height;\n    bg.runAction(cc.moveBy(0.1, 0, bg.getContentSize().height));\n  }\n\n  /**\n   * 隐藏\n   * @author Radish\n   */\n  hide() {\n    let bg: cc.Node = this.node.getChildByName(\"bg\");\n    bg.stopAllActions();\n\n    bg.y = 0;\n    bg.runAction(\n      cc.sequence([\n        cc.moveBy(0.1, 0, -bg.getContentSize().height),\n        cc.callFunc(() => {\n          this.node.destroy();\n        })\n      ])\n    );\n  }\n\n  /**\n   * 点击购买按钮\n   * @author Radish\n   */\n  onClickPurchase() {\n    cc.loader.loadRes(\n      \"prefabs/purchaseInfo\",\n      cc.Prefab,\n      (err: Error, resource: any) => {\n        if (!err) {\n          let node: cc.Node = cc.instantiate(resource);\n          App.getInstance().topNode.addChild(node);\n        }\n      }\n    );\n  }\n\n  /**\n   * 点击复制邮件\n   * @author Radish\n   */\n  onClickCopyEmail() {\n    if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"QXQUtils\",\n        \"copyText:\",\n        JSON.stringify({\n          text: this.labelEmail.string,\n          callback: NativeResponse.push(() => {\n            Utils.showAlert(\n              \"\",\n              Localized.getValue(\"#copy_email_success_content\"),\n              [Localized.getValue(\"#btn_confirm\")]\n            );\n          })\n        })\n      );\n    }\n  }\n\n  /**\n   * 点击复制网址\n   * @author Radish\n   */\n  onClickCopyWebsite() {\n    if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"QXQUtils\",\n        \"copyText:\",\n        JSON.stringify({\n          text: this.labelWebsite.string,\n          callback: NativeResponse.push(() => {\n            Utils.showAlert(\n              \"\",\n              Localized.getValue(\"#copy_website_success_content\"),\n              [Localized.getValue(\"#btn_confirm\")]\n            );\n          })\n        })\n      );\n    }\n  }\n\n  /**\n   * 点击去指定网站\n   * @author Radish\n   */\n  onClickGoWebsite() {\n    cc.sys.openURL(this.labelWebsite.string);\n  }\n\n  /**\n   * 点击发送邮件\n   * @author Radish\n   */\n  onClickSendEmail() {\n    const subject = Localized.getValue(\"#mail_subject_feedback\");\n    const content = \"\\n\\n\\n\\n\\n\\n\" + Localized.getValue(\"#mail_content_thanks\");\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"QXQUtils\",\n        \"sendEmail:\",\n        JSON.stringify({\n          subject,\n          toRecipients: [this.labelEmail.string],\n          content,\n          callback: NativeResponse.push((value: string) => {\n            cc.log(`=> ${value}`);\n          })\n        })\n      );\n    } else if (cc.sys.isBrowser) {\n      window.location.href = `mailto:${\n        this.labelEmail.string\n      }?subject=${subject}&body=${content}`;\n    }\n  }\n\n  @property(cc.Label)\n  labelWebsite: cc.Label = null;\n\n  @property(cc.Label)\n  labelEmail: cc.Label = null;\n}\n","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class EvaluateAnimation extends cc.Component {\n  onLoad() {\n    const angle = 8;\n    this.node.runAction(cc.sequence([cc.rotateBy(0.3, -angle).easing(cc.easeSineOut()), cc.callFunc(() => {\n      let actions: cc.ActionInterval[] = [];\n      actions.push(cc.rotateBy(0.8, angle * 2).easing(cc.easeSineInOut()));\n      actions.push(cc.rotateBy(0.8, -angle * 2).easing(cc.easeSineInOut()));\n      this.node.runAction(cc.repeatForever(cc.sequence(actions)));\n    })]));\n  }\n}\n","/**\n * 本地化字典\n * @author Radish\n */\n\nexport default class LocalizedDictionary {\n  /**\n   * 获得 LocalizedDictionary 实例\n   * @author Radish\n   */\n  public static getInstance(): LocalizedDictionary {\n    if (!this.s_instance) {\n      this.s_instance = new LocalizedDictionary();\n    }\n    return this.s_instance;\n  }\n\n  private constructor() {\n    let language = cc.sys.language;\n    \n  }\n\n  private static s_instance = null;\n}\n","/**\n * i18n 处理\n * @author Radish\n */\n\nimport NativeResponse from \"../../native/NativeResponse\";\n\nexport default class Localized {\n  /**\n   * 获得当前使用语言标识\n   * @author Radish\n   */\n  public static async getLanguage() {\n    if (!this.s_language) {\n      if (cc.sys.isBrowser) {\n        this.s_language = this.process(window.navigator.language);\n        return Promise.resolve(this.s_language);\n      }\n      if (cc.sys.os === cc.sys.OS_IOS) {\n        return new Promise((resolve, reject) => {\n          jsb.reflection.callStaticMethod(\n            \"QXQUtils\",\n            \"getLanguage:\",\n            JSON.stringify({\n              callback: NativeResponse.push((value: string) => {\n                this.s_language = this.process(value);\n                resolve(this.s_language);\n              })\n            })\n          );\n        });\n      } else {\n        this.s_language = \"en\";\n        return Promise.resolve(this.s_language);\n      }\n    } else {\n      return this.s_language;\n    }\n  }\n\n  /**\n   * 初始化\n   * @author Radish\n   */\n  public static async init() {\n    let language = await this.getLanguage();\n\n    let p1 = new Promise(async (resolve, reject) => {\n      cc.loader.loadRes(\"configs/localized-\" + language, (err, file) => {\n        if (!err) {\n          this.s_dict = file.json;\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n\n    let p2 = new Promise((resolve, reject) => {\n      cc.loader.loadRes(\"configs/localized-en\", (err, file) => {\n        if (!err) {\n          this.s_defaultDict = file.json;\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n    return p1.then(() => p2).catch(() => p2);\n  }\n\n  /**\n   * 从本地化字典获得对应的值\n   * @author Radish\n   */\n  public static getValue(key: string) {\n    let value = this.s_dict[key];\n    if (!value) {\n      value = this.s_defaultDict[key];\n      if (!value) {\n        return key;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * 本地化 label 控件\n   * @author Radish\n   */\n  public static localizeLabel(label: cc.Label) {\n    label.string = this.getValue(label.string);\n  }\n\n  /**\n   * 对浏览器/终端返回的语言字符串做处理\n   * @author Radish\n   */\n  private static process(value: string): string {\n    value = value.toLocaleLowerCase();\n    cc.log(`=> process value = ${value}`);\n\n    if (value.indexOf(\"zh-hant\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-hans\") !== -1) {\n      return \"zh-hans\";\n    } else if (value.indexOf(\"zh-tw\") !== -1 || value.indexOf(\"zh-hk\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-cn\") !== -1) {\n      return \"zh-hans\";\n    } else if (value === \"zh\") {\n      return \"zh-hans\";\n    } else {\n      return \"en\";\n    }\n  }\n\n  private static s_language: string = null;\n  private static s_dict: { [k: string]: string } = {};\n  private static s_defaultDict: { [k: string]: string } = {};\n}\n","const { ccclass, property } = cc._decorator;\r\n\r\nimport App from \"./App\";\r\nimport ButtonUtils from \"./utils/ButtonUtils\";\r\nimport Utils from \"./utils/Utils\";\r\nimport NativeResponse from \"./native/NativeResponse\";\r\nimport Constants from \"./AnswersConstants\";\r\nimport AnalyticsUtils from \"./native/AnalyticsUtils\";\r\nimport Localized from \"./utils/i18n/Localized\";\r\n\r\n@ccclass\r\nexport default class MainNode extends cc.Component {\r\n  async onLoad() {\r\n    if (cc.sys.isNative) {\r\n      // https://www.tslang.cn/docs/handbook/functions.html\r\n      let rawcclog = cc.log;\r\n      cc.log = (msg: any, ...rest: any[]) => {\r\n        rawcclog(msg, ...rest);\r\n        console.log(msg, ...rest);\r\n      };\r\n\r\n      jsb.onHide = () => {\r\n        cc.log(\"=> onHide\");\r\n      };\r\n\r\n      jsb.onShow = () => {\r\n        cc.log(\"=> onShow\");\r\n        this.showAnswer();\r\n      };\r\n    } else {\r\n      this.btnShare.active = false;\r\n    }\r\n\r\n    cc.log(\"=> Localized start init\");\r\n    await Localized.init();\r\n    cc.log(\"=> Localized finish init\");\r\n    cc.log(`=> current language = ${await Localized.getLanguage()}`);\r\n\r\n    if (await Localized.getLanguage() === \"en\") {\r\n      this.labelAnswer.fontSize = 36;\r\n      let size = this.labelAnswer.node.getContentSize();\r\n      this.labelAnswer.node.setContentSize(520, size.height);\r\n    }\r\n\r\n    cc.log(\"=> App start init\");\r\n    await App.getInstance().init();\r\n    cc.log(\"=> App finish init\");\r\n\r\n    let app: App = App.getInstance();\r\n    app.mainNode = this.node;\r\n    app.bottomNode = this.node.getChildByName(\"bottomNode\");\r\n    app.middleNode = this.node.getChildByName(\"middleNode\");\r\n    app.topNode = this.node.getChildByName(\"topNode\");\r\n    app.activityNode = this.activityNode;\r\n\r\n    ButtonUtils.onColor(this.btnInfo.getComponent(cc.Button), \"icon\");\r\n    ButtonUtils.onColor(this.btnShare.getComponent(cc.Button), \"icon\");\r\n    this.onChangeIsEvaluate = this.onChangeIsEvaluate.bind(this);\r\n    cc.director.on(Constants.EVENT.CHANGE_IS_EVALUATE, this.onChangeIsEvaluate);\r\n\r\n    this.showAnswer();\r\n  }\r\n\r\n  onDestroy() {\r\n    cc.director.off(\r\n      Constants.EVENT.CHANGE_IS_EVALUATE,\r\n      this.onChangeIsEvaluate\r\n    );\r\n    ButtonUtils.offColor(this.btnInfo.getComponent(cc.Button));\r\n    ButtonUtils.offColor(this.btnShare.getComponent(cc.Button));\r\n  }\r\n\r\n  /**\r\n   * 显示答案\r\n   * @author Radish\r\n   */\r\n  public showAnswer() {\r\n    let text: string = App.getInstance().answersDictionary.randomText();\r\n    this.labelAnswer.string = text;\r\n\r\n    AnalyticsUtils.trackEvent(\"ShowAnswerPage\");\r\n\r\n    this.labelAnswer.node.stopAllActions();\r\n    this.labelAnswer.node.opacity = 0;\r\n    const duration1 = 4;\r\n    const duration2 = 20;\r\n    let actions: cc.FiniteTimeAction[] = [];\r\n    actions.push(cc.fadeIn(duration1));\r\n    actions.push(cc.delayTime(duration2));\r\n    actions.push(cc.fadeOut(duration1));\r\n    this.labelAnswer.node.runAction(cc.sequence(actions));\r\n\r\n    ++App.getInstance().showCount;\r\n\r\n    if (cc.sys.isNative) {\r\n      this.btnEvaluate.active = App.getInstance().isShowEvaluate;\r\n    }\r\n\r\n    // 分享按钮显示控制\r\n    if (cc.sys.isNative) {\r\n      this.btnShare.stopAllActions();\r\n      this.btnShare.active = true;\r\n      this.btnShare.runAction(\r\n        cc.sequence([\r\n          cc.delayTime(duration1 * 2 + duration2),\r\n          cc.callFunc(() => (this.btnShare.active = false))\r\n        ])\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 点击信息按钮\r\n   * @author Radish\r\n   */\r\n  public onClickInfo() {\r\n    if (cc.sys.isBrowser) {\r\n      this.showAnswer();\r\n    } else {\r\n      this.showDevelopInfo();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 点击评分按钮\r\n   * @author Radish\r\n   */\r\n  public onClickEvaluate() {\r\n    cc.log(\"=> onClickEvaluate\");\r\n\r\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\r\n      jsb.reflection.callStaticMethod(\r\n        \"QXQUtils\",\r\n        \"showEvaluate:\",\r\n        JSON.stringify({\r\n          appId: Constants.APP.APPLE_APP_ID,\r\n          isUseAppStore: false,\r\n          callback: NativeResponse.push((value: string) => {\r\n            cc.log(`=> ${value}`);\r\n\r\n            let data: any = JSON.parse(value);\r\n            if (data.state === \"finish\") {\r\n              App.getInstance().isEvaluate = true;\r\n            }\r\n          })\r\n        })\r\n      );\r\n    } else {\r\n      App.getInstance().isEvaluate = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 点击分享\r\n   * @author Radish\r\n   */\r\n  public onClickShare() {\r\n    AnalyticsUtils.trackEvent(\"ShareStart\");\r\n\r\n    let path =\r\n      jsb.fileUtils.getWritablePath() + Constants.APP.CAPTURE_SCREEN_FILE_NAME;\r\n\r\n    let opacity = this.labelAnswer.node.opacity;\r\n    this.labelAnswer.node.opacity = 255;\r\n\r\n    if (Utils.captureScreen(App.getInstance().bottomNode, path)) {\r\n      cc.log(\"=> 截图成功\");\r\n      jsb.reflection.callStaticMethod(\r\n        \"AppleShare\",\r\n        \"shareImage:\",\r\n        JSON.stringify({\r\n          path,\r\n          callback: NativeResponse.push((value: string) => {\r\n            let data = JSON.parse(value);\r\n            if (data.result) {\r\n              AnalyticsUtils.trackEvent(\"ShareFinish\");\r\n            }\r\n          })\r\n        })\r\n      );\r\n    } else {\r\n      AnalyticsUtils.trackEvent(\"ShareCaptureScreenFailed\");\r\n    }\r\n\r\n    this.labelAnswer.node.opacity = opacity;\r\n  }\r\n\r\n  /**\r\n   * 展示开发者信息界面\r\n   * @author Radish\r\n   */\r\n  public showDevelopInfo() {\r\n    const childName = \"developerInfo\";\r\n\r\n    let child = App.getInstance().topNode.getChildByName(childName);\r\n    if (child) {\r\n      App.getInstance().topNode.removeChild(child);\r\n    }\r\n\r\n    cc.loader.loadRes(\r\n      \"prefabs/developerInfo\",\r\n      cc.Prefab,\r\n      (error: Error, resounce: any) => {\r\n        let node: cc.Node = cc.instantiate(resounce);\r\n        node.y = -cc.winSize.height * 0.5;\r\n        App.getInstance().topNode.addChild(node, 0, childName);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 侦听投票属性改变事件\r\n   * @author Radish\r\n   */\r\n  private onChangeIsEvaluate() {\r\n    if (cc.sys.isNative) {\r\n      this.btnEvaluate.active = App.getInstance().isShowEvaluate;\r\n    }\r\n  }\r\n\r\n  @property(cc.Label)\r\n  labelAnswer: cc.Label = null;\r\n\r\n  @property(cc.Node)\r\n  btnInfo: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  btnEvaluate: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  btnShare: cc.Node = null;\r\n\r\n  @property(cc.Node)\r\n  activityNode: cc.Node = null;\r\n}\r\n","/**\n * Native 回调管理相关\n * @author Radish\n */\n\nlet s_session: number = 0;\nlet s_callbacks: { [s: number]: (value: string) => void } = {};\n\nexport default class NativeResponse {\n  /**\n   * 添加回调函数\n   * @author Radish\n   */\n  public static push(callback: (value: string) => void): number {\n    let session = ++s_session;\n    s_callbacks[session] = callback;\n    return session;\n  }\n}\n\nif (cc.sys.isNative) {\n  if (!jsb.onNativeResponse) {\n    jsb.onNativeResponse = (\n      session: number,\n      value?: string,\n      isRemove: boolean = true\n    ) => {\n      if (value === null || value === undefined) {\n        delete s_callbacks[session];\n      } else {\n        let callback = s_callbacks[session];\n        if (callback) {\n          callback(value);\n\n          if (isRemove) {\n            delete s_callbacks[session];\n          }\n        }\n      }\n    };\n  }\n}\n","const { ccclass, property } = cc._decorator;\n\nimport AnalyticsUtils from \"../native/AnalyticsUtils\";\nimport Localized from \"../utils/i18n/Localized\";\nimport NativeResponse from \"../native/NativeResponse\";\nimport App from \"../App\";\nimport Utils from \"../utils/Utils\";\n\nconst PRODUCT_IDENTIFIERS = [\n  \"com.qxqplant.answers.water\",\n  \"com.qxqplant.answers.coffee\",\n  \"com.qxqplant.answers.noodles\"\n];\n\ninterface SubscriptionPeriod {\n  numberOfUnits?: number;\n  unit?: number;\n}\n\ninterface IntroductoryPrice {\n  price?: string;\n  currencySymbol?: string;\n  currencyCode?: string;\n  subscriptionPeriod?: SubscriptionPeriod;\n  numberOfPeriods?: number;\n  paymentMode?: number;\n}\n\ninterface Product {\n  localizedDescription?: string;\n  localizedTitle?: string;\n  price?: string;\n  currencySymbol?: string;\n  currencyCode?: string;\n  productIdentifier?: string;\n  downloadable?: boolean;\n  downloadContentLengths?: number[];\n  downloadContentVersion?: string;\n  subscriptionPeriod?: SubscriptionPeriod;\n  introductoryPrice?: IntroductoryPrice;\n  subscriptionGroupIdentifier?: string;\n}\n\n@ccclass\nexport default class PurchaseInfo extends cc.Component {\n  onLoad() {\n    AnalyticsUtils.trackEvent(\"PurchaseInfoPage\");\n\n    Localized.localizeLabel(this.labelTitle);\n    Localized.localizeLabel(this.labelClose);\n\n    this.m_buttons = [\n      this.btnDonateWater,\n      this.btnDonateCoffee,\n      this.btnDonateNoodles\n    ];\n    this.initButtons(this.m_buttons);\n\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      App.getInstance().active = true;\n\n      jsb.reflection.callStaticMethod(\n        \"ApplePayUtils\",\n        \"init:\",\n        JSON.stringify({\n          callback: NativeResponse.push((value: string) => {\n            let data = JSON.parse(value);\n            if (data.action === \"updated\") {\n              if (data.state === \"purchased\") {\n                App.getInstance().active = false;\n                let product = this.findProduct(data.payment.productIdentifier);\n                if (product) {\n                  Utils.showAlert(Localized.getValue(\"#purchase_success_title\"), product.localizedDescription, [Localized.getValue(\"#btn_confirm\")]);\n                } else {\n                  Utils.showAlert(Localized.getValue(\"#purchase_success_title\"), \"\", [Localized.getValue(\"#btn_confirm\")]);\n                }\n              } else if (data.state === \"failed\") {\n                App.getInstance().active = false;\n                Utils.showAlert(Localized.getValue(\"#purchase_failed_title\"), data.err, [Localized.getValue(\"#btn_confirm\")]);\n              }\n            }\n          })\n        })\n      );\n\n      jsb.reflection.callStaticMethod(\n        \"ApplePayUtils\",\n        \"requestProducts:\",\n        JSON.stringify({\n          identifiers: PRODUCT_IDENTIFIERS,\n          callback: NativeResponse.push((value: string) => {\n            App.getInstance().active = false;\n\n            let data: {\n              invalidProductIdentifiers?: string[];\n              products: Product[];\n            } = JSON.parse(value);\n\n            if (data.products && data.products.length >= 3) {\n              this.m_products = data.products;\n\n              for (let p of data.products) {\n                for (let index in PRODUCT_IDENTIFIERS) {\n                  let identifier = PRODUCT_IDENTIFIERS[index];\n                  if (p.productIdentifier === identifier) {\n                    if (this.m_buttons[index]) {\n                      this.initButton(this.m_buttons[index], p);\n                    }\n                    break;\n                  }\n                }\n              }\n            } else {\n              Utils.showAlert(\n                Localized.getValue(\"#request_products_failed_title\"),\n                Localized.getValue(\"#request_products_failed_content\"),\n                [Localized.getValue(\"#btn_confirm\")]\n              );\n              this.node.destroy();\n            }\n          })\n        })\n      );\n    }\n  }\n\n  onDestroy() {}\n\n  /**\n   * 点击捐赠按钮\n   * @author Radish\n   */\n  onClickDonate(eventTouch: cc.Event.EventTouch, data: string) {\n    let index = parseInt(data);\n    let identifier = PRODUCT_IDENTIFIERS[index];\n    if (identifier && this.findProduct(identifier)) {\n      jsb.reflection.callStaticMethod(\n        \"ApplePayUtils\",\n        \"payment:\",\n        JSON.stringify({ identifier })\n      );\n\n      App.getInstance().active = true;\n    }\n  }\n\n  /**\n   * 点击关闭按钮\n   * @author Radish\n   */\n  onClickClose() {\n    this.node.destroy();\n  }\n\n  /**\n   * 初始化按钮\n   * @author Radish\n   */\n  private initButton(button: cc.Node, product?: Product) {\n    let label = button.getChildByName(\"Label\").getComponent(cc.Label);\n\n    if (!product) {\n      label.string = Localized.getValue(\"#loading\");\n    } else {\n      let dot = \"\";\n      if (product.price.indexOf(\".\") === -1) {\n        dot = \".00\";\n      }\n\n      label.string = `${product.currencySymbol}${product.price}${dot} ${\n        product.localizedTitle\n      }`;\n    }\n  }\n\n  /**\n   * 初始化按钮显示\n   * @author Radish\n   */\n  private initButtons(buttons: cc.Node[]) {\n    for (let b of buttons) {\n      this.initButton(b);\n    }\n  }\n\n  /**\n   * 查询 Product 对象\n   * @author Radish\n   */\n  private findProduct(identifier: string) {\n    for (let p of this.m_products) {\n      if (p.productIdentifier === identifier) {\n        return p;\n      }\n    }\n\n    return null;\n  }\n\n  @property(cc.Label)\n  labelTitle: cc.Label = null;\n\n  @property(cc.Label)\n  labelClose: cc.Label = null;\n\n  @property(cc.Node)\n  btnDonateWater: cc.Node = null;\n\n  @property(cc.Node)\n  btnDonateCoffee: cc.Node = null;\n\n  @property(cc.Node)\n  btnDonateNoodles: cc.Node = null;\n\n  private m_buttons: cc.Node[] = [];\n  private m_products: Product[] = [];\n}\n","/**\n * 测试统计分析接口\n * @author Radish\n */\n\nconst { ccclass } = cc._decorator;\n\nimport AnalyticsUtils from \"../native/AnalyticsUtils\";\n\n@ccclass\nexport default class TestAnalyticsUtils extends cc.Component {\n  onClickPageAppear() {\n    AnalyticsUtils.trackPageAppear(\"testPage\");\n  }\n\n  onClickPageDisappear() {\n    AnalyticsUtils.trackPageDisappear(\"testPage\");\n  }\n\n  onClickTrackEvent() {\n    AnalyticsUtils.trackEvent(\"testEvent\");\n  }\n\n  onClickTrackEventWithProperties() {\n    AnalyticsUtils.trackEvent(\"testEvent\", { key1: \"value1\", key2: \"value2\" });\n  }\n\n  onClickTrackEventDurationBegin() {\n    AnalyticsUtils.trackEventDurationBegin(\"testEvent\");\n  }\n\n  onClickTrackEventDurationEnd() {\n    AnalyticsUtils.trackEventDurationEnd(\"testEvent\");\n  }\n\n  onClickTrackEventDuration() {\n    AnalyticsUtils.trackEventWithDuration(\"testEvent\", 10);\n  }\n}\n","/**\n * 一些常用功能\n * @author Radish\n */\n\nimport NativeResponse from \"../native/NativeResponse\";\n\nexport default class Utils {\n  /**\n   * 对 parent 节点截屏\n   * @param parent 截屏节点\n   * @param filePath 图片保存路径\n   * @author Radish\n   */\n  public static captureScreen(parent: cc.Node, filePath: string) {\n    let node = new cc.Node();\n    node.parent = parent;\n    node.width = parent.getContentSize().width;\n    node.height = parent.getContentSize().height;\n    let camera = node.addComponent(cc.Camera);\n\n    // 新建一个 RenderTexture，并且设置 camera 的 targetTexture 为新建的 RenderTexture，这样 camera 的内容将会渲染到新建的 RenderTexture 中。\n    let texture = new cc.RenderTexture();\n    texture.initWithSize(node.width, node.height);\n    camera.targetTexture = texture;\n\n    // 渲染一次摄像机，即更新一次内容到 RenderTexture 中\n    parent.scaleY = -1;\n    camera.render(node.parent);\n    parent.scaleY = 1;\n\n    // 这样我们就能从 RenderTexture 中获取到数据了\n    let data = texture.readPixels();\n    let width = texture.width;\n    let height = texture.height;\n    let fullPath = filePath;\n    if (jsb.fileUtils.isFileExist(fullPath)) {\n      jsb.fileUtils.removeFile(fullPath);\n    }\n\n    let result = jsb.saveImageData(data, width, height, fullPath);\n    node.destroy();\n\n    return result;\n  }\n\n  /**\n   * 显示 iOS 弹窗\n   * @author Radish\n   */\n  public static showAlert(\n    title: string,\n    message: string,\n    buttonTitles: string[],\n    callback?: (index: number) => void\n  ) {\n    let buttons = [];\n    buttonTitles.forEach(value => {\n      buttons.push({\n        title: value,\n        style: 0\n      });\n    });\n\n    jsb.reflection.callStaticMethod(\n      \"QXQUtils\",\n      \"showAlert:\",\n      JSON.stringify({\n        title,\n        message,\n        buttons,\n        callback: NativeResponse.push((value: string) => {\n          if (callback) {\n            let data: any = JSON.parse(value);\n            callback(data.idx);\n          }\n        })\n      })\n    );\n  }\n}\n"],"sourceRoot":"/source/","file":"project.js"}