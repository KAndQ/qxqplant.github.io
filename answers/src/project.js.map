{"version":3,"sources":["assets/Script/ui/ActivityNode.ts","assets/Script/native/AnalyticsUtils.ts","assets/Script/AnswersConstants.ts","assets/Script/AnswersDictionary.ts","assets/Script/App.ts","assets/Script/utils/ButtonUtils.ts","assets/Script/ui/DeveloperInfo.ts","assets/Script/ui/EvaluateAnimation.ts","assets/Script/LocalizedDictionary.ts","assets/Script/utils/i18n/Localized.ts","assets/Script/MainNode.ts","assets/Script/native/NativeResponse.ts","assets/Script/ui/PurchaseInfo.ts","assets/Script/test/TestAnalytiesUtils.ts","assets/Script/utils/Utils.ts"],"names":["_a","cc","_decorator","ccclass","property","ActivityNode","_super","_this","apply","this","arguments","icon","__extends","prototype","onEnable","log","stopAllActions","runAction","repeatForever","rotateBy","onDisable","__decorate","Node","Component","exports","default","AnalyticsUtils","trackPageAppear","page","sys","isNative","os","OS_IOS","jsb","reflection","callStaticMethod","JSON","stringify","trackPageDisappear","trackEvent","name","properties","trackEventDurationBegin","trackEventDurationEnd","trackEventWithDuration","duration","STORAGE_KEYS","SHOW_COUNT","IS_EVALUATE","EVALUATE_TIME","EVALUATE","SHOW_COUNT_MAX","EVALUATE_TIME_MAX","APP","APPLE_APP_ID","CAPTURE_SCREEN_FILE_NAME","EVENT","CHANGE_IS_EVALUATE","AnswersDictionary","rawdata","m_arrayText","m_dictText","splitRawdata","_i","length","t","randomText","index","parseInt","Math","random","toString","text","replace","patch","push","texts","split","AnswersDictionary_1","require","AnswersConstants_1","Localized_1","s_app","App","m_isInit","m_answersDictionary","m_showCount","m_isEvaluate","m_evaluateTime","mainNode","bottomNode","middleNode","topNode","activityNode","getInstance","Object","defineProperty","get","init","Promise","resolve","reject","__awaiter","getLanguage","language","sent","loader","loadRes","err","file","localStorage","getItem","time","set","value","setItem","now","removeItem","director","emit","isEvaluate","showCount","active","BLACK","color","WHITE","Color","ButtonUtils","onColor","button","childName","child_1","node","getChildByName","on","EventType","TOUCH_START","TOUCH_END","children","offColor","off","App_1","NativeResponse_1","AnalyticsUtils_1","Utils_1","DeveloperInfo","labelWebsite","labelEmail","onLoad","btnDonate","find","angle","actions","rotateTo","easing","easeOut","easeElasticOut","delayTime","sequence","isPressed","hide","show","onDestroy","bg","y","getContentSize","height","moveBy","callFunc","destroy","onClickPurchase","Prefab","resource","instantiate","addChild","onClickCopyEmail","string","callback","showAlert","getValue","onClickCopyWebsite","onClickGoWebsite","openURL","onClickSendEmail","subject","toRecipients","content","isBrowser","window","location","href","Label","EvaluateAnimation","easeSineOut","easeSineInOut","LocalizedDictionary","s_instance","Localized","s_language","process","navigator","p1","s_dict","json","p2","s_defaultDict","then","catch","key","localizeLabel","label","toLocaleLowerCase","indexOf","ButtonUtils_1","MainNode","labelAnswer","btnInfo","btnEvaluate","btnShare","rawcclog_1","msg","rest","concat","console","onHide","onShow","showAnswer","_d","_b","_c","app","getComponent","Button","onChangeIsEvaluate","bind","answersDictionary","opacity","fadeIn","fadeOut","isShowEvaluate","duration1","onClickInfo","showDevelopInfo","onClickEvaluate","appId","isUseAppStore","parse","state","onClickShare","path","fileUtils","getWritablePath","captureScreen","result","child","removeChild","error","resounce","winSize","s_session","s_callbacks","NativeResponse","session","onNativeResponse","isRemove","undefined","PRODUCT_IDENTIFIERS","PurchaseInfo","labelTitle","labelClose","btnDonateWater","btnDonateCoffee","btnDonateNoodles","m_buttons","m_products","initButtons","data","action","product","findProduct","payment","productIdentifier","localizedDescription","identifiers","products","p","identifier","initButton","onClickDonate","eventTouch","onClickClose","dot","price","currencySymbol","localizedTitle","buttons","buttons_1","b","TestAnalyticsUtils","onClickPageAppear","onClickPageDisappear","onClickTrackEvent","onClickTrackEventWithProperties","key1","key2","onClickTrackEventDurationBegin","onClickTrackEventDurationEnd","onClickTrackEventDuration","Utils","parent","filePath","width","camera","addComponent","Camera","texture","RenderTexture","initWithSize","targetTexture","scaleY","render","readPixels","fullPath","isFileExist","removeFile","saveImageData","title","message","buttonTitles","forEach","style","idx"],"mappings":"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","sourcesContent":["/**\n * 顶层屏蔽触摸节点\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class ActivityNode extends cc.Component {\n  onEnable() {\n    cc.log(\"=> ActivityNode Enabled\");\n    this.icon.stopAllActions();\n    this.icon.runAction(cc.repeatForever(cc.rotateBy(0.3, -90)));\n  }\n\n  onDisable() {\n    cc.log(\"=> ActivityNode Disable\");\n    this.icon.stopAllActions();\n  }\n\n  @property(cc.Node)\n  icon: cc.Node = null;\n}\n\n","/**\n * 分析统计 SDK 调用接口\n * @author Radish\n */\n\nexport default class AnalyticsUtils {\n  /**\n   * 页面呈现时调用\n   * @author Radish\n   */\n  public static trackPageAppear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageAppear:\",\n        JSON.stringify({ page })\n      );\n    }\n  }\n\n  /**\n   * 页面关闭时调用\n   * @author Radish\n   */\n  public static trackPageDisappear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageDisappear:\",\n        JSON.stringify({ page })\n      );\n    }\n  }\n\n  /**\n   * 追踪事件\n   * @author Radish\n   */\n  public static trackEvent(name: string, properties?: { [k: string]: string }) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEvent:\",\n        JSON.stringify({ name, properties })\n      );\n    }\n  }\n\n  /**\n   * 上报事件开始\n   * @author Radish\n   */\n  public static trackEventDurationBegin(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationBegin:\",\n        JSON.stringify({ name })\n      );\n    }\n  }\n\n  /**\n   * 上报事件结束\n   * @author Radish\n   */\n  public static trackEventDurationEnd(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationEnd:\",\n        JSON.stringify({ name })\n      );\n    }\n  }\n\n  /**\n   * 上报一个带时长的事件\n   * @author Radish\n   */\n  public static trackEventWithDuration(name: string, duration: number) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventWithDuration:\",\n        JSON.stringify({ name, duration })\n      );\n    }\n  }\n}\n","/**\n * 一些常量定义\n * @author Radish\n */\n\nexport default {\n  // 本地存储使用的键\n  STORAGE_KEYS: {\n    SHOW_COUNT: \"SHOW_COUNT\", // 展示次数\n    IS_EVALUATE: \"IS_EVALUATE\", // 是否评分\n    EVALUATE_TIME: \"EVALUATE_TIME\" // 评分时间\n  },\n\n  // 评价相关\n  EVALUATE: {\n    SHOW_COUNT_MAX: 10, // 展示最大次数, 超过该次数将推送评分\n    EVALUATE_TIME_MAX: 60 * 60 * 24 * 90 * 1000 // 评分间隔时间, 超过该时间, 将再次展示评分, 毫秒为单位\n  },\n\n  // 应用相关\n  APP: {\n    APPLE_APP_ID: \"1446266225\", // Apple app id\n    CAPTURE_SCREEN_FILE_NAME: \"tmp_capture_screen.png\" // 截屏保存图片名\n  },\n\n  // 事件\n  EVENT: {\n    CHANGE_IS_EVALUATE: \"CHANGE_IS_EVALUATE\" // 评价属性改变\n  }\n};\n","/**\n * 答案字典, 管理答案数据\n * @author Radish\n */\n\nconst SPLIT_CHARACTERS_1 = \";\\n\";\nconst SPLIT_CHARACTERS_2 = \";\\r\\n\";\n\nexport default class AnswersDictionary {\n  constructor(rawdata: string) {\n    this.m_arrayText = this.splitRawdata(rawdata);\n    for (let t of this.m_arrayText) {\n      this.m_dictText[t] = true;\n    }\n  }\n\n  /**\n   * 随机挑选出使用的文本\n   * @author Radish\n   */\n  public randomText() {\n    let index = parseInt((this.m_arrayText.length * Math.random()).toString());\n    cc.log(`=> index = ${index}`);\n\n    let text = this.m_arrayText[index];\n    cc.log(`=> text = ${text}`);\n\n    return text.replace(\"|\", \"\\n\");\n  }\n\n  /**\n   * 补充答案内容\n   * @author Radish\n   */\n  public patch(rawdata: string) {\n    for (let t of this.splitRawdata(rawdata)) {\n      if (!this.m_dictText[t]) {\n        this.m_arrayText.push(t);\n        this.m_dictText[t] = true;\n      }\n    }\n  }\n\n  /**\n   * 解析文本数据\n   * @author Radish\n   */\n  private splitRawdata(rawdata: string) {\n    let texts = rawdata.split(SPLIT_CHARACTERS_1);\n    if (texts.length === 1) {\n      texts = rawdata.split(SPLIT_CHARACTERS_2);\n    }\n    return texts;\n  }\n\n  private m_arrayText: string[] = [];\n  private m_dictText: { [k: string]: boolean } = {};\n}\n","/**\n * 当前应用实例, 单例\n * @author Radish\n */\n\nimport AnswersDictionary from \"./AnswersDictionary\";\nimport Constants from \"./AnswersConstants\";\nimport Localized from \"./utils/i18n/Localized\";\n\nlet s_app: App = null;\n\nexport default class App {\n  /**\n   * 获得唯一的 App 实例\n   * @author Radish\n   */\n  public static getInstance(): App {\n    if (s_app === null) {\n      s_app = new App();\n    }\n    return s_app;\n  }\n\n  /**\n   * 获得 AnswersDictionary 对象\n   * @author Radish\n   */\n  public get answersDictionary(): AnswersDictionary {\n    return this.m_answersDictionary;\n  }\n\n  /**\n   * 初始化\n   * @author Radish\n   */\n  public async init() {\n    if (this.m_isInit) {\n      return;\n    }\n\n    this.m_isInit = true;\n\n    let promise = new Promise(async (resolve, reject) => {\n      let language = await Localized.getLanguage();\n      cc.loader.loadRes(\"configs/answers-\" + language, (err, file) => {\n        if (err) {\n          reject(err);\n        } else {\n          this.m_answersDictionary = new AnswersDictionary(file.text);\n\n          this.m_showCount = cc.sys.localStorage.getItem(\n            Constants.STORAGE_KEYS.SHOW_COUNT\n          );\n          if (!this.m_showCount) {\n            this.m_showCount = 0;\n          }\n\n          this.m_isEvaluate = cc.sys.localStorage.getItem(\n            Constants.STORAGE_KEYS.IS_EVALUATE\n          );\n          if (!this.m_isEvaluate) {\n            this.m_isEvaluate = false;\n          } else {\n            let time = cc.sys.localStorage.getItem(\n              Constants.STORAGE_KEYS.EVALUATE_TIME\n            );\n            if (time) {\n              this.m_evaluateTime = parseInt(time);\n            }\n          }\n\n          resolve();\n        }\n      });\n    });\n\n    return promise;\n  }\n\n  public get showCount() {\n    return this.m_showCount;\n  }\n\n  public set showCount(value) {\n    this.m_showCount = value;\n    cc.sys.localStorage.setItem(\n      Constants.STORAGE_KEYS.SHOW_COUNT,\n      this.m_showCount\n    );\n  }\n\n  public get isEvaluate() {\n    return this.m_isEvaluate;\n  }\n\n  public set isEvaluate(value) {\n    this.m_isEvaluate = value;\n    cc.sys.localStorage.setItem(\n      Constants.STORAGE_KEYS.IS_EVALUATE,\n      this.m_isEvaluate\n    );\n\n    if (this.m_isEvaluate) {\n      this.m_evaluateTime = cc.sys.now();\n      cc.sys.localStorage.setItem(\n        Constants.STORAGE_KEYS.EVALUATE_TIME,\n        this.m_evaluateTime\n      );\n    } else {\n      this.m_evaluateTime = null;\n      cc.sys.localStorage.removeItem(Constants.STORAGE_KEYS.EVALUATE_TIME);\n    }\n\n    cc.director.emit(Constants.EVENT.CHANGE_IS_EVALUATE);\n  }\n\n  /**\n   * 判断是否展示评分\n   * @returns true 展示, false 不展示\n   * @author Radish\n   */\n  public get isShowEvaluate() {\n    if (!this.isEvaluate) {\n      if (this.showCount >= Constants.EVALUATE.SHOW_COUNT_MAX) {\n        return true;\n      }\n    } else {\n      if (this.m_evaluateTime) {\n        let now = cc.sys.now();\n        if (now - this.m_evaluateTime >= Constants.EVALUATE.EVALUATE_TIME_MAX) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * 触摸屏蔽层控制\n   * @author Radish\n   */\n  public set active(value: boolean) {\n    this.activityNode.active = value;\n  }\n\n  private constructor() {}\n  private m_isInit: boolean = false;\n  private m_answersDictionary: AnswersDictionary = null;\n  private m_showCount = 0;\n  private m_isEvaluate = false;\n  private m_evaluateTime = null;\n\n  public mainNode: cc.Node = null;\n  public bottomNode: cc.Node = null;\n  public middleNode: cc.Node = null;\n  public topNode: cc.Node = null;\n  public activityNode: cc.Node = null;\n}\n","const BLACK = cc.color(128, 128, 128);\nconst WHITE = cc.Color.WHITE;\n\nexport default class ButtonUtils {\n  /**\n   * 给 button 添加点击着色处理\n   * @author Radish\n   */\n  public static onColor(button: cc.Button, childName?: string) {\n    if (childName) {\n      let child = button.node.getChildByName(childName);\n\n      button.node.on(cc.Node.EventType.TOUCH_START, () => {\n        if (child) {\n          child.color = BLACK;\n        }\n      });\n\n      button.node.on(cc.Node.EventType.TOUCH_END, () => {\n        if (child) {\n          child.color = WHITE;\n        }\n      });\n    } else {\n      button.node.on(cc.Node.EventType.TOUCH_START, () => {\n        for (let c of button.node.children) {\n          c.color = BLACK;\n        }\n      });\n\n      button.node.on(cc.Node.EventType.TOUCH_END, () => {\n        for (let c of button.node.children) {\n          c.color = WHITE;\n        }\n      });\n    }\n  }\n\n  /**\n   * 取消 button 之前添加的着色处理\n   * @author Radish\n   */\n  public static offColor(button: cc.Button) {\n    button.node.off(cc.Node.EventType.TOUCH_START);\n    button.node.off(cc.Node.EventType.TOUCH_END);\n  }\n}\n","const { ccclass, property } = cc._decorator;\n\nimport App from \"../App\";\nimport NativeResponse from \"../native/NativeResponse\";\nimport AnalyticsUtils from \"../native/AnalyticsUtils\";\nimport Utils from \"../utils/Utils\";\nimport Localized from \"../utils/i18n/Localized\";\n\n@ccclass\nexport default class DeveloperInfo extends cc.Component {\n  onLoad() {\n    AnalyticsUtils.trackEvent(\"DevelopInfoPage\");\n\n    // donate 按钮动画\n    let btnDonate: cc.Node = cc.find(\"bg/btnDonate\", this.node);\n    btnDonate.angle = 0;\n    let actions: cc.ActionInstant[] = [];\n    actions.push(cc.rotateTo(0.8, -18).easing(cc.easeOut(3.0)));\n    actions.push(cc.rotateTo(0.45, 0).easing(cc.easeElasticOut(0.3)));\n    actions.push(cc.delayTime(1.618));\n    btnDonate.runAction(cc.repeatForever(cc.sequence(actions)));\n\n    // 触摸其他区域关闭当前界面\n    let isPressed = false;\n    this.node.on(cc.Node.EventType.TOUCH_START, () => {\n      isPressed = true;\n    });\n\n    this.node.on(cc.Node.EventType.TOUCH_END, () => {\n      if (isPressed) {\n        isPressed = false;\n        this.hide();\n      }\n    });\n\n    this.show();\n  }\n\n  onDestroy() {}\n\n  /**\n   * 展示\n   * @author Radish\n   */\n  show() {\n    let bg: cc.Node = this.node.getChildByName(\"bg\");\n    bg.stopAllActions();\n\n    bg.y = -bg.getContentSize().height;\n    bg.runAction(cc.moveBy(0.1, 0, bg.getContentSize().height));\n  }\n\n  /**\n   * 隐藏\n   * @author Radish\n   */\n  hide() {\n    let bg: cc.Node = this.node.getChildByName(\"bg\");\n    bg.stopAllActions();\n\n    bg.y = 0;\n    bg.runAction(\n      cc.sequence([\n        cc.moveBy(0.1, 0, -bg.getContentSize().height),\n        cc.callFunc(() => {\n          this.node.destroy();\n        })\n      ])\n    );\n  }\n\n  /**\n   * 点击购买按钮\n   * @author Radish\n   */\n  onClickPurchase() {\n    cc.loader.loadRes(\n      \"prefabs/purchaseInfo\",\n      cc.Prefab,\n      (err: Error, resource: any) => {\n        if (!err) {\n          let node: cc.Node = cc.instantiate(resource);\n          App.getInstance().topNode.addChild(node);\n        }\n      }\n    );\n  }\n\n  /**\n   * 点击复制邮件\n   * @author Radish\n   */\n  onClickCopyEmail() {\n    if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"QXQUtils\",\n        \"copyText:\",\n        JSON.stringify({\n          text: this.labelEmail.string,\n          callback: NativeResponse.push(() => {\n            Utils.showAlert(\n              \"\",\n              Localized.getValue(\"#copy_email_success_content\"),\n              [Localized.getValue(\"#btn_confirm\")]\n            );\n          })\n        })\n      );\n    }\n  }\n\n  /**\n   * 点击复制网址\n   * @author Radish\n   */\n  onClickCopyWebsite() {\n    if (cc.sys.isNative && cc.sys.os == cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"QXQUtils\",\n        \"copyText:\",\n        JSON.stringify({\n          text: this.labelWebsite.string,\n          callback: NativeResponse.push(() => {\n            Utils.showAlert(\n              \"\",\n              Localized.getValue(\"#copy_website_success_content\"),\n              [Localized.getValue(\"#btn_confirm\")]\n            );\n          })\n        })\n      );\n    }\n  }\n\n  /**\n   * 点击去指定网站\n   * @author Radish\n   */\n  onClickGoWebsite() {\n    cc.sys.openURL(this.labelWebsite.string);\n  }\n\n  /**\n   * 点击发送邮件\n   * @author Radish\n   */\n  onClickSendEmail() {\n    const subject = \"体验反馈\";\n    const content = \"\\n\\n\\n\\n\\n\\n感谢您的建议\";\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"QXQUtils\",\n        \"sendEmail:\",\n        JSON.stringify({\n          subject,\n          toRecipients: [this.labelEmail.string],\n          content,\n          callback: NativeResponse.push((value: string) => {\n            cc.log(`=> ${value}`);\n          })\n        })\n      );\n    } else if (cc.sys.isBrowser) {\n      window.location.href = `mailto:${\n        this.labelEmail.string\n      }?subject=${subject}&body=${content}`;\n    }\n  }\n\n  @property(cc.Label)\n  labelWebsite: cc.Label = null;\n\n  @property(cc.Label)\n  labelEmail: cc.Label = null;\n}\n","const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class EvaluateAnimation extends cc.Component {\n  onLoad() {\n    const angle = 8;\n    this.node.runAction(cc.sequence([cc.rotateBy(0.3, -angle).easing(cc.easeSineOut()), cc.callFunc(() => {\n      let actions: cc.ActionInterval[] = [];\n      actions.push(cc.rotateBy(0.8, angle * 2).easing(cc.easeSineInOut()));\n      actions.push(cc.rotateBy(0.8, -angle * 2).easing(cc.easeSineInOut()));\n      this.node.runAction(cc.repeatForever(cc.sequence(actions)));\n    })]));\n  }\n}\n","/**\n * 本地化字典\n * @author Radish\n */\n\nexport default class LocalizedDictionary {\n  /**\n   * 获得 LocalizedDictionary 实例\n   * @author Radish\n   */\n  public static getInstance(): LocalizedDictionary {\n    if (!this.s_instance) {\n      this.s_instance = new LocalizedDictionary();\n    }\n    return this.s_instance;\n  }\n\n  private constructor() {\n    let language = cc.sys.language;\n    \n  }\n\n  private static s_instance = null;\n}\n","/**\n * i18n 处理\n * @author Radish\n */\n\nimport NativeResponse from \"../../native/NativeResponse\";\n\nexport default class Localized {\n  /**\n   * 获得当前使用语言标识\n   * @author Radish\n   */\n  public static async getLanguage() {\n    if (!this.s_language) {\n      if (cc.sys.isBrowser) {\n        this.s_language = this.process(window.navigator.language);\n        return Promise.resolve(this.s_language);\n      }\n      if (cc.sys.os === cc.sys.OS_IOS) {\n        return new Promise((resolve, reject) => {\n          jsb.reflection.callStaticMethod(\n            \"QXQUtils\",\n            \"getLanguage:\",\n            JSON.stringify({\n              callback: NativeResponse.push((value: string) => {\n                this.s_language = this.process(value);\n                resolve(this.s_language);\n              })\n            })\n          );\n        });\n      } else {\n        this.s_language = \"en\";\n        return Promise.resolve(this.s_language);\n      }\n    } else {\n      return this.s_language;\n    }\n  }\n\n  /**\n   * 初始化\n   * @author Radish\n   */\n  public static async init() {\n    let language = await this.getLanguage();\n\n    let p1 = new Promise(async (resolve, reject) => {\n      cc.loader.loadRes(\"configs/localized-\" + language, (err, file) => {\n        if (!err) {\n          this.s_dict = file.json;\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n\n    let p2 = new Promise((resolve, reject) => {\n      cc.loader.loadRes(\"configs/localized-en\", (err, file) => {\n        if (!err) {\n          this.s_defaultDict = file.json;\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n    return p1.then(() => p2).catch(() => p2);\n  }\n\n  /**\n   * 从本地化字典获得对应的值\n   * @author Radish\n   */\n  public static getValue(key: string) {\n    let value = this.s_dict[key];\n    if (!value) {\n      value = this.s_defaultDict[key];\n      if (!value) {\n        return key;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * 本地化 label 控件\n   * @author Radish\n   */\n  public static localizeLabel(label: cc.Label) {\n    label.string = this.getValue(label.string);\n  }\n\n  /**\n   * 对浏览器/终端返回的语言字符串做处理\n   * @author Radish\n   */\n  private static process(value: string): string {\n    value = value.toLocaleLowerCase();\n    cc.log(`=> process value = ${value}`);\n\n    if (value.indexOf(\"zh-hant\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-hans\") !== -1) {\n      return \"zh-hans\";\n    } else if (value.indexOf(\"zh-tw\") !== -1 || value.indexOf(\"zh-hk\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-cn\") !== -1) {\n      return \"zh-hans\";\n    } else if (value === \"zh\") {\n      return \"zh-hans\";\n    } else {\n      return \"en\";\n    }\n  }\n\n  private static s_language: string = null;\n  private static s_dict: { [k: string]: string } = {};\n  private static s_defaultDict: { [k: string]: string } = {};\n}\n","const { ccclass, property } = cc._decorator;\n\nimport App from \"./App\";\nimport ButtonUtils from \"./utils/ButtonUtils\";\nimport Utils from \"./utils/Utils\";\nimport NativeResponse from \"./native/NativeResponse\";\nimport Constants from \"./AnswersConstants\";\nimport AnalyticsUtils from \"./native/AnalyticsUtils\";\nimport Localized from \"./utils/i18n/Localized\";\n\n@ccclass\nexport default class MainNode extends cc.Component {\n  async onLoad() {\n    if (cc.sys.isNative) {\n      // https://www.tslang.cn/docs/handbook/functions.html\n      let rawcclog = cc.log;\n      cc.log = (msg: any, ...rest: any[]) => {\n        rawcclog(msg, ...rest);\n        console.log(msg, ...rest);\n      };\n\n      jsb.onHide = () => {\n        cc.log(\"=> onHide\");\n      };\n\n      jsb.onShow = () => {\n        cc.log(\"=> onShow\");\n        this.showAnswer();\n      };\n    } else {\n      this.btnShare.active = false;\n    }\n\n    cc.log(\"=> Localized start init\");\n    await Localized.init();\n    cc.log(\"=> Localized finish init\");\n    cc.log(`=> current language = ${await Localized.getLanguage()}`);\n\n    cc.log(\"=> App start init\");\n    await App.getInstance().init();\n    cc.log(\"=> App finish init\");\n\n    let app: App = App.getInstance();\n    app.mainNode = this.node;\n    app.bottomNode = this.node.getChildByName(\"bottomNode\");\n    app.middleNode = this.node.getChildByName(\"middleNode\");\n    app.topNode = this.node.getChildByName(\"topNode\");\n    app.activityNode = this.activityNode;\n\n    ButtonUtils.onColor(this.btnInfo, \"icon\");\n    ButtonUtils.onColor(this.btnShare.getComponent(cc.Button), \"icon\");\n    this.onChangeIsEvaluate = this.onChangeIsEvaluate.bind(this);\n    cc.director.on(Constants.EVENT.CHANGE_IS_EVALUATE, this.onChangeIsEvaluate);\n\n    this.showAnswer();\n  }\n\n  onDestroy() {\n    cc.director.off(\n      Constants.EVENT.CHANGE_IS_EVALUATE,\n      this.onChangeIsEvaluate\n    );\n    ButtonUtils.offColor(this.btnInfo);\n    ButtonUtils.offColor(this.btnShare.getComponent(cc.Button));\n  }\n\n  /**\n   * 显示答案\n   * @author Radish\n   */\n  public showAnswer() {\n    let text: string = App.getInstance().answersDictionary.randomText();\n    this.labelAnswer.string = text;\n\n    AnalyticsUtils.trackEvent(\"ShowAnswerPage\");\n\n    this.labelAnswer.node.stopAllActions();\n    this.labelAnswer.node.opacity = 0;\n    const duration1 = 4;\n    const duration2 = 20;\n    let actions: cc.FiniteTimeAction[] = [];\n    actions.push(cc.fadeIn(duration1));\n    actions.push(cc.delayTime(duration2));\n    actions.push(cc.fadeOut(duration1));\n    this.labelAnswer.node.runAction(cc.sequence(actions));\n\n    ++App.getInstance().showCount;\n\n    if (cc.sys.isNative) {\n      this.btnEvaluate.active = App.getInstance().isShowEvaluate;\n    }\n\n    // 分享按钮显示控制\n    if (cc.sys.isNative) {\n      this.btnShare.stopAllActions();\n      this.btnShare.active = true;\n      this.btnShare.runAction(\n        cc.sequence([\n          cc.delayTime(duration1 * 2 + duration2),\n          cc.callFunc(() => (this.btnShare.active = false))\n        ])\n      );\n    }\n  }\n\n  /**\n   * 点击信息按钮\n   * @author Radish\n   */\n  public onClickInfo() {\n    if (cc.sys.isBrowser) {\n      cc.sys.openURL(\"http://www.qxqplant.com/\");\n    } else {\n      this.showDevelopInfo();\n    }\n  }\n\n  /**\n   * 点击评分按钮\n   * @author Radish\n   */\n  public onClickEvaluate() {\n    cc.log(\"=> onClickEvaluate\");\n\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"QXQUtils\",\n        \"showEvaluate:\",\n        JSON.stringify({\n          appId: Constants.APP.APPLE_APP_ID,\n          isUseAppStore: false,\n          callback: NativeResponse.push((value: string) => {\n            cc.log(`=> ${value}`);\n\n            let data: any = JSON.parse(value);\n            if (data.state === \"finish\") {\n              App.getInstance().isEvaluate = true;\n            }\n          })\n        })\n      );\n    } else {\n      App.getInstance().isEvaluate = true;\n    }\n  }\n\n  /**\n   * 点击分享\n   * @author Radish\n   */\n  public onClickShare() {\n    AnalyticsUtils.trackEvent(\"ShareStart\");\n\n    let path =\n      jsb.fileUtils.getWritablePath() + Constants.APP.CAPTURE_SCREEN_FILE_NAME;\n\n    let opacity = this.labelAnswer.node.opacity;\n    this.labelAnswer.node.opacity = 255;\n\n    if (Utils.captureScreen(App.getInstance().bottomNode, path)) {\n      cc.log(\"=> 截图成功\");\n      jsb.reflection.callStaticMethod(\n        \"AppleShare\",\n        \"shareImage:\",\n        JSON.stringify({\n          path,\n          callback: NativeResponse.push((value: string) => {\n            let data = JSON.parse(value);\n            if (data.result) {\n              AnalyticsUtils.trackEvent(\"ShareFinish\");\n            }\n          })\n        })\n      );\n    } else {\n      AnalyticsUtils.trackEvent(\"ShareCaptureScreenFailed\");\n    }\n\n    this.labelAnswer.node.opacity = opacity;\n  }\n\n  /**\n   * 展示开发者信息界面\n   * @author Radish\n   */\n  public showDevelopInfo() {\n    const childName = \"developerInfo\";\n\n    let child = App.getInstance().topNode.getChildByName(childName);\n    if (child) {\n      App.getInstance().topNode.removeChild(child);\n    }\n\n    cc.loader.loadRes(\n      \"prefabs/developerInfo\",\n      cc.Prefab,\n      (error: Error, resounce: any) => {\n        let node: cc.Node = cc.instantiate(resounce);\n        node.y = -cc.winSize.height * 0.5;\n        App.getInstance().topNode.addChild(node, 0, childName);\n      }\n    );\n  }\n\n  /**\n   * 侦听投票属性改变事件\n   * @author Radish\n   */\n  private onChangeIsEvaluate() {\n    if (cc.sys.isNative) {\n      this.btnEvaluate.active = App.getInstance().isShowEvaluate;\n    }\n  }\n\n  @property(cc.Label)\n  labelAnswer: cc.Label = null;\n\n  @property(cc.Button)\n  btnInfo: cc.Button = null;\n\n  @property(cc.Node)\n  btnEvaluate: cc.Node = null;\n\n  @property(cc.Node)\n  btnShare: cc.Node = null;\n\n  @property(cc.Node)\n  activityNode: cc.Node = null;\n}\n","/**\n * Native 回调管理相关\n * @author Radish\n */\n\nlet s_session: number = 0;\nlet s_callbacks: { [s: number]: (value: string) => void } = {};\n\nexport default class NativeResponse {\n  /**\n   * 添加回调函数\n   * @author Radish\n   */\n  public static push(callback: (value: string) => void): number {\n    let session = ++s_session;\n    s_callbacks[session] = callback;\n    return session;\n  }\n}\n\nif (cc.sys.isNative) {\n  if (!jsb.onNativeResponse) {\n    jsb.onNativeResponse = (\n      session: number,\n      value?: string,\n      isRemove: boolean = true\n    ) => {\n      if (value === null || value === undefined) {\n        delete s_callbacks[session];\n      } else {\n        let callback = s_callbacks[session];\n        if (callback) {\n          callback(value);\n\n          if (isRemove) {\n            delete s_callbacks[session];\n          }\n        }\n      }\n    };\n  }\n}\n","const { ccclass, property } = cc._decorator;\n\nimport AnalyticsUtils from \"../native/AnalyticsUtils\";\nimport Localized from \"../utils/i18n/Localized\";\nimport NativeResponse from \"../native/NativeResponse\";\nimport App from \"../App\";\nimport Utils from \"../utils/Utils\";\n\nconst PRODUCT_IDENTIFIERS = [\n  \"com.qxqplant.answers.water\",\n  \"com.qxqplant.answers.coffee\",\n  \"com.qxqplant.answers.noodles\"\n];\n\ninterface SubscriptionPeriod {\n  numberOfUnits?: number;\n  unit?: number;\n}\n\ninterface IntroductoryPrice {\n  price?: string;\n  currencySymbol?: string;\n  currencyCode?: string;\n  subscriptionPeriod?: SubscriptionPeriod;\n  numberOfPeriods?: number;\n  paymentMode?: number;\n}\n\ninterface Product {\n  localizedDescription?: string;\n  localizedTitle?: string;\n  price?: string;\n  currencySymbol?: string;\n  currencyCode?: string;\n  productIdentifier?: string;\n  downloadable?: boolean;\n  downloadContentLengths?: number[];\n  downloadContentVersion?: string;\n  subscriptionPeriod?: SubscriptionPeriod;\n  introductoryPrice?: IntroductoryPrice;\n  subscriptionGroupIdentifier?: string;\n}\n\n@ccclass\nexport default class PurchaseInfo extends cc.Component {\n  onLoad() {\n    AnalyticsUtils.trackEvent(\"PurchaseInfoPage\");\n\n    Localized.localizeLabel(this.labelTitle);\n    Localized.localizeLabel(this.labelClose);\n\n    this.m_buttons = [\n      this.btnDonateWater,\n      this.btnDonateCoffee,\n      this.btnDonateNoodles\n    ];\n    this.initButtons(this.m_buttons);\n\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      App.getInstance().active = true;\n\n      jsb.reflection.callStaticMethod(\n        \"ApplePayUtils\",\n        \"init:\",\n        JSON.stringify({\n          callback: NativeResponse.push((value: string) => {\n            let data = JSON.parse(value);\n            if (data.action === \"updated\") {\n              if (data.state === \"purchased\") {\n                App.getInstance().active = false;\n                let product = this.findProduct(data.payment.productIdentifier);\n                if (product) {\n                  Utils.showAlert(Localized.getValue(\"#purchase_success_title\"), product.localizedDescription, [Localized.getValue(\"#btn_confirm\")]);\n                } else {\n                  Utils.showAlert(Localized.getValue(\"#purchase_success_title\"), \"\", [Localized.getValue(\"#btn_confirm\")]);\n                }\n              } else if (data.state === \"failed\") {\n                App.getInstance().active = false;\n                Utils.showAlert(Localized.getValue(\"#purchase_failed_title\"), data.err, [Localized.getValue(\"#btn_confirm\")]);\n              }\n            }\n          })\n        })\n      );\n\n      jsb.reflection.callStaticMethod(\n        \"ApplePayUtils\",\n        \"requestProducts:\",\n        JSON.stringify({\n          identifiers: PRODUCT_IDENTIFIERS,\n          callback: NativeResponse.push((value: string) => {\n            App.getInstance().active = false;\n\n            let data: {\n              invalidProductIdentifiers?: string[];\n              products: Product[];\n            } = JSON.parse(value);\n\n            if (data.products && data.products.length >= 3) {\n              this.m_products = data.products;\n\n              for (let p of data.products) {\n                for (let index in PRODUCT_IDENTIFIERS) {\n                  let identifier = PRODUCT_IDENTIFIERS[index];\n                  if (p.productIdentifier === identifier) {\n                    if (this.m_buttons[index]) {\n                      this.initButton(this.m_buttons[index], p);\n                    }\n                    break;\n                  }\n                }\n              }\n            } else {\n              Utils.showAlert(\n                Localized.getValue(\"#request_products_failed_title\"),\n                Localized.getValue(\"#request_products_failed_content\"),\n                [Localized.getValue(\"#btn_confirm\")]\n              );\n              this.node.destroy();\n            }\n          })\n        })\n      );\n    }\n  }\n\n  onDestroy() {}\n\n  /**\n   * 点击捐赠按钮\n   * @author Radish\n   */\n  onClickDonate(eventTouch: cc.Event.EventTouch, data: string) {\n    let index = parseInt(data);\n    let identifier = PRODUCT_IDENTIFIERS[index];\n    if (identifier && this.findProduct(identifier)) {\n      jsb.reflection.callStaticMethod(\n        \"ApplePayUtils\",\n        \"payment:\",\n        JSON.stringify({ identifier })\n      );\n\n      App.getInstance().active = true;\n    }\n  }\n\n  /**\n   * 点击关闭按钮\n   * @author Radish\n   */\n  onClickClose() {\n    this.node.destroy();\n  }\n\n  /**\n   * 初始化按钮\n   * @author Radish\n   */\n  private initButton(button: cc.Node, product?: Product) {\n    let label = button.getChildByName(\"Label\").getComponent(cc.Label);\n\n    if (!product) {\n      label.string = Localized.getValue(\"#loading\");\n    } else {\n      let dot = \"\";\n      if (product.price.indexOf(\".\") === -1) {\n        dot = \".00\";\n      }\n\n      label.string = `${product.currencySymbol}${product.price}${dot} ${\n        product.localizedTitle\n      }`;\n    }\n  }\n\n  /**\n   * 初始化按钮显示\n   * @author Radish\n   */\n  private initButtons(buttons: cc.Node[]) {\n    for (let b of buttons) {\n      this.initButton(b);\n    }\n  }\n\n  /**\n   * 查询 Product 对象\n   * @author Radish\n   */\n  private findProduct(identifier: string) {\n    for (let p of this.m_products) {\n      if (p.productIdentifier === identifier) {\n        return p;\n      }\n    }\n\n    return null;\n  }\n\n  @property(cc.Label)\n  labelTitle: cc.Label = null;\n\n  @property(cc.Label)\n  labelClose: cc.Label = null;\n\n  @property(cc.Node)\n  btnDonateWater: cc.Node = null;\n\n  @property(cc.Node)\n  btnDonateCoffee: cc.Node = null;\n\n  @property(cc.Node)\n  btnDonateNoodles: cc.Node = null;\n\n  private m_buttons: cc.Node[] = [];\n  private m_products: Product[] = [];\n}\n","/**\n * 测试统计分析接口\n * @author Radish\n */\n\nconst { ccclass } = cc._decorator;\n\nimport AnalyticsUtils from \"../native/AnalyticsUtils\";\n\n@ccclass\nexport default class TestAnalyticsUtils extends cc.Component {\n  onClickPageAppear() {\n    AnalyticsUtils.trackPageAppear(\"testPage\");\n  }\n\n  onClickPageDisappear() {\n    AnalyticsUtils.trackPageDisappear(\"testPage\");\n  }\n\n  onClickTrackEvent() {\n    AnalyticsUtils.trackEvent(\"testEvent\");\n  }\n\n  onClickTrackEventWithProperties() {\n    AnalyticsUtils.trackEvent(\"testEvent\", { key1: \"value1\", key2: \"value2\" });\n  }\n\n  onClickTrackEventDurationBegin() {\n    AnalyticsUtils.trackEventDurationBegin(\"testEvent\");\n  }\n\n  onClickTrackEventDurationEnd() {\n    AnalyticsUtils.trackEventDurationEnd(\"testEvent\");\n  }\n\n  onClickTrackEventDuration() {\n    AnalyticsUtils.trackEventWithDuration(\"testEvent\", 10);\n  }\n}\n","/**\n * 一些常用功能\n * @author Radish\n */\n\nimport NativeResponse from \"../native/NativeResponse\";\n\nexport default class Utils {\n  /**\n   * 对 parent 节点截屏\n   * @param parent 截屏节点\n   * @param filePath 图片保存路径\n   * @author Radish\n   */\n  public static captureScreen(parent: cc.Node, filePath: string) {\n    let node = new cc.Node();\n    node.parent = parent;\n    node.width = parent.getContentSize().width;\n    node.height = parent.getContentSize().height;\n    let camera = node.addComponent(cc.Camera);\n\n    // 新建一个 RenderTexture，并且设置 camera 的 targetTexture 为新建的 RenderTexture，这样 camera 的内容将会渲染到新建的 RenderTexture 中。\n    let texture = new cc.RenderTexture();\n    texture.initWithSize(node.width, node.height);\n    camera.targetTexture = texture;\n\n    // 渲染一次摄像机，即更新一次内容到 RenderTexture 中\n    parent.scaleY = -1;\n    camera.render(node.parent);\n    parent.scaleY = 1;\n\n    // 这样我们就能从 RenderTexture 中获取到数据了\n    let data = texture.readPixels();\n    let width = texture.width;\n    let height = texture.height;\n    let fullPath = filePath;\n    if (jsb.fileUtils.isFileExist(fullPath)) {\n      jsb.fileUtils.removeFile(fullPath);\n    }\n\n    let result = jsb.saveImageData(data, width, height, fullPath);\n    node.destroy();\n\n    return result;\n  }\n\n  /**\n   * 显示 iOS 弹窗\n   * @author Radish\n   */\n  public static showAlert(\n    title: string,\n    message: string,\n    buttonTitles: string[],\n    callback?: (index: number) => void\n  ) {\n    let buttons = [];\n    buttonTitles.forEach(value => {\n      buttons.push({\n        title: value,\n        style: 0\n      });\n    });\n\n    jsb.reflection.callStaticMethod(\n      \"QXQUtils\",\n      \"showAlert:\",\n      JSON.stringify({\n        title,\n        message,\n        buttons,\n        callback: NativeResponse.push((value: string) => {\n          if (callback) {\n            let data: any = JSON.parse(value);\n            callback(data.idx);\n          }\n        })\n      })\n    );\n  }\n}\n"],"sourceRoot":"/source/","file":"project.js"}