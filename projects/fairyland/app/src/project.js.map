{"version":3,"sources":["assets/scripts/app/ui/component/common/AlertViewComponent.ts","assets/scripts/native/AnalyticsUtils.ts","assets/scripts/App.ts","assets/scripts/fairyland/system/CheckConfigSystem.ts","assets/scripts/fairyland/Consts.ts","assets/scripts/demo/DemoBattleMain.ts","assets/scripts/fairyland/system/DeployLaborForceSystem.ts","assets/scripts/fairyland/system/DeployLaborForceToPropSystem.ts","assets/scripts/fairyland/utils/Formatter.ts","assets/scripts/fairyland/system/HandlePropSystem.ts","assets/scripts/app/ui/component/main/HomeComponent.ts","assets/scripts/app/ui/component/home/IncreaseProgressBar.ts","assets/scripts/app/system/InitConfigSystem.ts","assets/scripts/app/system/InitOriginSystem.ts","assets/scripts/app/ui/component/home/LaborInfo.ts","assets/scripts/app/system/LocalStorageSystem.ts","assets/scripts/sys/i18n/Localized.ts","assets/scripts/app/ui/component/main/LoginComponent.ts","assets/scripts/app/ui/component/main/MainComponent.ts","assets/scripts/native/NativeResponse.ts","assets/scripts/app/ui/component/home/PlacePropListCell.ts","assets/scripts/app/ui/component/home/PlacePropsToolbar.ts","assets/scripts/fairyland/State.ts","assets/scripts/sys/Utils.ts"],"names":["_a","cc","_decorator","ccclass","property","AlertViewComponent","_super","_this","apply","this","arguments","label","__extends","prototype","setTitle","title","string","onClickClose","node","active","__decorate","Label","Component","exports","default","AnalyticsUtils","trackPageAppear","page","sys","isNative","os","OS_IOS","jsb","reflection","callStaticMethod","JSON","stringify","trackPageDisappear","trackEvent","name","properties","trackEventDurationBegin","trackEventDurationEnd","trackEventWithDuration","duration","AlertViewComponent_1","require","App","main","s_instance","Error","getInstance","Object","defineProperty","get","getChildByName","showAlert","getComponent","walk","config","propConfig","path","value","find","element","id","push","place","dependencies","_i","length","v","props","pop","checkLoopDependent","k","hasOwnProperty","big_js_1","PLACE_PROP_ID","B_CONFINE_MAX","K_CONFINE_MAX","mul","M_CONFINE_MAX","G_CONFINE_MAX","INCREASE_DURATION","PROP_ID_MONEY","_","DemoBattleMain","monsterViews","monsterListView","m_monsterGroups","m_monsters","onLoad","genMonsters","updateMonsterListView","genMonster","atk","hp","random","max","i","sort","a","b","divideIntoGroups","split","Math","floor","limit","j","onClickAttack","damage","_b","group_1","m","updateMonsterViews","onClickMonsterList","onClickCloseMonsterListView","onClickDivide","index","labelNode","group","count","group_2","color","Color","RED","BLACK","content","setContentSize","winSize","width","height","removeAllChildren","Node","opacity","anchorY","y","addComponent","fontSize","addChild","getContentSize","add","state","route","addend","result","plus","toString","set","isCanSub","subtractor","gte","sub","num","minus","getLaborForce","getMaxLaborForce","isCanSubMaxLaborForce","addLaborForce","isCanSubLaborForce","subLaborForce","addMaxLaborForce","laborForce","maxLaborForce","subMaxLaborForce","DeployLaborForceSystem_1","HandlePropSystem_1","addLaborForceToProp","propId","addedLaborForce","prop","getProp","lastLaborForce","bigCurrentLaborForce","bigAddedLaborForce","eq","gt","startProduceTimestamp","round","Date","now","subLaborForceFromProp","subedLaborForce","bigPropCurrentLaborForce","Consts_1","paddingZero","paddingNum","str","formatPropNum","bigNum","lt","toFixed","div","formatCountDownHHMMSS","sec","hour","min","getPropKey","getDefaultProp","lastNum","setProp","assign","producePlaceProp","configs","lte","steps","numPerLaborForce","parseInt","addProp","subProp","producePlaceProps","forEach","State_1","Utils_1","LocalStorageSystem_1","PlacePropsToolbar_1","HomeComponent","maskNode","m_toolbarNode","loadPrefab","resource","sent","instantiate","init","onHideHandle","hideToolbar","onShowHandle","showToolbar","update","dt","show","runAction","fadeTo","easing","easeSineOut","hide","seq","sequence","callFunc","onClickShanMen","save","onClickDanLu","Formatter_1","IncreaseProgressBar","progressBar","m_startTimestamp","m_duration","updateDisplay","reset","startTimestamp","progress","curDuration","ProgressBar","Localized_1","Utils","initProps","loadJson","getLocalizedRes","_c","propConfigs","initConfigs","initOrigin","origin","LaborInfo","setLabor","cur","InitOriginSystem_1","ACCOUNT","VERSION","getOriginLocalStorageKey","account","getStorageAccount","localStorage","getItem","setStorageAccount","setItem","delStorageAccount","removeItem","user","load","jsonOrigin","parse","NativeResponse_1","Localized","getLanguage","s_language","Promise","resolve","isBrowser","process","window","navigator","language","callback","getValue","key","loadLocalizedText","getValueSync","s_dict","s_defaultDict","getDefaultTTF","localizeLabel","reject","__awaiter","loader","loadRes","Font","err","font","url","toLocaleLowerCase","indexOf","language_1","p1","file","json","p2_1","then","catch","App_1","InitConfigSystem_1","LoginComponent","eBoxAccountInput","enterHome","onLoginClick","trim","homeNode","gameContainer","destroy","EditBox","MainComponent","loginNode","s_session","s_callbacks","NativeResponse","session","onNativeResponse","isRemove","undefined","DeployLaborForceToPropSystem_1","PlacePropListCell","icon","propName","quantity","labor","btnPlusNode","btnMinusNode","sfPlus","sfPlusF","sfMinus","sfMinusF","m_isInit","m_propId","m_state","onPropChanged","bind","onLaborForceChanged","onDestroy","removeListener","renderProgressBar","initDisplay","spriteFrame","renderQuantity","renderIcon","renderLabor","renderButtons","on","propLaborForce","loadSpriteFrame","ownLaborForce","sprite","Sprite","button","Button","interactable","elapse","onClickPlus","onClickMinus","args","lastValue","SpriteFrame","IncreaseProgressBar_1","LaborInfo_1","PlacePropListCell_1","PlacePropsToolbar","increaseProgressBar","laborInfo","scrollView","placePropListCell","m_isMoving","m_isDisplaying","m_args","updateLaborForce","updateProgressBar","cell","other","isMoving","isDisplaying","moveBy","Vec2","onClickSetting","onClickPlusMaxLaborForce","onClickMinusMaxLaborForce","ScrollView","Prefab","events_1","State","call","m_origin","m_configs","emit","defaultValue","EventEmitter","jsonAssets"],"mappings":"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","sourcesContent":["/**\n * 警告弹窗\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AlertViewComponent extends cc.Component {\n  @property(cc.Label)\n  public label: cc.Label = null;\n\n  /**\n   * 设置弹窗提示标题\n   * @author Radish\n   */\n  public setTitle(title: string) {\n    this.label.string = title;\n  }\n\n  /**\n   * 点击关闭按钮\n   * @author Radish\n   */\n  public onClickClose() {\n    this.node.active = false;\n  }\n}\n","/**\n * 分析统计 SDK 调用接口\n * @author Radish\n */\n\nexport default class AnalyticsUtils {\n  /**\n   * 页面呈现时调用\n   * @author Radish\n   */\n  public static trackPageAppear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageAppear:\",\n        JSON.stringify({ page }),\n      );\n    }\n  }\n\n  /**\n   * 页面关闭时调用\n   * @author Radish\n   */\n  public static trackPageDisappear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageDisappear:\",\n        JSON.stringify({ page }),\n      );\n    }\n  }\n\n  /**\n   * 追踪事件\n   * @author Radish\n   */\n  public static trackEvent(name: string, properties?: { [k: string]: string }) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEvent:\",\n        JSON.stringify({ name, properties }),\n      );\n    }\n  }\n\n  /**\n   * 上报事件开始\n   * @author Radish\n   */\n  public static trackEventDurationBegin(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationBegin:\",\n        JSON.stringify({ name }),\n      );\n    }\n  }\n\n  /**\n   * 上报事件结束\n   * @author Radish\n   */\n  public static trackEventDurationEnd(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationEnd:\",\n        JSON.stringify({ name }),\n      );\n    }\n  }\n\n  /**\n   * 上报一个带时长的事件\n   * @author Radish\n   */\n  public static trackEventWithDuration(name: string, duration: number) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventWithDuration:\",\n        JSON.stringify({ name, duration }),\n      );\n    }\n  }\n}\n","/**\n * 当前客户端的 App 实例\n * @author Radish\n */\n\nimport AlertViewComponent from \"./app/ui/component/common/AlertViewComponent\";\n\nexport default class App {\n  /**\n   * 单例模式, 获得 App 实例\n   * @author Radish\n   */\n  public static getInstance() {\n    if (this.s_instance === null) {\n      this.s_instance = new App();\n    }\n    return this.s_instance;\n  }\n\n  private static s_instance: App = null;\n\n  public main: cc.Node = null;\n\n  private constructor() {\n    if (App.s_instance !== null) {\n      throw new Error(\"App already initialized.\");\n    }\n  }\n\n  /**\n   * 获得 gameContainer 容器\n   * @author Radish\n   */\n  public get gameContainer(): cc.Node {\n    return this.main.getChildByName(\"gameContainer\");\n  }\n\n  /**\n   * 获得 sysContainer 容器\n   * @author Radish\n   */\n  public get sysContainer(): cc.Node {\n    return this.main.getChildByName(\"sysContainer\");\n  }\n\n  /**\n   * 显示弹窗\n   * @author Radish\n   */\n  public showAlert(title: string) {\n    const node = this.main.getChildByName(\"alertView\");\n    const component = node.getComponent(AlertViewComponent);\n    component.setTitle(title);\n    node.active = true;\n  }\n}\n","/**\n * 配置验证功能\n * @author Radish\n */\n\nimport { IConfig, IPropConfig } from \"../Types\";\n\n/**\n * 走过每一个节点, 看那风风雨雨, 起起落落, 点点滴滴\n * @author Radish\n */\nfunction walk(\n  config: IConfig,\n  propConfig: IPropConfig,\n  path: string[],\n): boolean {\n  const value = path.find((element) => {\n    return element === propConfig.id;\n  });\n\n  path.push(propConfig.id!);\n\n  if (value) {\n    return false;\n  } else {\n    if (propConfig.place && propConfig.place.dependencies) {\n      for (const v of propConfig.place.dependencies) {\n        if (!walk(config, config.props[v.id], path)) {\n          return false;\n        }\n      }\n    }\n  }\n\n  path.pop();\n  return true;\n}\n\n/**\n * 检查是否有循环组合\n * @author Radish\n */\nexport function checkLoopDependent(config: IConfig) {\n  for (const k in config.props) {\n    if (config.hasOwnProperty(k)) {\n      const path: string[] = [];\n      if (!walk(config, config.props[k], path)) {\n        return path;\n      }\n    }\n  }\n}\n","/**\n * 通用常量定义\n * @author Radish\n */\n\nimport Big from \"big.js\";\n\nexport const PLACE_PROP_ID = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\nexport const B_CONFINE_MAX = new Big(1000);\nexport const K_CONFINE_MAX = B_CONFINE_MAX.mul(1000);\nexport const M_CONFINE_MAX = K_CONFINE_MAX.mul(1000);\nexport const G_CONFINE_MAX = M_CONFINE_MAX.mul(1000);\nexport const INCREASE_DURATION = 4;\nexport const PROP_ID_MONEY = \"0\";\n","const { ccclass, property } = cc._decorator;\n\nimport * as _ from \"lodash\";\n\ninterface IMonster {\n  name: string;\n  hp: number;\n  atk: number;\n}\n\n@ccclass\nexport default class DemoBattleMain extends cc.Component {\n  @property([cc.Node])\n  public monsterViews: cc.Node[] = [];\n\n  @property(cc.Node)\n  public monsterListView: cc.Node = null;\n\n  private m_monsterGroups: IMonster[][] = [[], [], []];\n  private m_monsters: IMonster[] = [];\n\n  public onLoad() {\n    this.genMonsters();\n    this.updateMonsterListView();\n  }\n\n  /**\n   * 生成单个怪物对象\n   * @author Radish\n   */\n  private genMonster(): IMonster {\n    return {\n      atk: 1,\n      hp: _.random(1, 100, false),\n      name: \"鸭嘴兽\",\n    };\n  }\n\n  /**\n   * 生成怪物对象集合\n   * @author Radish\n   */\n  private genMonsters() {\n    const max = _.random(20, 50, false);\n    for (let i = 0; i < max; ++i) {\n      this.m_monsters.push(this.genMonster());\n    }\n    this.m_monsters.sort((a, b) => {\n      return a.hp - b.hp;\n    });\n  }\n\n  /**\n   * 降怪物分组\n   * @author Radish\n   */\n  private divideIntoGroups() {\n    this.m_monsterGroups = [[], [], []];\n    const split = Math.floor(this.m_monsters.length / 3);\n    for (let i = 0; i < 3; ++i) {\n      let limit = split * (i + 1);\n      if (i === 2) {\n        limit = this.m_monsters.length;\n      }\n\n      for (let j = split * i; j < limit; ++j) {\n        this.m_monsterGroups[i].push(this.m_monsters[j]);\n      }\n    }\n  }\n\n  /**\n   * 点击攻击\n   * @author Radish\n   */\n  private onClickAttack() {\n    for (const group of this.m_monsterGroups) {\n      let damage = 100;\n      for (const m of group) {\n        if (damage > 0) {\n          if (m.hp >= damage) {\n            m.hp -= damage;\n            damage = 0;\n          } else {\n            damage -= m.hp;\n            m.hp = 0;\n          }\n        }\n\n        if (damage === 0) {\n          break;\n        }\n      }\n    }\n\n    this.updateMonsterViews();\n  }\n\n  /**\n   * 点击怪物列表\n   * @author Radish\n   */\n  private onClickMonsterList() {\n    this.monsterListView.active = true;\n  }\n\n  private onClickCloseMonsterListView() {\n    this.monsterListView.active = false;\n  }\n\n  /**\n   * 点击拆分\n   * @author Radish\n   */\n  private onClickDivide() {\n    this.divideIntoGroups();\n    this.updateMonsterViews();\n  }\n\n  /**\n   * 更新妖怪视图\n   * @author Radish\n   */\n  private updateMonsterViews() {\n    for (const index in this.m_monsterGroups) {\n      if (this.m_monsterGroups.hasOwnProperty(index)) {\n        const view = this.monsterViews[index];\n        const labelNode = view.getChildByName(\"label\");\n        const label = labelNode.getComponent(cc.Label);\n\n        const group = this.m_monsterGroups[index];\n        if (group.length === 0) {\n          label.string = \"-\";\n          continue;\n        }\n\n        let hp = 0;\n        let count = 0;\n        let name = \"\";\n        for (const m of group) {\n          if (name === \"\") {\n            name = m.name;\n          }\n\n          hp += m.hp;\n          if (m.hp > 0) {\n            ++count;\n          }\n        }\n\n        label.string = `${name}\\n血量: ${hp}\\n数量: ${count}`;\n\n        if (count === 0) {\n          labelNode.color = cc.Color.RED;\n        } else {\n          labelNode.color = cc.Color.BLACK;\n        }\n      }\n    }\n  }\n\n  /**\n   * 更新\n   */\n  private updateMonsterListView() {\n    const view = this.monsterListView.getChildByName(\"view\");\n    const content = view.getChildByName(\"content\");\n    content.setContentSize(cc.winSize.width, cc.winSize.height);\n    content.removeAllChildren();\n\n    let height = 0;\n    for (const i in this.m_monsters) {\n      if (this.m_monsters.hasOwnProperty(i)) {\n        const m = this.m_monsters[i];\n        const node = new cc.Node();\n        if (m.hp > 0) {\n          node.color = cc.Color.BLACK;\n        } else {\n          node.color = cc.Color.RED;\n        }\n        node.opacity = 255;\n        node.anchorY = 1.0;\n        node.y = -i * 32;\n        height += 32;\n\n        const label = node.addComponent(cc.Label);\n        label.fontSize = 24;\n        label.string = `=>${i + 1}, ${m.name}, hp = ${m.hp}`;\n\n        content.addChild(node);\n      }\n    }\n\n    if (content.getContentSize().height < height) {\n      content.setContentSize(cc.winSize.width, height);\n    }\n  }\n}\n","/**\n * 在 demo 中, 劳动力的处理方式\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport State from \"../State\";\n\nfunction add(state: State, route: string, addend: string): string {\n  const num: Big = new Big(state.get(route));\n  const result = num.plus(addend).toString();\n  state.set(route, result);\n  return result;\n}\n\nfunction isCanSub(state: State, route: string, subtractor: string): boolean {\n  const num: Big = new Big(state.get(route));\n  return num.gte(subtractor);\n}\n\nfunction sub(state: State, route: string, subtractor: string): boolean {\n  if (isCanSub(state, route, subtractor)) {\n    const num: Big = new Big(state.get(route));\n    state.set(route, num.minus(subtractor).toString());\n    return true;\n  }\n  return false;\n}\n\n/**\n * 获得当前劳动力的数量\n * @author Radish\n */\nexport function getLaborForce(state: State): string {\n  return state.get(\"laborForce\", \"0\");\n}\n\n/**\n * 获得当前劳动力的最大值\n * @author Radish\n */\nexport function getMaxLaborForce(state: State): string {\n  return state.get(\"maxLaborForce\", \"0\");\n}\n\n/**\n * 增加当前劳动力\n * @return 返回加法运算之后的结果\n * @author Radish\n */\nexport function addLaborForce(state: State, addend: string): string {\n  return add(state, \"laborForce\", addend);\n}\n\n/**\n * 判断是否能够减少当前劳动力总数\n * @returns true 可减, false 不可减\n * @author Radish\n */\nexport function isCanSubLaborForce(state: State, subtractor: string): boolean {\n  return isCanSub(state, \"laborForce\", subtractor);\n}\n\n/**\n * 减少当前劳动力\n * @return 如果减掉 subtractor 小于 0, 那么返回 false, 表示减法运算不成功; 否则返回 true.\n * @author Radish\n */\nexport function subLaborForce(state: State, subtractor: string): boolean {\n  return sub(state, \"laborForce\", subtractor);\n}\n\n/**\n * 增加劳动力上限\n * @author Radish\n */\nexport function addMaxLaborForce(\n  state: State,\n  addend: string,\n): { laborForce: string; maxLaborForce: string } {\n  const laborForce = add(state, \"laborForce\", addend);\n  const maxLaborForce = add(state, \"maxLaborForce\", addend);\n  return { laborForce, maxLaborForce };\n}\n\n/**\n * 判断是否能够减少劳动力上限\n * @author Radish\n */\nexport function isCanSubMaxLaborForce(\n  state: State,\n  subtractor: string,\n): boolean {\n  const laborForce = getLaborForce(state);\n  const maxLaborForce = getMaxLaborForce(state);\n  const result = laborForce === maxLaborForce;\n  if (result) {\n    return isCanSub(state, \"maxLaborForce\", subtractor);\n  }\n  return result;\n}\n\n/**\n * 判断是否能够减少劳动力上限\n * @author Radish\n */\nexport function subMaxLaborForce(state: State, subtractor: string): boolean {\n  if (isCanSubMaxLaborForce(state, subtractor)) {\n    sub(state, \"laborForce\", subtractor);\n    sub(state, \"maxLaborForce\", subtractor);\n    return true;\n  }\n  return false;\n}\n","/**\n * 分配劳动力给素材的相关功能\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport State from \"../State\";\nimport {\n  addLaborForce,\n  getLaborForce,\n  subLaborForce,\n} from \"./DeployLaborForceSystem\";\nimport { getProp } from \"./HandlePropSystem\";\n\n/**\n * 给素材分配劳动力\n * @returns true 操作成功, false 操作失败\n * @author Radish\n */\nexport function addLaborForceToProp(\n  state: State,\n  propId: string,\n  addedLaborForce: string,\n): boolean {\n  const prop = getProp(state, propId);\n  const lastLaborForce = prop.laborForce;\n  const bigCurrentLaborForce = new Big(getLaborForce(state));\n  const bigAddedLaborForce = new Big(addedLaborForce);\n  if (bigCurrentLaborForce.gte(bigAddedLaborForce)) {\n    prop.laborForce = bigAddedLaborForce.add(prop.laborForce).toString();\n\n    // 当劳动力从无变有的时候, 开始计时\n    if (new Big(lastLaborForce).eq(0) && new Big(prop.laborForce).gt(0)) {\n      prop.startProduceTimestamp = Math.round(Date.now() / 1000);\n    }\n\n    state.set(\"props[\" + prop.id + \"]\", prop);\n    subLaborForce(state, addedLaborForce);\n    return true;\n  }\n  return false;\n}\n\n/**\n * 给素材减少劳动力\n * @author Radish\n */\nexport function subLaborForceFromProp(\n  state: State,\n  propId: string,\n  subedLaborForce: string,\n): boolean {\n  const prop = getProp(state, propId);\n  const bigPropCurrentLaborForce = new Big(prop.laborForce);\n  if (bigPropCurrentLaborForce.gte(subedLaborForce)) {\n    prop.laborForce = bigPropCurrentLaborForce\n      .minus(subedLaborForce)\n      .toString();\n    state.set(\"props[\" + prop.id + \"]\", prop);\n    addLaborForce(state, subedLaborForce);\n    return true;\n  }\n  return false;\n}\n","/**\n * 格式化文本相关处理\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport {\n  B_CONFINE_MAX,\n  G_CONFINE_MAX,\n  K_CONFINE_MAX,\n  M_CONFINE_MAX,\n} from \"../Consts\";\n\n/**\n * 格式化道具当前数量文本\n * @author Radish\n */\nexport function formatPropNum(num: string): string {\n  const bigNum = new Big(num);\n  if (bigNum.lt(B_CONFINE_MAX)) {\n    return new Big(num).toFixed(2);\n  } else if (bigNum.lt(K_CONFINE_MAX)) {\n    return bigNum.div(B_CONFINE_MAX).toFixed(2) + \"K\";\n  } else if (bigNum.lt(M_CONFINE_MAX)) {\n    return bigNum.div(K_CONFINE_MAX).toFixed(2) + \"M\";\n  } else if (bigNum.lt(G_CONFINE_MAX)) {\n    return bigNum.div(M_CONFINE_MAX).toFixed(2) + \"G\";\n  } else {\n    return bigNum.div(G_CONFINE_MAX).toFixed(2) + \"T\";\n  }\n}\n\n/**\n * 补 0\n * @author Radish\n */\nfunction paddingZero(num: string, paddingNum = 2) {\n  let str = \"\";\n  const max = paddingNum - num.length;\n\n  for (let i = 0; i < max; ++i) {\n    str += \"0\";\n  }\n\n  return str + num;\n}\n\n/**\n * 格式化秒的显示\n * 例如: 100 秒 => 00:01:40\n * @author Radish\n */\nexport function formatCountDownHHMMSS(sec: number): string {\n  if (sec >= 3600) {\n    const hour = sec % 3600;\n    const min = (sec - hour * 3600) % 60;\n    sec = sec - hour * 3600 - min * 60;\n    return `${paddingZero(hour.toString())}:${paddingZero(\n      min.toString(),\n    )}:${paddingZero(sec.toString())}`;\n  } else if (sec >= 60) {\n    const min = sec % 60;\n    sec = sec - min * 60;\n    return `00:${paddingZero(min.toString())}:${paddingZero(sec.toString())}`;\n  } else {\n    return `00:00:${paddingZero(sec.toString())}`;\n  }\n}\n","/**\n * 处理道具相关功能的系统\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport { PLACE_PROP_ID } from \"../Consts\";\nimport State from \"../State\";\nimport { IProp, IPropConfig } from \"../Types\";\n\n/**\n * 获得道具的路由键\n * @author Radish\n */\nexport function getPropKey(propId: string) {\n  return \"props\" + `[${propId}]`;\n}\n\n/**\n * 获得默认的道具数据对象\n * @return 返回实际的实例引用\n * @author Radish\n */\nexport function getDefaultProp(propId: string): IProp {\n  const timestamp = Math.floor(Date.now() / 1000);\n  return {\n    id: propId,\n    laborForce: \"0\",\n    lastNum: \"0\",\n    num: \"0\",\n    startProduceTimestamp: timestamp,\n  };\n}\n\n/**\n * 设置 prop\n * @author Radish\n */\nexport function setProp(state: State, prop: IProp) {\n  const route = getPropKey(prop.id);\n  state.set(route, prop);\n}\n\n/**\n * 获得 prop\n * @returns 实例副本, 浅拷贝\n * @author Radish\n */\nexport function getProp(state: State, propId: string): IProp {\n  const route = getPropKey(propId);\n  const prop = state.get(route, getDefaultProp(propId));\n  return Object.assign({}, prop);\n}\n\n/**\n * 增加资源\n * @author Radish\n */\nexport function addProp(state: State, propId: string, num: string) {\n  if (num === \"0\") {\n    return;\n  }\n\n  const prop = getProp(state, propId);\n  prop.lastNum = prop.num;\n  prop.num = new Big(prop.num).plus(num).toString();\n  setProp(state, prop);\n}\n\n/**\n * 减少资源\n * @author Radish\n */\nexport function subProp(state: State, propId: string, num: string) {\n  if (num === \"0\") {\n    return;\n  }\n\n  const prop = getProp(state, propId);\n  prop.lastNum = prop.num;\n  prop.num = new Big(prop.num).sub(num).toString();\n  setProp(state, prop);\n}\n\n/**\n * 放置资源生产\n * @author Radish\n */\nexport function producePlaceProp(state: State, propId: string) {\n  const config = state.configs.props[propId];\n  const prop = getProp(state, propId);\n  if (new Big(prop.laborForce).lte(0)) {\n    return;\n  }\n\n  const duration = Math.floor(Date.now() / 1000) - prop.startProduceTimestamp;\n  if (duration <= 0) {\n    return;\n  }\n\n  const steps: number = Math.floor(duration / config.place.duration);\n  if (steps <= 0) {\n    return;\n  }\n\n  prop.lastNum = prop.num;\n  prop.num = new Big(steps)\n    .mul(config.place.numPerLaborForce)\n    .mul(prop.laborForce)\n    .add(prop.num)\n    .toString();\n  prop.startProduceTimestamp = parseInt(\n    new Big(prop.startProduceTimestamp)\n      .add(new Big(steps).mul(config.place.duration))\n      .toString(),\n    10,\n  );\n  setProp(state, prop);\n}\n\n/**\n * 生产全部放置资源\n * @author Radish\n */\nexport function producePlaceProps(state: State) {\n  PLACE_PROP_ID.forEach((value) => {\n    producePlaceProp(state, value);\n  });\n}\n\n/// 计算增长率\n// export function calculateIncreaseRate(\n//   state: State,\n//   propId: string,\n//   duration: number,\n// ) {\n//   const prop: IProp = getProp(state, propId);\n//   const bigNum = new Big(prop.num);\n//   prop.increaseRate = bigNum\n//     .sub(prop.lastNum)\n//     .div(duration)\n//     .toString();\n//   setProp(state, prop);\n// }\n\n/// 计算纯的增长数量\n// function calculatePureProduceNum(\n//   state: State,\n//   propId: string,\n//   duration: number,\n// ) {\n//   const prop = getProp(state, propId);\n//   const config = state.configs.props[propId];\n//   return new Big(config.place!.numPerLaborForcePerSec)\n//     .mul(prop.laborForce)\n//     .mul(duration)\n//     .toString();\n// }\n\n/// 道具生产\n// function produceProp(\n//   state: State,\n//   propId: string,\n//   filter: { [k: string]: boolean },\n//   duration: number,\n// ) {\n//   if (filter[propId]) {\n//     return;\n//   }\n//   filter[propId] = true;\n\n//   const config: IPropConfig = state.configs.props[propId];\n//   if (config.place) {\n//     const prop = getProp(state, propId);\n\n//     if (config.place.dependencies) {\n//       // 1. 预计算总消耗量\n//       const advanceProduceNum = calculatePureProduceNum(\n//         state,\n//         propId,\n//         duration,\n//       );\n//       let actualProduceNum: Big = new Big(advanceProduceNum);\n\n//       // 2. 生产依赖的素材\n//       for (const { id, num } of config.place.dependencies) {\n//         produceProp(state, id, filter, duration);\n\n//         const depProp = getProp(state, id);\n\n//         // 2.1 计算依赖道具需要的消耗\n//         const bigConsume = new Big(num).mul(advanceProduceNum);\n\n//         // 2.2 如果依赖道具不足, 那么根据当前依赖道具拥有的数量, 计算出实际合成产出, 这个产出是所有依赖道具所能产生的最小值\n//         if (bigConsume.gt(depProp.num)) {\n//           const tempActualProduceNum = new Big(depProp.num).div(num);\n//           if (actualProduceNum.gt(tempActualProduceNum)) {\n//             actualProduceNum = tempActualProduceNum;\n//           }\n//         }\n//       }\n\n//       // 没有生产则直接返回\n//       if (actualProduceNum.eq(\"0\")) {\n//         return;\n//       }\n\n//       // 3. 计算累加合成道具的数量\n//       prop.num = actualProduceNum.add(prop.num).toString();\n//       setProp(state, prop);\n\n//       // 4. 根据实际的产出数量计算依赖道具的消耗\n//       for (const { id, num } of config.place.dependencies) {\n//         const depProp = getProp(state, id);\n//         const consume: Big = new Big(num).mul(actualProduceNum);\n//         depProp.num = new Big(depProp.num).sub(consume).toString();\n//         setProp(state, depProp);\n//       }\n//     } else {\n//       prop.num = new Big(calculatePureProduceNum(state, propId, duration))\n//         .add(prop.num)\n//         .toString();\n//       setProp(state, prop);\n//     }\n//   }\n// }\n\n/// 更新道具的数量\n// export function produceProps(state: State, duration: number) {\n//   for (const id of PLACE_PROP_ID) {\n//     const prop = getProp(state, id);\n//     prop.lastNum = prop.num;\n//     setProp(state, prop);\n//   }\n\n//   const filter: { [k: string]: boolean } = {};\n//   for (const id of PLACE_PROP_ID) {\n//     produceProp(state, id, filter, duration);\n//   }\n\n//   for (const id of PLACE_PROP_ID) {\n//     calculateIncreaseRate(state, id, duration);\n//   }\n// }\n","/**\n * 家园界面\n * @author Radish\n */\n\nimport { INCREASE_DURATION, PROP_ID_MONEY } from \"../../../../fairyland/Consts\";\nimport State from \"../../../../fairyland/State\";\nimport {\n  addProp,\n  producePlaceProps,\n} from \"../../../../fairyland/system/HandlePropSystem\";\nimport { loadPrefab } from \"../../../../sys/Utils\";\nimport { save } from \"../../../system/LocalStorageSystem\";\nimport PlacePropsToolbar from \"../home/PlacePropsToolbar\";\n\nconst { ccclass, property } = cc._decorator;\nconst MASK_OPACITY = 128;\n\n@ccclass\nexport default class HomeComponent extends cc.Component {\n  @property(cc.Node)\n  public maskNode: cc.Node = null;\n\n  private m_toolbarNode: cc.Node = null;\n\n  public async onLoad() {\n    this.maskNode.opacity = MASK_OPACITY;\n    this.maskNode.active = true;\n\n    // toolbar\n    const resource = await loadPrefab(\"prefabs/home/PlacePropsToolbar\");\n    if (resource) {\n      const node = cc.instantiate(resource);\n      this.node.getChildByName(\"toolbar\").addChild(node);\n      this.m_toolbarNode = node;\n      this.m_toolbarNode.getComponent(PlacePropsToolbar).init(\n        {\n          onHideHandle: () => {\n            this.hideToolbar();\n          },\n          onShowHandle: () => {\n            this.showToolbar();\n          },\n        },\n        State.getInstance(),\n      );\n    }\n\n    this.maskNode.active = false;\n  }\n\n  public update(dt: number) {\n    producePlaceProps(State.getInstance());\n  }\n\n  /**\n   * 显示资源配置栏\n   * @author Radish\n   */\n  public showToolbar() {\n    this.m_toolbarNode.getComponent(PlacePropsToolbar).show((duration) => {\n      this.maskNode.active = true;\n      this.maskNode.opacity = 0;\n      this.maskNode.runAction(\n        cc.fadeTo(duration, MASK_OPACITY).easing(cc.easeSineOut()),\n      );\n    });\n  }\n\n  /**\n   * 隐藏资源配置栏\n   * @author Radish\n   */\n  public hideToolbar() {\n    this.m_toolbarNode.getComponent(PlacePropsToolbar).hide((duration) => {\n      const seq = cc.sequence([\n        cc.fadeTo(duration, 0).easing(cc.easeSineOut()),\n        cc.callFunc(() => {\n          this.maskNode.active = false;\n        }),\n      ]);\n      this.maskNode.runAction(seq);\n    });\n  }\n\n  /**\n   * 点击山门按钮\n   * @author Radish\n   */\n  public onClickShanMen() {\n    save(State.getInstance());\n  }\n\n  /**\n   * 点击丹炉按钮\n   * @author Radish\n   */\n  public onClickDanLu() {\n    addProp(State.getInstance(), PROP_ID_MONEY, \"1\");\n  }\n}\n","/**\n * 大厅放置增加时间条\n * @author Radish\n */\n\nimport { formatCountDownHHMMSS } from \"../../../../fairyland/utils/Formatter\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class IncreaseProgressBar extends cc.Component {\n  @property(cc.ProgressBar)\n  public progressBar: cc.ProgressBar = null;\n\n  @property(cc.Label)\n  public label: cc.Label = null;\n\n  private m_startTimestamp: number = 0;\n  private m_duration: number = 0;\n\n  public onLoad() {\n    this.updateDisplay();\n  }\n\n  /**\n   * 重置进度条参数\n   * @author Radish\n   */\n  public reset(startTimestamp: number, duration: number) {\n    this.m_startTimestamp = startTimestamp;\n    this.m_duration = duration;\n    this.updateDisplay();\n  }\n\n  public update(dt: number) {\n    this.updateDisplay();\n  }\n\n  /**\n   * 更新显示\n   * @author Radish\n   */\n  private updateDisplay() {\n    const defaultProgressValue = 0;\n    const defaultLabelValue = \"00:00:00\";\n\n    if (this.m_startTimestamp === 0 || this.m_duration === 0) {\n      this.progressBar.progress = defaultProgressValue;\n      this.label.string = defaultLabelValue;\n    } else {\n      const curTimestamp = Date.now();\n      const curDuration = (curTimestamp - this.m_startTimestamp) / 1000;\n\n      if (curDuration < 0) {\n        this.progressBar.progress = defaultProgressValue;\n        this.label.string = defaultLabelValue;\n      } else {\n        this.progressBar.progress = curDuration / this.m_duration;\n        if (this.m_duration > curDuration) {\n          this.label.string = formatCountDownHHMMSS(\n            this.m_duration - Math.floor(curDuration),\n          );\n        } else {\n          this.label.string = defaultLabelValue;\n        }\n      }\n    }\n  }\n}\n","/**\n * 初始化配置相关功能\n * @author Radish\n */\n\nimport State from \"../../fairyland/State\";\nimport { IConfig } from \"../../fairyland/Types\";\nimport Localized from \"../../sys/i18n/Localized\";\nimport * as Utils from \"../../sys/Utils\";\n\n/**\n * 初始化配置\n * @author Radish\n */\nexport async function initConfigs(state: State) {\n  await initProps(state.configs);\n}\n\n/**\n * 初始化道具配置\n * @author Radish\n */\nexport async function initProps(config: IConfig) {\n  const propConfigs = await Utils.loadJson(\n    await Localized.getLocalizedRes(\"configs/Props\"),\n  );\n  config.props = propConfigs;\n}\n","/**\n * 初始化 State.origin\n * @author Radish\n */\n\nimport { IOrigin } from \"../../fairyland/Types\";\n\n/**\n * 初始化 Origin 实例\n * @author Radish\n */\nexport function initOrigin(origin: IOrigin): IOrigin {\n  for (const k in origin.props) {\n    if (origin.props.hasOwnProperty(k)) {\n      const prop = origin.props[k];\n      if (!prop.startProduceTimestamp) {\n        prop.startProduceTimestamp = Math.floor(Date.now() / 1000);\n      }\n    }\n  }\n  return origin;\n}\n","/**\n * 大厅劳动力信息展示\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LaborInfo extends cc.Component {\n  @property(cc.Label)\n  public label: cc.Label = null;\n\n  /**\n   * 设置劳动力的展示\n   * @author Radish\n   */\n  public setLabor(cur: string, max: string) {\n    this.label.string = `${cur}/${max}`;\n  }\n}\n","/**\n * 本地存储相关处理\n * @author Radish\n */\n\nimport * as _ from \"lodash\";\nimport State from \"../../fairyland/State\";\nimport { producePlaceProps } from \"../../fairyland/system/HandlePropSystem\";\nimport { initOrigin } from \"./InitOriginSystem\";\n\nconst ACCOUNT = \"account\";\nconst VERSION = \"1\";\n\n/**\n * 获得本地存储的账户\n * @author Radish\n */\nexport function getStorageAccount() {\n  return cc.sys.localStorage.getItem(ACCOUNT + \"-\" + VERSION);\n}\n\n/**\n * 设置本地存储的账户数据\n * @author Radish\n */\nexport function setStorageAccount(account: string) {\n  cc.sys.localStorage.setItem(ACCOUNT + \"-\" + VERSION, account);\n}\n\n/**\n * 删除本地缓存的账户信息\n * @author Radish\n */\nexport function delStorageAccount() {\n  cc.sys.localStorage.removeItem(ACCOUNT + \"-\" + VERSION);\n}\n\n/**\n * 存储数据\n * @author Radish\n */\nexport function save(state: State) {\n  cc.sys.localStorage.setItem(\n    getOriginLocalStorageKey(state.origin.user.account),\n    JSON.stringify(state.origin),\n  );\n}\n\n/**\n * 读取数据\n * @author Radish\n */\nexport function load(account: string, state: State) {\n  const jsonOrigin = cc.sys.localStorage.getItem(\n    getOriginLocalStorageKey(account),\n  );\n\n  if (jsonOrigin) {\n    state.origin = initOrigin(JSON.parse(jsonOrigin));\n  }\n\n  producePlaceProps(state);\n}\n\n/**\n * 获得本地存储的键\n * @author Radish\n */\nfunction getOriginLocalStorageKey(account: string) {\n  return account + \"-origin-\" + VERSION;\n}\n","/**\n * i18n 处理\n * @author Radish\n */\n\nimport NativeResponse from \"../../native/NativeResponse\";\n\nexport default class Localized {\n  /**\n   * 获得当前使用语言标识\n   * @author Radish\n   */\n  public static async getLanguage() {\n    if (!this.s_language) {\n      if (cc.sys.isBrowser) {\n        this.s_language = this.process(window.navigator.language);\n        return Promise.resolve(this.s_language);\n      }\n\n      if (cc.sys.os === cc.sys.OS_IOS) {\n        return new Promise((resolve) => {\n          jsb.reflection.callStaticMethod(\n            \"QXQUtils\",\n            \"getLanguage:\",\n            JSON.stringify({\n              callback: NativeResponse.push((value: string) => {\n                this.s_language = this.process(value);\n                resolve(this.s_language);\n              }),\n            }),\n          );\n        });\n      } else {\n        this.s_language = \"en\";\n        return Promise.resolve(this.s_language);\n      }\n    } else {\n      return Promise.resolve(this.s_language);\n    }\n  }\n\n  /**\n   * 本地化文本内容, 异步\n   * @author Radish\n   */\n  public static async getValue(key: string) {\n    await this.loadLocalizedText();\n    return this.getValueSync(key);\n  }\n\n  /**\n   * 本地化文本内容, 同步\n   * @author Radish\n   */\n  public static getValueSync(key: string) {\n    let value = this.s_dict[key];\n    if (!value) {\n      value = this.s_defaultDict[key];\n      if (!value) {\n        return key;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * 获得默认的 TTF 字体\n   * @author Radish\n   */\n  public static async getDefaultTTF() {\n    const language = await this.getLanguage();\n    return language + \"/fonts/default.ttf\";\n  }\n\n  /**\n   * 本地化 label 控件\n   * @author Radish\n   */\n  public static async localizeLabel(label: cc.Label) {\n    label.string = await this.getValue(label.string);\n    return new Promise(async (resolve, reject) => {\n      cc.loader.loadRes(await this.getDefaultTTF(), cc.Font, (err, font) => {\n        if (err) {\n          if (CC_DEBUG) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        } else {\n          label.font = font;\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * 获得本地化资源\n   * @author Radish\n   */\n  public static async getLocalizedRes(url: string) {\n    const language = await this.getLanguage();\n    return language + \"/\" + url;\n  }\n\n  private static s_language: string = null;\n  private static s_dict: { [k: string]: string } = {};\n  private static s_defaultDict: { [k: string]: string } = {};\n\n  /**\n   * 对浏览器/终端返回的语言字符串做处理\n   * @author Radish\n   */\n  private static process(value: string): string {\n    value = value.toLocaleLowerCase();\n    if (value.indexOf(\"zh-hant\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-hans\") !== -1) {\n      return \"zh-hans\";\n    } else if (value.indexOf(\"zh-tw\") !== -1 || value.indexOf(\"zh-hk\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-cn\") !== -1) {\n      return \"zh-hans\";\n    } else if (value === \"zh\") {\n      return \"zh-hans\";\n    } else {\n      return \"en\";\n    }\n  }\n\n  /**\n   * 加载本地化的文本\n   * @author Radish\n   */\n  private static async loadLocalizedText() {\n    if (this.s_dict === null && this.s_defaultDict === null) {\n      const language = await this.getLanguage();\n      const p1 = new Promise(async (resolve, reject) => {\n        cc.loader.loadRes(language + \"/configs/Localized\", (err, file) => {\n          if (!err) {\n            this.s_dict = file.json;\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n\n      const p2 = new Promise((resolve, reject) => {\n        cc.loader.loadRes(language + \"/configs/Localized\", (err, file) => {\n          if (!err) {\n            this.s_defaultDict = file.json;\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n      return p1.then(() => p2).catch(() => p2);\n    } else {\n      return Promise.resolve();\n    }\n  }\n}\n","/**\n * Demo 登录界面\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport App from \"../../../../App\";\nimport State from \"../../../../fairyland/State\";\nimport * as Utils from \"../../../../sys/Utils\";\nimport { initConfigs } from \"../../../system/InitConfigSystem\";\nimport {\n  getStorageAccount,\n  load,\n  save,\n  setStorageAccount,\n} from \"../../../system/LocalStorageSystem\";\n\n@ccclass\nexport default class LoginComponent extends cc.Component {\n  @property(cc.EditBox)\n  public eBoxAccountInput: cc.EditBox = null;\n\n  public async onLoad() {\n    await initConfigs(State.getInstance());\n\n    const account = getStorageAccount();\n    if (account) {\n      this.eBoxAccountInput.string = account;\n      await load(account, State.getInstance());\n      this.enterHome();\n    }\n  }\n\n  /**\n   * 点击登录\n   * @author Radish\n   */\n  public async onLoginClick() {\n    if (this.eBoxAccountInput.string === \"\" || !this.eBoxAccountInput.string) {\n      App.getInstance().showAlert(\"用户名不能为空\");\n      return;\n    }\n\n    const account = this.eBoxAccountInput.string.trim();\n    State.getInstance().set(\"user\", {\n      account,\n      id: \"0\",\n      name: account,\n    });\n    setStorageAccount(account);\n    save(State.getInstance());\n\n    await this.enterHome();\n  }\n\n  /**\n   * 进入家园界面\n   * @author Radish\n   */\n  private async enterHome() {\n    // const resource = await Utils.loadPrefab(\"prefabs/DemoHome\");\n    const resource = await Utils.loadPrefab(\"prefabs/Home\");\n    const homeNode = cc.instantiate(resource);\n    App.getInstance().gameContainer.addChild(homeNode as cc.Node);\n    this.node.destroy();\n  }\n}\n","const { ccclass } = cc._decorator;\n\nimport App from \"../../../../App\";\nimport * as Utils from \"../../../../sys/Utils\";\n\nconst LoginPrefabPath = \"prefabs/Login\";\n\n@ccclass\nexport default class MainComponent extends cc.Component {\n  public async onLoad() {\n    App.getInstance().main = this.node;\n\n    const resource = await Utils.loadPrefab(LoginPrefabPath);\n    const loginNode = cc.instantiate(resource);\n    App.getInstance().gameContainer.addChild(loginNode as cc.Node);\n  }\n}\n","/**\n * Native 回调管理相关\n * @author Radish\n */\n\nlet s_session: number = 0;\nconst s_callbacks: { [s: number]: (value: string) => void } = {};\n\nexport default class NativeResponse {\n  /**\n   * 添加回调函数\n   * @author Radish\n   */\n  public static push(callback: (value: string) => void): number {\n    const session = ++s_session;\n    s_callbacks[session] = callback;\n    return session;\n  }\n}\n\nif (cc.sys.isNative) {\n  if (!jsb.onNativeResponse) {\n    jsb.onNativeResponse = (\n      session: number,\n      value?: string,\n      isRemove: boolean = true,\n    ) => {\n      if (value === null || value === undefined) {\n        delete s_callbacks[session];\n      } else {\n        const callback = s_callbacks[session];\n        if (callback) {\n          callback(value);\n\n          if (isRemove) {\n            delete s_callbacks[session];\n          }\n        }\n      }\n    };\n  }\n}\n","/**\n * 放置道具列表中的单元格\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport State from \"../../../../fairyland/State\";\nimport { getLaborForce } from \"../../../../fairyland/system/DeployLaborForceSystem\";\nimport {\n  addLaborForceToProp,\n  subLaborForceFromProp,\n} from \"../../../../fairyland/system/DeployLaborForceToPropSystem\";\nimport { getProp } from \"../../../../fairyland/system/HandlePropSystem\";\nimport { IProp } from \"../../../../fairyland/Types\";\nimport { formatPropNum } from \"../../../../fairyland/utils/Formatter\";\nimport { loadSpriteFrame } from \"../../../../sys/Utils\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PlacePropListCell extends cc.Component {\n  @property(cc.Sprite)\n  public icon: cc.Sprite = null;\n\n  @property(cc.Label)\n  public propName: cc.Label = null;\n\n  @property(cc.Label)\n  public quantity: cc.Label = null;\n\n  @property(cc.Label)\n  public labor: cc.Label = null;\n\n  @property(cc.Node)\n  public btnPlusNode: cc.Node = null;\n\n  @property(cc.Node)\n  public btnMinusNode: cc.Node = null;\n\n  @property(cc.SpriteFrame)\n  public sfPlus: cc.SpriteFrame = null;\n\n  @property(cc.SpriteFrame)\n  public sfPlusF: cc.SpriteFrame = null;\n\n  @property(cc.SpriteFrame)\n  public sfMinus: cc.SpriteFrame = null;\n\n  @property(cc.SpriteFrame)\n  public sfMinusF: cc.SpriteFrame = null;\n\n  @property(cc.ProgressBar)\n  public progressBar: cc.ProgressBar = null;\n\n  private m_isInit: boolean = false;\n  private m_propId: string = null;\n  private m_state: State = null;\n\n  public onLoad() {\n    this.onPropChanged = this.onPropChanged.bind(this);\n    this.onLaborForceChanged = this.onLaborForceChanged.bind(this);\n  }\n\n  public onDestroy() {\n    if (this.m_state) {\n      this.m_state.removeListener(\n        `attribute_changed_props[${this.m_propId}]`,\n        this.onPropChanged,\n      );\n\n      this.m_state.removeListener(\n        \"attribute_changed_laborForce\",\n        this.onLaborForceChanged,\n      );\n    }\n  }\n\n  public update() {\n    this.renderProgressBar(getProp(this.m_state, this.m_propId));\n  }\n\n  /**\n   * 初始化初次展示\n   * @author Radish\n   */\n  public initDisplay(prop: IProp, state: State) {\n    if (this.m_isInit) {\n      return;\n    }\n    this.m_isInit = true;\n\n    this.m_propId = prop.id;\n    this.m_state = state;\n\n    this.icon.spriteFrame = null;\n\n    const config = this.m_state.configs.props[prop.id];\n    this.propName.string = config.name;\n\n    this.renderQuantity(prop);\n    this.renderIcon(prop);\n    this.renderLabor(prop);\n    this.renderButtons(prop, getLaborForce(this.m_state));\n    this.renderProgressBar(prop);\n\n    this.m_state.on(\n      `attribute_changed_props[${this.m_propId}]`,\n      this.onPropChanged,\n    );\n\n    this.m_state.on(\"attribute_changed_laborForce\", this.onLaborForceChanged);\n  }\n\n  /**\n   * 渲染数量\n   * @author Radish\n   */\n  public renderQuantity(prop: IProp) {\n    this.quantity.string = formatPropNum(prop.num);\n  }\n\n  /**\n   * 渲染图标\n   * @author Radish\n   */\n  public async renderIcon(prop: IProp) {\n    const propLaborForce = new Big(prop.laborForce);\n    const url = `props/Prop_${prop.id}_`;\n\n    if (propLaborForce.eq(0)) {\n      const resource = await loadSpriteFrame(url + \"N\");\n      if (resource) {\n        this.icon.spriteFrame = resource;\n      }\n    } else {\n      const resource = await loadSpriteFrame(url + \"R\");\n      if (resource) {\n        this.icon.spriteFrame = resource;\n      }\n    }\n  }\n\n  /**\n   * 渲染劳动力数量\n   * @author Radish\n   */\n  public renderLabor(prop: IProp) {\n    this.labor.string = prop.laborForce;\n  }\n\n  /**\n   * 渲染 +/- 按钮\n   * @author Radish\n   */\n  public renderButtons(prop: IProp, laborForce: string) {\n    const ownLaborForce = new Big(laborForce);\n    const propLaborForce = new Big(prop.laborForce);\n\n    // +, 可分配劳动力时, 红色; 无劳动力分配时灰色\n    if (ownLaborForce.gt(0)) {\n      const sprite = this.btnPlusNode.getComponent(cc.Sprite);\n      const button = this.btnPlusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfPlus;\n      button.interactable = true;\n    } else if (ownLaborForce.eq(0)) {\n      const sprite = this.btnPlusNode.getComponent(cc.Sprite);\n      const button = this.btnPlusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfPlusF;\n      button.interactable = false;\n    }\n\n    // -, 当劳动力为 0 时, 灰色; 有劳动力分配时红色\n    if (propLaborForce.eq(0)) {\n      const sprite = this.btnMinusNode.getComponent(cc.Sprite);\n      const button = this.btnMinusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfMinusF;\n      button.interactable = false;\n    } else if (propLaborForce.gt(0)) {\n      const sprite = this.btnMinusNode.getComponent(cc.Sprite);\n      const button = this.btnMinusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfMinus;\n      button.interactable = true;\n    }\n  }\n\n  /**\n   * 渲染进度条\n   * @author Radish\n   */\n  public renderProgressBar(prop: IProp) {\n    if (new Big(prop.laborForce).gt(0)) {\n      const config = this.m_state.configs.props[prop.id];\n      const now = Date.now() / 1000;\n      const timestamp = prop.startProduceTimestamp;\n      const elapse = now - timestamp;\n      if (elapse >= 0) {\n        this.progressBar.progress = elapse / config.place.duration;\n      } else {\n        this.progressBar.progress = 0;\n      }\n    } else {\n      this.progressBar.progress = 0;\n    }\n  }\n\n  /**\n   * 点击 + 按钮\n   * @author Radish\n   */\n  public onClickPlus() {\n    addLaborForceToProp(this.m_state, this.m_propId, \"1\");\n  }\n\n  /**\n   * 点击 - 按钮\n   * @author Radish\n   */\n  public onClickMinus() {\n    subLaborForceFromProp(this.m_state, this.m_propId, \"1\");\n  }\n\n  /**\n   * 道具改变\n   * @author Radish\n   */\n  private onPropChanged(args: {\n    route: string;\n    value: IProp;\n    lastValue?: IProp;\n  }) {\n    const { value, lastValue } = args;\n\n    if (!lastValue || value.laborForce !== lastValue.laborForce) {\n      this.renderLabor(value);\n      this.renderIcon(value);\n      this.renderProgressBar(value);\n    }\n\n    if (!lastValue || value.num !== lastValue.num) {\n      this.renderQuantity(value);\n    }\n  }\n\n  /**\n   * 劳动力改变\n   * @author Radish\n   */\n  private onLaborForceChanged(args: {\n    route: string;\n    value: string;\n    lastValue?: string;\n  }) {\n    const { value, lastValue } = args;\n    if (value !== lastValue) {\n      this.renderButtons(\n        getProp(this.m_state, this.m_propId),\n        getLaborForce(this.m_state),\n      );\n    }\n  }\n}\n","/**\n * 家园界面, 放置资源的控制栏\n * @author Radish\n */\n\nimport { INCREASE_DURATION, PLACE_PROP_ID } from \"../../../../fairyland/Consts\";\nimport State from \"../../../../fairyland/State\";\nimport {\n  addMaxLaborForce,\n  getLaborForce,\n  getMaxLaborForce,\n  subMaxLaborForce,\n} from \"../../../../fairyland/system/DeployLaborForceSystem\";\nimport { getProp } from \"../../../../fairyland/system/HandlePropSystem\";\nimport IncreaseProgressBar from \"./IncreaseProgressBar\";\nimport LaborInfo from \"./LaborInfo\";\nimport PlacePropListCell from \"./PlacePropListCell\";\n\nconst { ccclass, property } = cc._decorator;\nconst DISTANCE = 396;\nconst DURATION = 0.2;\n\ninterface IArgs {\n  onShowHandle: () => void;\n  onHideHandle: () => void;\n}\n\n@ccclass\nexport default class PlacePropsToolbar extends cc.Component {\n  @property(IncreaseProgressBar)\n  public increaseProgressBar: IncreaseProgressBar = null;\n\n  @property(LaborInfo)\n  public laborInfo: LaborInfo = null;\n\n  @property(cc.ScrollView)\n  public scrollView: cc.ScrollView = null;\n\n  @property(cc.Prefab)\n  public placePropListCell: cc.Prefab = null;\n\n  private m_isInit: boolean = false;\n  private m_isMoving: boolean = false;\n  private m_isDisplaying: boolean = false;\n  private m_state: State = null;\n  private m_args: IArgs = null;\n\n  public async onDestroy() {\n    if (this.m_state) {\n      this.m_state.removeListener(\n        \"attribute_changed_maxLaborForce\",\n        this.updateLaborForce,\n      );\n\n      this.m_state.removeListener(\n        \"attribute_changed_laborForce\",\n        this.updateLaborForce,\n      );\n\n      this.m_state.removeListener(\n        \"attribute_changed_timestamp\",\n        this.updateProgressBar,\n      );\n    }\n  }\n\n  /**\n   * 初始化\n   * @author Radish\n   */\n  public init(args: IArgs, state: State) {\n    if (this.m_isInit) {\n      return;\n    }\n    this.m_isInit = false;\n\n    this.updateLaborForce = this.updateLaborForce.bind(this);\n    this.updateProgressBar = this.updateProgressBar.bind(this);\n\n    this.m_args = args;\n    this.m_state = state;\n\n    // props\n    let height = 0;\n    PLACE_PROP_ID.forEach((value) => {\n      const cell = cc.instantiate(this.placePropListCell);\n      cell.y = -height;\n      this.scrollView.content.addChild(cell);\n      height += cell.height;\n\n      const component = cell.getComponent(PlacePropListCell);\n      component.initDisplay(getProp(state, value), state);\n    });\n    this.scrollView.content.height = height;\n\n    // labor force\n    this.updateLaborForce();\n\n    // progress\n    this.updateProgressBar();\n\n    // events\n    this.m_state.on(\"attribute_changed_maxLaborForce\", this.updateLaborForce);\n    this.m_state.on(\"attribute_changed_laborForce\", this.updateLaborForce);\n    this.m_state.on(\"attribute_changed_timestamp\", this.updateProgressBar);\n  }\n\n  /**\n   * 是否正在播放动画\n   * @author Radish\n   */\n  public get isMoving() {\n    return this.m_isMoving;\n  }\n\n  /**\n   * 是否是展示状态\n   * @author Radish\n   */\n  public get isDisplaying() {\n    return this.m_isDisplaying;\n  }\n\n  /**\n   * 显示\n   * @author Radish\n   */\n  public show(other?: (duration: number) => void) {\n    if (this.isMoving || this.isDisplaying) {\n      return;\n    }\n\n    const duration = DURATION;\n\n    this.m_isMoving = true;\n    const seq = cc.sequence([\n      cc.moveBy(duration, new cc.Vec2(-DISTANCE, 0)).easing(cc.easeSineOut()),\n      cc.callFunc(() => {\n        this.m_isMoving = false;\n        this.m_isDisplaying = true;\n      }),\n    ]);\n    this.node.runAction(seq);\n\n    if (other) {\n      other(duration);\n    }\n  }\n\n  /**\n   * 隐藏\n   * @author Radish\n   */\n  public hide(other?: (duration: number) => void) {\n    if (this.isMoving || !this.isDisplaying) {\n      return;\n    }\n\n    const duration = DURATION;\n\n    this.m_isMoving = false;\n    const seq = cc.sequence([\n      cc.moveBy(duration, new cc.Vec2(DISTANCE, 0)).easing(cc.easeSineOut()),\n      cc.callFunc(() => {\n        this.m_isMoving = false;\n        this.m_isDisplaying = false;\n      }),\n    ]);\n    this.node.runAction(seq);\n\n    if (other) {\n      other(duration);\n    }\n  }\n\n  /**\n   * 点击设置按钮\n   * @author Radish\n   */\n  public onClickSetting() {\n    if (this.isDisplaying) {\n      this.m_args.onHideHandle();\n    } else {\n      this.m_args.onShowHandle();\n    }\n  }\n\n  /**\n   * 增加最大劳动力\n   * @author Radish\n   */\n  public onClickPlusMaxLaborForce() {\n    addMaxLaborForce(this.m_state, \"1\");\n  }\n\n  /**\n   * 减少最大劳动力\n   * @author Radish\n   */\n  public onClickMinusMaxLaborForce() {\n    subMaxLaborForce(this.m_state, \"1\");\n  }\n\n  /**\n   * 最大劳动力改变侦听事件\n   * @author Radish\n   */\n  private updateLaborForce() {\n    const laborForce = getLaborForce(this.m_state);\n    const maxLaborForce = getMaxLaborForce(this.m_state);\n    this.laborInfo.setLabor(laborForce, maxLaborForce);\n  }\n\n  /**\n   * 更新进度条显示\n   * @author Radish\n   */\n  private updateProgressBar() {\n    // this.increaseProgressBar.reset(\n    //   this.m_state.origin.timestamp,\n    //   INCREASE_DURATION,\n    // );\n  }\n}\n","/**\n * 数据相关处理内容\n * @author Radish\n */\n\nimport { EventEmitter } from \"events\";\nimport * as _ from \"lodash\";\nimport { IConfig, IOrigin } from \"./Types\";\n\ninterface IStateExtend {\n  [k: string]: any;\n}\n\nexport default class State extends EventEmitter implements IStateExtend {\n  /**\n   * 获得 State 实例\n   * @author Radish\n   */\n  public static getInstance() {\n    if (!this.s_instance) {\n      this.s_instance = new State();\n    }\n    return this.s_instance;\n  }\n  private static s_instance: State;\n\n  private m_origin: IOrigin = {\n    laborForce: \"0\",\n    props: {},\n    user: {},\n  };\n\n  private m_configs: IConfig = {\n    props: {},\n  };\n\n  private constructor() {\n    super();\n\n    if (State.s_instance) {\n      throw new Error(\"State is already init.\");\n    }\n  }\n\n  /**\n   * 设置 origin 值\n   * @author Radish\n   */\n  public set<T>(route: string, value: T) {\n    const lastValue = _.get(this.m_origin, route);\n    _.set(this.m_origin, route, value);\n    this.emit(\"attribute_changed\", { route, value, lastValue });\n    this.emit(\"attribute_changed_\" + route, { route, value, lastValue });\n  }\n\n  /**\n   * 获得 origin 值\n   * @author Radish\n   */\n  public get<T>(route: string, defaultValue?: T): T {\n    const value = _.get(this.m_origin, route);\n    if ((value === null || value === undefined) && defaultValue !== undefined) {\n      _.set(this.m_origin, route, defaultValue);\n      return defaultValue;\n    }\n    return value;\n  }\n\n  /**\n   * 获得 origin 实例\n   * @author Radish\n   */\n  public get origin() {\n    return this.m_origin;\n  }\n\n  /**\n   * 设置 origin 实例\n   * @author Radish\n   */\n  public set origin(value: IOrigin) {\n    this.m_origin = value;\n  }\n\n  /**\n   * 获得 configs 实例\n   * @author Radish\n   */\n  public get configs() {\n    return this.m_configs;\n  }\n\n  /**\n   * 设置 configs 实例\n   * @author Radish\n   */\n  public set configs(value: IConfig) {\n    this.m_configs = value;\n  }\n}\n","/**\n * 常用的工具整合\n * @author Radish\n */\n\n/**\n * 加载 cc.Prefab 资源\n * @author Radish\n */\nexport async function loadPrefab(url: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, cc.Prefab, (err, resource) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(resource);\n      }\n    });\n  });\n}\n\n/**\n * 加载 json 资源\n * @author Radish\n */\nexport async function loadJson(url: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, (err, jsonAssets) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(jsonAssets.json);\n      }\n    });\n  });\n}\n\n/**\n * 加载 SpriteFrame 资源\n * @author Radish\n */\nexport async function loadSpriteFrame(url: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, cc.SpriteFrame, (err, resource) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(resource);\n      }\n    });\n  });\n}\n"],"sourceRoot":"/source/","file":"project.js"}