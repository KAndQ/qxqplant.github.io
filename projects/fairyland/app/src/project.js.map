{"version":3,"sources":["assets/scripts/components/widget/Activity.ts","assets/scripts/App.ts","assets/scripts/components/home/EntityRelateButton.ts","assets/scripts/components/constant/FairyUIEvent.ts","assets/scripts/components/home/HomeCloud.ts","assets/scripts/components/home/Home.ts","assets/scripts/components/login/Login.ts","assets/scripts/components/main/Main.ts","assets/scripts/fairyland/Types.ts"],"names":["_a","cc","_decorator","ccclass","property","Activity","_super","_this","apply","this","arguments","icon","__extends","prototype","onEnable","runAction","repeatForever","rotateBy","onDisable","stopAllActions","__decorate","Node","Component","exports","default","isInit","app","App","main","user","hero","m_currentNodeInRoot","Error","init","dump","log","replaceNodeInRoot","node","removeFromParent","root","addChild","load","jsonUser","sys","localStorage","getItem","JSON","parse","jsonHero","save","setItem","stringify","id","name","curLabor","maxLabor","items","EntityRelateButton","relatedButton","eventName","isPressed","onLoad","detect","getChildByName","on","EventType","TOUCH_START","pressButton","TOUCH_MOVE","moveInEntity","TOUCH_END","releaseButton","TOUCH_CANCEL","resetButton","onDestroy","off","onClick","director","emit","color","event","getBoundingBoxToWorld","contains","getLocation","Button","FairyUIEvent","_","require","HomeCloud","world","vel","Vec2","rVel","offset","originPos","originVel","position","reset","update","dt","pos","x","y","xMax","getContentSize","width","random","Home","App_1","Login","eboxUserName","userName","string","enterHome","onClickLogin","startActivity","loader","loadRes","error","resource","stopActivity","instantiate","EditBox","Main","bottom","top","activity","active","EItemKind"],"mappings":"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","sourcesContent":["/**\n * 转圈等待控件\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Activity extends cc.Component {\n    @property(cc.Node)\n    public icon: cc.Node = null;\n\n    public onEnable() {\n        this.icon.runAction(cc.repeatForever(cc.rotateBy(0.3, 90)));\n    }\n\n    public onDisable() {\n        this.icon.stopAllActions();\n    }\n}\n","/**\n * 当前应用的唯一实例, 单例\n * @author Radish\n */\n\nimport Main from \"./components/main/Main\";\nimport { IHero, IUser } from \"./fairyland/Types\";\n\nlet isInit: boolean = false;\n\nclass App {\n    public main: Main = null;\n    public user: IUser = null;\n    public hero: IHero = null;\n\n    private m_currentNodeInRoot: cc.Node = null;\n\n    public constructor() {\n        if (!isInit) {\n            isInit = true;\n            this.init();\n        } else {\n            throw new Error(\"App is already inited!!!\");\n        }\n    }\n\n    /**\n     * 当前当前应用消息\n     * @author Radish\n     */\n    public dump() {\n        cc.log(\"==================== App ====================\");\n        cc.log(this.user);\n        cc.log(this.hero);\n        cc.log(\"========================================\");\n    }\n\n    /**\n     * 替换 root 节点的展示\n     * @author Radish\n     */\n    public replaceNodeInRoot(node: cc.Node) {\n        if (this.m_currentNodeInRoot) {\n            this.m_currentNodeInRoot.removeFromParent();\n            this.m_currentNodeInRoot = null;\n        }\n\n        this.m_currentNodeInRoot = node;\n\n        this.main.root.addChild(this.m_currentNodeInRoot);\n    }\n\n    /**\n     * 读取\n     * @author Radish\n     */\n    public load() {\n        const jsonUser = cc.sys.localStorage.getItem(\"user\");\n        if (jsonUser) {\n            this.user = JSON.parse(jsonUser);\n        }\n\n        const jsonHero = cc.sys.localStorage.getItem(\"hero\");\n        if (jsonHero) {\n            this.hero = JSON.parse(jsonHero);\n        }\n    }\n\n    /**\n     * 存储\n     * @author Radish\n     */\n    public save() {\n        cc.sys.localStorage.setItem(\"user\", JSON.stringify(this.user));\n        cc.sys.localStorage.setItem(\"hero\", JSON.stringify(this.hero));\n    }\n\n    /**\n     * 初始化\n     * @author Radish\n     */\n    private init() {\n        this.user = {\n            id: \"\",\n            name: \"\",\n        };\n\n        this.hero = {\n            name: \"\",\n            curLabor: \"0\",\n            maxLabor: \"0\",\n            items: {},\n        };\n    }\n}\n\nconst app = new App();\nexport default app;\n","/**\n * 实体关联按钮组件\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class EntityRelateButton extends cc.Component {\n    @property(cc.Button)\n    public relatedButton: cc.Button = null;\n\n    @property\n    public eventName: string = \"\";\n\n    private isPressed: boolean = false;\n\n    public onLoad() {\n        let detect = this.node.getChildByName(\"detect\");\n        if (!detect) {\n            detect = this.node;\n        }\n\n        detect.on(cc.Node.EventType.TOUCH_START, this.pressButton, this);\n        detect.on(cc.Node.EventType.TOUCH_MOVE, this.moveInEntity, this);\n        detect.on(cc.Node.EventType.TOUCH_END, this.releaseButton, this);\n        detect.on(cc.Node.EventType.TOUCH_CANCEL, this.resetButton, this);\n    }\n\n    public onDestroy() {\n        let detect = this.node.getChildByName(\"detect\");\n        if (!detect) {\n            detect = this.node;\n        }\n\n        detect.off(cc.Node.EventType.TOUCH_START, this.pressButton, this);\n        detect.off(cc.Node.EventType.TOUCH_MOVE, this.moveInEntity, this);\n        detect.off(cc.Node.EventType.TOUCH_END, this.releaseButton, this);\n        detect.off(cc.Node.EventType.TOUCH_CANCEL, this.resetButton, this);\n    }\n\n    public onClick() {\n        if (this.eventName) {\n            cc.director.emit(this.eventName);\n        }\n    }\n\n    private pressButton() {\n        this.isPressed = true;\n        this.relatedButton.node.color = cc.color(128, 128, 128);\n    }\n\n    private releaseButton() {\n        if (this.isPressed) {\n            this.resetButton();\n            this.onClick();\n        }\n    }\n\n    private moveInEntity(event: cc.Event.EventTouch) {\n        if (!this.node.getBoundingBoxToWorld().contains(event.getLocation())) {\n            this.resetButton();\n        }\n    }\n\n    private resetButton() {\n        this.isPressed = false;\n        this.relatedButton.node.color = cc.color(255, 255, 255);\n    }\n}\n","/**\n * UI 相关的事件定义\n * @author Radish\n */\n\nexport enum FairyUIEvent {\n    SHOW_DA_DIAN = \"show_da_dian\",\n    SHOW_CHU_YUN_LOU = \"show_chu_yun_lou\",\n    SHOW_SHU_GE = \"show_shu_ge\",\n    SHOW_HOU_SHAN_BEI_LIN = \"show_hou_shan_bei_lin\",\n    SHOW_DAN_LU = \"show_dan_lu\",\n    SHOW_SHAN_MEN = \"show_shan_men\",\n}\n","/**\n * 云层飘动逻辑\n * @author Radish\n */\n\nimport * as _ from \"lodash\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class HomeCloud extends cc.Component {\n    @property(cc.Node)\n    public world: cc.Node = null;\n\n    @property(cc.Vec2)\n    public vel: cc.Vec2 = new cc.Vec2(0, 0);\n\n    @property(cc.Vec2)\n    public rVel: cc.Vec2 = new cc.Vec2(0, 0);\n\n    @property(cc.Vec2)\n    public offset: cc.Vec2 = new cc.Vec2(0, 0);\n\n    private originPos: cc.Vec2 = null;\n    private originVel: cc.Vec2 = null;\n\n    public onLoad() {\n        this.originPos = this.node.position;\n        this.originVel = this.vel;\n\n        this.reset();\n    }\n\n    public update(dt: number) {\n        let pos = this.node.position;\n        pos.x += this.vel.x * dt;\n        pos.y += this.vel.y * dt;\n        this.node.position = pos;\n\n        const rect = this.node.getBoundingBoxToWorld();\n        if (rect.xMax < 0) {\n            this.reset();\n\n            pos = this.node.position;\n            pos.x = this.world.getContentSize().width;\n            this.node.position = pos;\n        }\n    }\n\n    private reset() {\n        this.vel.x = this.originVel.x + _.random(this.rVel.x, this.rVel.y, true);\n\n        const pos = this.node.position;\n        pos.y = this.originPos.y + _.random(this.offset.x, this.offset.y, true);\n        this.node.position = pos;\n    }\n}\n","/**\n * 家园界面\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Home extends cc.Component {\n}\n","/**\n * 登录界面\n * @author Radish\n */\n\nimport app from \"../../App\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Login extends cc.Component {\n    @property(cc.EditBox)\n    public eboxUserName: cc.EditBox = null;\n\n    public onLoad() {\n        const userName = cc.sys.localStorage.getItem(\"account\");\n        if (userName) {\n            this.eboxUserName.string = userName;\n\n            app.load();\n            this.enterHome();\n        }\n    }\n\n    public onClickLogin() {\n        const userName = this.eboxUserName.string;\n        app.user = {\n            id: userName,\n            name: userName,\n        };\n\n        app.hero.name = userName;\n\n        cc.sys.localStorage.setItem(\"account\", userName);\n        app.save();\n\n        this.enterHome();\n    }\n\n    public enterHome() {\n        app.main.startActivity();\n        cc.loader.loadRes(\"prefabs/Home\", (error: Error, resource: any) => {\n            app.main.stopActivity();\n\n            if (error) {\n                cc.log(error);\n            } else {\n                const node = cc.instantiate(resource);\n                app.replaceNodeInRoot(node);\n            }\n        });\n    }\n}\n","/**\n * 主场景组件\n * @author Radish\n */\n\nimport app from \"../../App\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Main extends cc.Component {\n    @property(cc.Node)\n    public bottom: cc.Node = null;\n\n    @property(cc.Node)\n    public root: cc.Node = null;\n\n    @property(cc.Node)\n    public top: cc.Node = null;\n\n    @property(cc.Node)\n    public activity: cc.Node = null;\n\n    public onLoad() {\n        app.main = this;\n\n        cc.loader.loadRes(\"prefabs/Login\", (error: Error, resource: any) => {\n            if (error) {\n                cc.log(error);\n            } else {\n                const node: cc.Node = cc.instantiate(resource);\n                app.replaceNodeInRoot(node);\n            }\n        });\n    }\n\n    /**\n     * 打开 loading 界面\n     * @author Raidhs\n     */\n    public startActivity() {\n        this.activity.active = true;\n    }\n\n    /**\n     * 关闭 loading 界面\n     * @author Radish\n     */\n    public stopActivity() {\n        this.activity.active = false;\n    }\n}\n","/**\n * 类型定义\n * @author Radish\n */\n\n/**\n * 道具种类\n * @author Radish\n */\nexport enum EItemKind {\n    place = \"place\",\n}\n\n/**\n * 用户\n * @author Radish\n */\nexport interface IUser {\n    id: string; // id\n    name: string; // 用户名\n}\n\n/**\n * 游戏内角色数据\n * @author Radish\n */\nexport interface IHero {\n    name: string; // 名字\n    curLabor: string; // 当前劳动力\n    maxLabor: string; // 最大劳动力\n    items: { [k: string]: IOwnItem }; // 持有道具集合\n}\n\n/**\n * 道具\n * @author Radish\n */\nexport interface IOwnItem {\n    id: string; // 道具 id\n    num: string; // 数量\n}\n\n/**\n * 道具配置\n * @author Radish\n */\nexport interface IItemConfig {\n    id: string; // 道具 id\n    name: string; // 名字\n    kind: EItemKind; // 道具种类\n}\n\n/**\n * 妖怪\n * @author Radish\n */\nexport interface IMonster {\n    id: string; // id\n    name: string; // 名字\n}\n"],"sourceRoot":"/source/","file":"project.js"}