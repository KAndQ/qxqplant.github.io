{"version":3,"sources":["assets/scripts/app/ui/component/common/AlertViewComponent.ts","assets/scripts/native/AnalyticsUtils.ts","assets/scripts/App.ts","assets/scripts/fairyland/system/CheckConfigSystem.ts","assets/scripts/fairyland/Consts.ts","assets/scripts/demo/DemoBattleMain.ts","assets/scripts/app/ui/component/demo/DemoHomeComponent.ts","assets/scripts/app/ui/component/demo/DemoLoginComponent.ts","assets/scripts/app/ui/component/demo/DemoPropCellComponent.ts","assets/scripts/fairyland/system/DeployLaborForceSystem.ts","assets/scripts/fairyland/system/DeployLaborForceToPropSystem.ts","assets/scripts/fairyland/utils/Formatter.ts","assets/scripts/fairyland/system/HandlePropSystem.ts","assets/scripts/app/ui/component/main/HomeComponent.ts","assets/scripts/app/ui/component/home/IncreaseProgressBar.ts","assets/scripts/app/system/InitConfigSystem.ts","assets/scripts/app/system/InitOriginSystem.ts","assets/scripts/app/ui/component/home/LaborInfo.ts","assets/scripts/app/system/LocalStorageSystem.ts","assets/scripts/sys/i18n/Localized.ts","assets/scripts/app/ui/component/main/MainComponent.ts","assets/scripts/native/NativeResponse.ts","assets/scripts/app/ui/component/home/PlacePropListCell.ts","assets/scripts/app/ui/component/home/PlacePropsToolbar.ts","assets/scripts/fairyland/State.ts","assets/scripts/sys/Utils.ts"],"names":["_a","cc","_decorator","ccclass","property","AlertViewComponent","_super","_this","apply","this","arguments","label","__extends","prototype","setTitle","title","string","onClickClose","node","active","__decorate","Label","Component","exports","default","AnalyticsUtils","trackPageAppear","page","sys","isNative","os","OS_IOS","jsb","reflection","callStaticMethod","JSON","stringify","trackPageDisappear","trackEvent","name","properties","trackEventDurationBegin","trackEventDurationEnd","trackEventWithDuration","duration","AlertViewComponent_1","require","App","main","s_instance","Error","getInstance","Object","defineProperty","get","getChildByName","showAlert","getComponent","walk","config","propConfig","path","value","find","element","id","push","place","dependencies","_i","length","v","props","pop","checkLoopDependent","k","hasOwnProperty","big_js_1","PLACE_PROP_ID","B_CONFINE_MAX","K_CONFINE_MAX","mul","M_CONFINE_MAX","G_CONFINE_MAX","INCREASE_DURATION","PROP_ID_MONEY","_","DemoBattleMain","monsterViews","monsterListView","m_monsterGroups","m_monsters","onLoad","genMonsters","updateMonsterListView","genMonster","atk","hp","random","max","i","sort","a","b","divideIntoGroups","split","Math","floor","limit","j","onClickAttack","damage","_b","group_1","m","updateMonsterViews","onClickMonsterList","onClickCloseMonsterListView","onClickDivide","index","labelNode","group","count","group_2","color","Color","RED","BLACK","content","setContentSize","winSize","width","height","removeAllChildren","Node","opacity","anchorY","y","addComponent","fontSize","addChild","getContentSize","App_1","Consts_1","State_1","DeployLaborForceSystem_1","DeployLaborForceToPropSystem_1","HandlePropSystem_1","LocalStorageSystem_1","DemoPropCellComponent_1","DemoHomeComponent","labelNum","listView","cellTemplate","onAttributeChanged","bind","updateLabelUpdate","size","offset","v2","propConfigs","configs","PROP_KEYS","contentSize","_loop_1","cell","instantiate","this_1","x","parseInt","cellComponent","DemoPropCellComponent","prop","getProp","arr","num","depConfig","join","initProps","increaseRate","laborForce","onPressMinus","subLaborForceFromProp","onPressPlus","addLaborForceToProp","on","onDestroy","removeListener","update","dt","now","Date","origin","timestamp","produceProps","set","onClickAddMaxLaborForce","addMaxLaborForce","save","onClickSubMaxLaborForce","subMaxLaborForce","propId","clean","delStorageAccount","isBrowser","window","location","href","args","route","getLaborForce","getMaxLaborForce","ScrollView","Prefab","Utils","InitConfigSystem_1","DemoLoginComponent","eBoxAccountInput","initConfigs","sent","account","getStorageAccount","load","enterHome","onLoginClick","trim","setStorageAccount","loadPrefab","resource","homeNode","gameContainer","destroy","EditBox","Formatter_1","Localized_1","labelName","labelIncreaseRate","labelLaborForce","m_props","m_isInit","getListenerKey","setNum","setIncreaseRate","setName","setLaborForce","formatPropNum","getValueSync","bigValue","eq","WHITE","lt","GREEN","add","state","addend","result","plus","toString","isCanSub","subtractor","gte","sub","minus","isCanSubMaxLaborForce","addLaborForce","isCanSubLaborForce","subLaborForce","maxLaborForce","addedLaborForce","bigCurrentLaborForce","bigAddedLaborForce","subedLaborForce","bigPropCurrentLaborForce","paddingZero","paddingNum","str","bigNum","toFixed","div","formatCountDownHHMMSS","sec","hour","min","getPropKey","getDefaultProp","lastNum","setProp","assign","calculateIncreaseRate","calculatePureProduceNum","numPerSec","numPerLaborForce","produceProp","filter","advanceProduceNum","actualProduceNum","depProp","gt","tempActualProduceNum","_c","_d","_e","consume","addProp","PLACE_PROP_ID_1","PLACE_PROP_ID_2","PLACE_PROP_ID_3","Utils_1","PlacePropsToolbar_1","HomeComponent","maskNode","m_elapse","m_toolbarNode","init","onHideHandle","hideToolbar","onShowHandle","showToolbar","show","runAction","fadeTo","easing","easeSineOut","hide","seq","sequence","callFunc","onClickShanMen","onClickDanLu","IncreaseProgressBar","progressBar","m_startTimestamp","m_duration","updateDisplay","reset","startTimestamp","progress","curDuration","ProgressBar","loadJson","getLocalizedRes","initOrigin","LaborInfo","setLabor","cur","InitOriginSystem_1","getOriginLocalStorageKey","localStorage","getItem","setItem","removeItem","user","jsonOrigin","parse","NativeResponse_1","Localized","getLanguage","s_language","Promise","resolve","process","navigator","language","callback","getValue","key","loadLocalizedText","s_dict","s_defaultDict","getDefaultTTF","localizeLabel","reject","__awaiter","loader","loadRes","Font","err","font","url","toLocaleLowerCase","log","indexOf","language_1","p1","file","json","p2_1","then","catch","MainComponent","loginNode","s_session","s_callbacks","NativeResponse","session","onNativeResponse","isRemove","undefined","PlacePropListCell","icon","propName","quantity","labor","btnPlusNode","btnMinusNode","sfPlus","sfPlusF","sfMinus","sfMinusF","m_propId","m_state","onPropChanged","onLaborForceChanged","initDisplay","spriteFrame","renderQuantity","renderIcon","renderLabor","renderButtons","propLaborForce","propLastNum","propCurNum","delta","loadSpriteFrame","cmp","ownLaborForce","sprite","Sprite","button","Button","interactable","onClickPlus","onClickMinus","lastValue","SpriteFrame","IncreaseProgressBar_1","LaborInfo_1","PlacePropListCell_1","PlacePropsToolbar","increaseProgressBar","laborInfo","scrollView","placePropListCell","m_isMoving","m_isDisplaying","m_args","updateLaborForce","updateProgressBar","forEach","other","isMoving","isDisplaying","moveBy","Vec2","onClickSetting","onClickPlusMaxLaborForce","onClickMinusMaxLaborForce","events_1","State","call","m_origin","m_configs","emit","defaultValue","EventEmitter","jsonAssets"],"mappings":"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","sourcesContent":["/**\n * 警告弹窗\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class AlertViewComponent extends cc.Component {\n  @property(cc.Label)\n  public label: cc.Label = null;\n\n  /**\n   * 设置弹窗提示标题\n   * @author Radish\n   */\n  public setTitle(title: string) {\n    this.label.string = title;\n  }\n\n  /**\n   * 点击关闭按钮\n   * @author Radish\n   */\n  public onClickClose() {\n    this.node.active = false;\n  }\n}\n","/**\n * 分析统计 SDK 调用接口\n * @author Radish\n */\n\nexport default class AnalyticsUtils {\n  /**\n   * 页面呈现时调用\n   * @author Radish\n   */\n  public static trackPageAppear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageAppear:\",\n        JSON.stringify({ page }),\n      );\n    }\n  }\n\n  /**\n   * 页面关闭时调用\n   * @author Radish\n   */\n  public static trackPageDisappear(page: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackPageDisappear:\",\n        JSON.stringify({ page }),\n      );\n    }\n  }\n\n  /**\n   * 追踪事件\n   * @author Radish\n   */\n  public static trackEvent(name: string, properties?: { [k: string]: string }) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEvent:\",\n        JSON.stringify({ name, properties }),\n      );\n    }\n  }\n\n  /**\n   * 上报事件开始\n   * @author Radish\n   */\n  public static trackEventDurationBegin(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationBegin:\",\n        JSON.stringify({ name }),\n      );\n    }\n  }\n\n  /**\n   * 上报事件结束\n   * @author Radish\n   */\n  public static trackEventDurationEnd(name: string) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventDurationEnd:\",\n        JSON.stringify({ name }),\n      );\n    }\n  }\n\n  /**\n   * 上报一个带时长的事件\n   * @author Radish\n   */\n  public static trackEventWithDuration(name: string, duration: number) {\n    if (cc.sys.isNative && cc.sys.os === cc.sys.OS_IOS) {\n      jsb.reflection.callStaticMethod(\n        \"AnalyticsUtils\",\n        \"trackEventWithDuration:\",\n        JSON.stringify({ name, duration }),\n      );\n    }\n  }\n}\n","/**\n * 当前客户端的 App 实例\n * @author Radish\n */\n\nimport AlertViewComponent from \"./app/ui/component/common/AlertViewComponent\";\n\nexport default class App {\n  /**\n   * 单例模式, 获得 App 实例\n   * @author Radish\n   */\n  public static getInstance() {\n    if (this.s_instance === null) {\n      this.s_instance = new App();\n    }\n    return this.s_instance;\n  }\n\n  private static s_instance: App = null;\n\n  public main: cc.Node = null;\n\n  private constructor() {\n    if (App.s_instance !== null) {\n      throw new Error(\"App already initialized.\");\n    }\n  }\n\n  /**\n   * 获得 gameContainer 容器\n   * @author Radish\n   */\n  public get gameContainer(): cc.Node {\n    return this.main.getChildByName(\"gameContainer\");\n  }\n\n  /**\n   * 获得 sysContainer 容器\n   * @author Radish\n   */\n  public get sysContainer(): cc.Node {\n    return this.main.getChildByName(\"sysContainer\");\n  }\n\n  /**\n   * 显示弹窗\n   * @author Radish\n   */\n  public showAlert(title: string) {\n    const node = this.main.getChildByName(\"alertView\");\n    const component = node.getComponent(AlertViewComponent);\n    component.setTitle(title);\n    node.active = true;\n  }\n}\n","/**\n * 配置验证功能\n * @author Radish\n */\n\nimport { IConfig, IPropConfig } from \"../Types\";\n\n/**\n * 走过每一个节点, 看那风风雨雨, 起起落落, 点点滴滴\n * @author Radish\n */\nfunction walk(\n  config: IConfig,\n  propConfig: IPropConfig,\n  path: string[],\n): boolean {\n  const value = path.find((element) => {\n    return element === propConfig.id;\n  });\n\n  path.push(propConfig.id);\n\n  if (value) {\n    return false;\n  } else {\n    if (propConfig.place && propConfig.place.dependencies) {\n      for (const v of propConfig.place.dependencies) {\n        if (!walk(config, config.props[v.id], path)) {\n          return false;\n        }\n      }\n    }\n  }\n\n  path.pop();\n  return true;\n}\n\n/**\n * 检查是否有循环组合\n * @author Radish\n */\nexport function checkLoopDependent(config: IConfig) {\n  for (const k in config.props) {\n    if (config.hasOwnProperty(k)) {\n      const path: string[] = [];\n      if (!walk(config, config.props[k], path)) {\n        return path;\n      }\n    }\n  }\n}\n","/**\n * 通用常量定义\n * @author Radish\n */\n\nimport Big from \"big.js\";\n\nexport const PLACE_PROP_ID = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\nexport const B_CONFINE_MAX = new Big(1000);\nexport const K_CONFINE_MAX = B_CONFINE_MAX.mul(1000);\nexport const M_CONFINE_MAX = K_CONFINE_MAX.mul(1000);\nexport const G_CONFINE_MAX = M_CONFINE_MAX.mul(1000);\nexport const INCREASE_DURATION = 4;\nexport const PROP_ID_MONEY = \"0\";\n","const { ccclass, property } = cc._decorator;\n\nimport * as _ from \"lodash\";\n\ninterface IMonster {\n  name: string;\n  hp: number;\n  atk: number;\n}\n\n@ccclass\nexport default class DemoBattleMain extends cc.Component {\n  @property([cc.Node])\n  public monsterViews: cc.Node[] = [];\n\n  @property(cc.Node)\n  public monsterListView: cc.Node = null;\n\n  private m_monsterGroups: IMonster[][] = [[], [], []];\n  private m_monsters: IMonster[] = [];\n\n  public onLoad() {\n    this.genMonsters();\n    this.updateMonsterListView();\n  }\n\n  /**\n   * 生成单个怪物对象\n   * @author Radish\n   */\n  private genMonster(): IMonster {\n    return {\n      atk: 1,\n      hp: _.random(1, 100, false),\n      name: \"鸭嘴兽\",\n    };\n  }\n\n  /**\n   * 生成怪物对象集合\n   * @author Radish\n   */\n  private genMonsters() {\n    const max = _.random(20, 50, false);\n    for (let i = 0; i < max; ++i) {\n      this.m_monsters.push(this.genMonster());\n    }\n    this.m_monsters.sort((a, b) => {\n      return a.hp - b.hp;\n    });\n  }\n\n  /**\n   * 降怪物分组\n   * @author Radish\n   */\n  private divideIntoGroups() {\n    this.m_monsterGroups = [[], [], []];\n    const split = Math.floor(this.m_monsters.length / 3);\n    for (let i = 0; i < 3; ++i) {\n      let limit = split * (i + 1);\n      if (i === 2) {\n        limit = this.m_monsters.length;\n      }\n\n      for (let j = split * i; j < limit; ++j) {\n        this.m_monsterGroups[i].push(this.m_monsters[j]);\n      }\n    }\n  }\n\n  /**\n   * 点击攻击\n   * @author Radish\n   */\n  private onClickAttack() {\n    for (const group of this.m_monsterGroups) {\n      let damage = 100;\n      for (const m of group) {\n        if (damage > 0) {\n          if (m.hp >= damage) {\n            m.hp -= damage;\n            damage = 0;\n          } else {\n            damage -= m.hp;\n            m.hp = 0;\n          }\n        }\n\n        if (damage === 0) {\n          break;\n        }\n      }\n    }\n\n    this.updateMonsterViews();\n  }\n\n  /**\n   * 点击怪物列表\n   * @author Radish\n   */\n  private onClickMonsterList() {\n    this.monsterListView.active = true;\n  }\n\n  private onClickCloseMonsterListView() {\n    this.monsterListView.active = false;\n  }\n\n  /**\n   * 点击拆分\n   * @author Radish\n   */\n  private onClickDivide() {\n    this.divideIntoGroups();\n    this.updateMonsterViews();\n  }\n\n  /**\n   * 更新妖怪视图\n   * @author Radish\n   */\n  private updateMonsterViews() {\n    for (const index in this.m_monsterGroups) {\n      if (this.m_monsterGroups.hasOwnProperty(index)) {\n        const view = this.monsterViews[index];\n        const labelNode = view.getChildByName(\"label\");\n        const label = labelNode.getComponent(cc.Label);\n\n        const group = this.m_monsterGroups[index];\n        if (group.length === 0) {\n          label.string = \"-\";\n          continue;\n        }\n\n        let hp = 0;\n        let count = 0;\n        let name = \"\";\n        for (const m of group) {\n          if (name === \"\") {\n            name = m.name;\n          }\n\n          hp += m.hp;\n          if (m.hp > 0) {\n            ++count;\n          }\n        }\n\n        label.string = `${name}\\n血量: ${hp}\\n数量: ${count}`;\n\n        if (count === 0) {\n          labelNode.color = cc.Color.RED;\n        } else {\n          labelNode.color = cc.Color.BLACK;\n        }\n      }\n    }\n  }\n\n  /**\n   * 更新\n   */\n  private updateMonsterListView() {\n    const view = this.monsterListView.getChildByName(\"view\");\n    const content = view.getChildByName(\"content\");\n    content.setContentSize(cc.winSize.width, cc.winSize.height);\n    content.removeAllChildren();\n\n    let height = 0;\n    for (const i in this.m_monsters) {\n      if (this.m_monsters.hasOwnProperty(i)) {\n        const m = this.m_monsters[i];\n        const node = new cc.Node();\n        if (m.hp > 0) {\n          node.color = cc.Color.BLACK;\n        } else {\n          node.color = cc.Color.RED;\n        }\n        node.opacity = 255;\n        node.anchorY = 1.0;\n        node.y = -i * 32;\n        height += 32;\n\n        const label = node.addComponent(cc.Label);\n        label.fontSize = 24;\n        label.string = `=>${i + 1}, ${m.name}, hp = ${m.hp}`;\n\n        content.addChild(node);\n      }\n    }\n\n    if (content.getContentSize().height < height) {\n      content.setContentSize(cc.winSize.width, height);\n    }\n  }\n}\n","/**\n * Demo 家园\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport App from \"../../../../App\";\nimport { PLACE_PROP_ID } from \"../../../../fairyland/Consts\";\nimport State from \"../../../../fairyland/State\";\nimport {\n  addMaxLaborForce,\n  getLaborForce,\n  getMaxLaborForce,\n  subMaxLaborForce,\n} from \"../../../../fairyland/system/DeployLaborForceSystem\";\nimport {\n  addLaborForceToProp,\n  subLaborForceFromProp,\n} from \"../../../../fairyland/system/DeployLaborForceToPropSystem\";\nimport {\n  getProp,\n  produceProps,\n} from \"../../../../fairyland/system/HandlePropSystem\";\nimport { IProp, IPropConfig } from \"../../../../fairyland/Types\";\nimport { delStorageAccount, save } from \"../../../system/LocalStorageSystem\";\nimport { DemoPropCellComponent } from \"./DemoPropCellComponent\";\n\n@ccclass\nexport default class DemoHomeComponent extends cc.Component {\n  @property(cc.Label)\n  public labelNum: cc.Label = null;\n\n  @property(cc.ScrollView)\n  public listView: cc.ScrollView = null;\n\n  @property(cc.Prefab)\n  public cellTemplate: cc.Prefab = null;\n\n  public onLoad() {\n    this.onAttributeChanged = this.onAttributeChanged.bind(this);\n    this.updateLabelUpdate();\n\n    // 列表\n    const size = this.listView.content.getContentSize();\n    const offset = cc.v2(-size.width * 0.5 + 64, 0);\n    const propConfigs = State.getInstance().configs.props;\n    const PROP_KEYS = PLACE_PROP_ID;\n    const contentSize = cc.size(size.width, 0);\n    for (const i in PROP_KEYS) {\n      if (!PROP_KEYS.hasOwnProperty(i)) {\n        continue;\n      }\n\n      const cell = cc.instantiate(this.cellTemplate) as cc.Node;\n      this.listView.content.addChild(cell);\n\n      cell.x = offset.x;\n      cell.y = offset.y + (parseInt(i, 10) + 1) * -cell.getContentSize().height;\n      contentSize.height += cell.getContentSize().height;\n\n      const k = PROP_KEYS[i];\n      const config: IPropConfig = propConfigs[k];\n\n      const cellComponent = cell.getComponent(DemoPropCellComponent);\n      const prop: IProp = getProp(State.getInstance(), config.id);\n      let name: string = config.name;\n      if (config.place && config.place.dependencies) {\n        name += \"(\";\n        const arr = [];\n        for (const { id, num } of config.place.dependencies) {\n          const depConfig = State.getInstance().configs.props[id];\n          arr.push(`${num}${depConfig.name}`);\n        }\n        name += arr.join(\"+\");\n        name += \")\";\n      }\n      cellComponent.initProps({\n        id: config.id,\n        increaseRate: prop.increaseRate,\n        laborForce: prop.laborForce,\n        name,\n        num: prop.num,\n\n        onPressMinus: () => {\n          this.subLaborForceFromProp(config.id, \"1\");\n        },\n        onPressPlus: () => {\n          this.addLaborForceToProp(config.id, \"1\");\n        },\n      });\n    }\n    this.listView.content.setContentSize(contentSize);\n\n    State.getInstance().on(\"attribute_changed\", this.onAttributeChanged);\n  }\n\n  public onDestroy() {\n    State.getInstance().removeListener(\n      \"attribute_changed\",\n      this.onAttributeChanged,\n    );\n  }\n\n  public update(dt: number) {\n    const now = Date.now();\n    const duration = (now - State.getInstance().origin.timestamp) / 1000;\n    if (duration >= 0.1) {\n      produceProps(State.getInstance(), duration);\n      State.getInstance().set(\"timestamp\", now);\n    }\n  }\n\n  /**\n   * 点击 + 按钮\n   * @author Radish\n   */\n  public onClickAddMaxLaborForce() {\n    addMaxLaborForce(State.getInstance(), \"1\");\n    this.save();\n  }\n\n  /**\n   * 点击 - 按钮\n   * @author Radish\n   */\n  public onClickSubMaxLaborForce() {\n    if (!subMaxLaborForce(State.getInstance(), \"1\")) {\n      App.getInstance().showAlert(\"目前不满足减少劳动力上限条件\");\n    } else {\n      this.save();\n    }\n  }\n\n  /**\n   * 给道具增加劳动力分配\n   * @author Radish\n   */\n  public addLaborForceToProp(propId: string, num: string) {\n    if (addLaborForceToProp(State.getInstance(), propId, num)) {\n      this.save();\n    } else {\n      App.getInstance().showAlert(\"劳动力不足\");\n    }\n  }\n\n  /**\n   * 给道具减少劳动力分配\n   * @author Radish\n   */\n  public subLaborForceFromProp(propId: string, num: string) {\n    if (subLaborForceFromProp(State.getInstance(), propId, num)) {\n      this.save();\n    } else {\n      App.getInstance().showAlert(\"该道具已没有多余的劳动力\");\n    }\n  }\n\n  /**\n   * 保存\n   * @author Radish\n   */\n  public save() {\n    save(State.getInstance());\n  }\n\n  /**\n   * 清空账户数据\n   * @author Radish\n   */\n  public clean() {\n    delStorageAccount();\n\n    if (cc.sys.isBrowser) {\n      window.location.href = window.location.href;\n    }\n  }\n\n  private onAttributeChanged(args: { route: string; value: any }) {\n    if (args.route === \"laborForce\" || args.route === \"maxLaborForce\") {\n      this.updateLabelUpdate();\n    }\n  }\n\n  /**\n   * 更新 labelNum 视图显示\n   * @author Radish\n   */\n  private updateLabelUpdate() {\n    this.labelNum.string = `${getLaborForce(\n      State.getInstance(),\n    )}/${getMaxLaborForce(State.getInstance())}`;\n  }\n}\n","/**\n * Demo 登录界面\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport App from \"../../../../App\";\nimport State from \"../../../../fairyland/State\";\nimport * as Utils from \"../../../../sys/Utils\";\nimport { initConfigs } from \"../../../system/InitConfigSystem\";\nimport {\n  getStorageAccount,\n  load,\n  save,\n  setStorageAccount,\n} from \"../../../system/LocalStorageSystem\";\n\n@ccclass\nexport default class DemoLoginComponent extends cc.Component {\n  @property(cc.EditBox)\n  public eBoxAccountInput: cc.EditBox = null;\n\n  public async onLoad() {\n    await initConfigs(State.getInstance());\n\n    const account = getStorageAccount();\n    if (account) {\n      this.eBoxAccountInput.string = account;\n      await load(account, State.getInstance());\n      this.enterHome();\n    }\n  }\n\n  /**\n   * 点击登录\n   * @author Radish\n   */\n  public async onLoginClick() {\n    if (this.eBoxAccountInput.string === \"\" || !this.eBoxAccountInput.string) {\n      App.getInstance().showAlert(\"用户名不能为空\");\n      return;\n    }\n\n    const account = this.eBoxAccountInput.string.trim();\n    State.getInstance().set(\"user\", {\n      account,\n      id: \"0\",\n      name: account,\n    });\n    setStorageAccount(account);\n    save(State.getInstance());\n\n    await this.enterHome();\n  }\n\n  /**\n   * 进入家园界面\n   * @author Radish\n   */\n  private async enterHome() {\n    // const resource = await Utils.loadPrefab(\"prefabs/DemoHome\");\n    const resource = await Utils.loadPrefab(\"prefabs/Home\");\n    const homeNode = cc.instantiate(resource);\n    App.getInstance().gameContainer.addChild(homeNode as cc.Node);\n    this.node.destroy();\n  }\n}\n","/**\n * 放置道具列表中的单项元素\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\nimport Big from \"big.js\";\nimport State from \"../../../../fairyland/State\";\nimport { IProp } from \"../../../../fairyland/Types\";\nimport { formatPropNum } from \"../../../../fairyland/utils/Formatter\";\nimport Localized from \"../../../../sys/i18n/Localized\";\n\nexport interface IProps {\n  id: string; // 道具 id\n  num: string; // 当前拥有数量\n  name: string; // 名字\n  increaseRate: string; // 增长率\n  laborForce: string; // 分配的妖怪种类数量\n\n  onPressPlus: () => void; // 点击 + 号按钮\n  onPressMinus: () => void; // 点击 - 号按钮\n}\n\n@ccclass\nexport class DemoPropCellComponent extends cc.Component {\n  @property(cc.Label)\n  public labelNum: cc.Label = null;\n\n  @property(cc.Label)\n  public labelName: cc.Label = null;\n\n  @property(cc.Label)\n  public labelIncreaseRate: cc.Label = null;\n\n  @property(cc.Label)\n  public labelLaborForce: cc.Label = null;\n\n  private m_props: IProps = null;\n  private m_isInit: boolean = false;\n\n  public onDestroy() {\n    State.getInstance().removeListener(\n      this.getListenerKey(),\n      this.onAttributeChanged,\n    );\n  }\n\n  /**\n   * 初始化显示\n   * @author Radish\n   */\n  public initProps(props: IProps) {\n    if (this.m_isInit) {\n      return;\n    }\n\n    this.m_isInit = true;\n    this.m_props = props;\n\n    this.setNum(this.m_props.num);\n    this.setIncreaseRate(this.m_props.increaseRate);\n    this.setName(this.m_props.name);\n    this.setLaborForce(this.m_props.laborForce);\n\n    this.onAttributeChanged = this.onAttributeChanged.bind(this);\n    State.getInstance().on(this.getListenerKey(), this.onAttributeChanged);\n  }\n\n  /**\n   * 设置数量\n   * @author Radish\n   */\n  public setNum(value: string) {\n    this.labelNum.string = formatPropNum(value);\n  }\n\n  /**\n   * 设置名字\n   * @author Radish\n   */\n  public setName(value: string) {\n    this.labelName.string = value;\n  }\n\n  /**\n   * 设置增长率\n   * @author Radish\n   */\n  public setIncreaseRate(value: string) {\n    this.labelIncreaseRate.string =\n      Localized.getValueSync(\"增长率: \") +\n      value +\n      Localized.getValueSync(\"/秒\");\n\n    const bigValue = new Big(value);\n    if (bigValue.eq(0)) {\n      this.labelIncreaseRate.node.color = cc.Color.WHITE;\n    } else if (bigValue.lt(0)) {\n      this.labelIncreaseRate.node.color = cc.Color.RED;\n    } else {\n      this.labelIncreaseRate.node.color = cc.Color.GREEN;\n    }\n  }\n\n  /**\n   * 设置妖怪类别数量\n   * @author Radish\n   */\n  public setLaborForce(value: string) {\n    this.labelLaborForce.string = value;\n  }\n\n  /**\n   * 点击 + 号按钮\n   * @author Radish\n   */\n  public onPressPlus() {\n    this.m_props.onPressPlus();\n  }\n\n  /**\n   * 点击 - 号按钮\n   * @author Radish\n   */\n  public onPressMinus() {\n    this.m_props.onPressMinus();\n  }\n\n  /**\n   * 侦听 State 的属性修改\n   * @author Radish\n   */\n  private onAttributeChanged(args: { route: string; value: IProp }) {\n    this.setNum(args.value.num);\n    this.setLaborForce(args.value.laborForce);\n    this.setIncreaseRate(args.value.increaseRate);\n  }\n\n  /**\n   * 获得侦听的键\n   * @author Radish\n   */\n  private getListenerKey() {\n    return \"attribute_changed_\" + `props[${this.m_props.id}]`;\n  }\n}\n","/**\n * 在 demo 中, 劳动力的处理方式\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport State from \"../State\";\n\nfunction add(state: State, route: string, addend: string): string {\n  const num: Big = new Big(state.get(route));\n  const result = num.plus(addend).toString();\n  state.set(route, result);\n  return result;\n}\n\nfunction isCanSub(state: State, route: string, subtractor: string): boolean {\n  const num: Big = new Big(state.get(route));\n  return num.gte(subtractor);\n}\n\nfunction sub(state: State, route: string, subtractor: string): boolean {\n  if (isCanSub(state, route, subtractor)) {\n    const num: Big = new Big(state.get(route));\n    state.set(route, num.minus(subtractor).toString());\n    return true;\n  }\n  return false;\n}\n\n/**\n * 获得当前劳动力的数量\n * @author Radish\n */\nexport function getLaborForce(state: State): string {\n  return state.get(\"laborForce\", \"0\");\n}\n\n/**\n * 获得当前劳动力的最大值\n * @author Radish\n */\nexport function getMaxLaborForce(state: State): string {\n  return state.get(\"maxLaborForce\", \"0\");\n}\n\n/**\n * 增加当前劳动力\n * @return 返回加法运算之后的结果\n * @author Radish\n */\nexport function addLaborForce(state: State, addend: string): string {\n  return add(state, \"laborForce\", addend);\n}\n\n/**\n * 判断是否能够减少当前劳动力总数\n * @returns true 可减, false 不可减\n * @author Radish\n */\nexport function isCanSubLaborForce(state: State, subtractor: string): boolean {\n  return isCanSub(state, \"laborForce\", subtractor);\n}\n\n/**\n * 减少当前劳动力\n * @return 如果减掉 subtractor 小于 0, 那么返回 false, 表示减法运算不成功; 否则返回 true.\n * @author Radish\n */\nexport function subLaborForce(state: State, subtractor: string): boolean {\n  return sub(state, \"laborForce\", subtractor);\n}\n\n/**\n * 增加劳动力上限\n * @author Radish\n */\nexport function addMaxLaborForce(\n  state: State,\n  addend: string,\n): { laborForce: string; maxLaborForce: string } {\n  const laborForce = add(state, \"laborForce\", addend);\n  const maxLaborForce = add(state, \"maxLaborForce\", addend);\n  return { laborForce, maxLaborForce };\n}\n\n/**\n * 判断是否能够减少劳动力上限\n * @author Radish\n */\nexport function isCanSubMaxLaborForce(\n  state: State,\n  subtractor: string,\n): boolean {\n  const laborForce = getLaborForce(state);\n  const maxLaborForce = getMaxLaborForce(state);\n  const result = laborForce === maxLaborForce;\n  if (result) {\n    return isCanSub(state, \"maxLaborForce\", subtractor);\n  }\n  return result;\n}\n\n/**\n * 判断是否能够减少劳动力上限\n * @author Radish\n */\nexport function subMaxLaborForce(state: State, subtractor: string): boolean {\n  if (isCanSubMaxLaborForce(state, subtractor)) {\n    sub(state, \"laborForce\", subtractor);\n    sub(state, \"maxLaborForce\", subtractor);\n    return true;\n  }\n  return false;\n}\n","/**\n * 分配劳动力给素材的相关功能\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport State from \"../State\";\nimport {\n  addLaborForce,\n  getLaborForce,\n  subLaborForce,\n} from \"./DeployLaborForceSystem\";\nimport { getProp } from \"./HandlePropSystem\";\n\n/**\n * 给素材分配劳动力\n * @returns true 操作成功, false 操作失败\n * @author Radish\n */\nexport function addLaborForceToProp(\n  state: State,\n  propId: string,\n  addedLaborForce: string,\n): boolean {\n  const prop = getProp(state, propId);\n  const bigCurrentLaborForce = new Big(getLaborForce(state));\n  const bigAddedLaborForce = new Big(addedLaborForce);\n  if (bigCurrentLaborForce.gte(bigAddedLaborForce)) {\n    prop.laborForce = bigAddedLaborForce.add(prop.laborForce).toString();\n    state.set(\"props[\" + prop.id + \"]\", prop);\n    subLaborForce(state, addedLaborForce);\n    return true;\n  }\n  return false;\n}\n\n/**\n * 给素材减少劳动力\n * @author Radish\n */\nexport function subLaborForceFromProp(\n  state: State,\n  propId: string,\n  subedLaborForce: string,\n): boolean {\n  const prop = getProp(state, propId);\n  const bigPropCurrentLaborForce = new Big(prop.laborForce);\n  if (bigPropCurrentLaborForce.gte(subedLaborForce)) {\n    prop.laborForce = bigPropCurrentLaborForce\n      .minus(subedLaborForce)\n      .toString();\n    state.set(\"props[\" + prop.id + \"]\", prop);\n    addLaborForce(state, subedLaborForce);\n    return true;\n  }\n  return false;\n}\n","/**\n * 格式化文本相关处理\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport {\n  B_CONFINE_MAX,\n  G_CONFINE_MAX,\n  K_CONFINE_MAX,\n  M_CONFINE_MAX,\n} from \"../Consts\";\n\n/**\n * 格式化道具当前数量文本\n * @author Radish\n */\nexport function formatPropNum(num: string): string {\n  const bigNum = new Big(num);\n  if (bigNum.lt(B_CONFINE_MAX)) {\n    return new Big(num).toFixed(2);\n  } else if (bigNum.lt(K_CONFINE_MAX)) {\n    return bigNum.div(B_CONFINE_MAX).toFixed(2) + \"K\";\n  } else if (bigNum.lt(M_CONFINE_MAX)) {\n    return bigNum.div(K_CONFINE_MAX).toFixed(2) + \"M\";\n  } else if (bigNum.lt(G_CONFINE_MAX)) {\n    return bigNum.div(M_CONFINE_MAX).toFixed(2) + \"G\";\n  } else {\n    return bigNum.div(G_CONFINE_MAX).toFixed(2) + \"T\";\n  }\n}\n\n/**\n * 补 0\n * @author Radish\n */\nfunction paddingZero(num: string, paddingNum = 2) {\n  let str = \"\";\n  const max = paddingNum - num.length;\n\n  for (let i = 0; i < max; ++i) {\n    str += \"0\";\n  }\n\n  return str + num;\n}\n\n/**\n * 格式化秒的显示\n * 例如: 100 秒 => 00:01:40\n * @author Radish\n */\nexport function formatCountDownHHMMSS(sec: number): string {\n  if (sec >= 3600) {\n    const hour = sec % 3600;\n    const min = (sec - hour * 3600) % 60;\n    sec = sec - hour * 3600 - min * 60;\n    return `${paddingZero(hour.toString())}:${paddingZero(\n      min.toString(),\n    )}:${paddingZero(sec.toString())}`;\n  } else if (sec >= 60) {\n    const min = sec % 60;\n    sec = sec - min * 60;\n    return `00:${paddingZero(min.toString())}:${paddingZero(sec.toString())}`;\n  } else {\n    return `00:00:${paddingZero(sec.toString())}`;\n  }\n}\n","/**\n * 处理道具相关功能的系统\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport { PLACE_PROP_ID } from \"../Consts\";\nimport State from \"../State\";\nimport { IProp, IPropConfig } from \"../Types\";\n\n/**\n * 获得道具的路由键\n * @author Radish\n */\nexport function getPropKey(propId: string) {\n  return \"props\" + `[${propId}]`;\n}\n\n/**\n * 获得默认的道具数据对象\n * @return 返回实际的实例引用\n * @author Radish\n */\nexport function getDefaultProp(propId: string): IProp {\n  return {\n    id: propId,\n    increaseRate: \"0\",\n    laborForce: \"0\",\n    lastNum: \"0\",\n    num: \"0\",\n  };\n}\n\n/**\n * 设置 prop\n * @author Radish\n */\nexport function setProp(state: State, prop: IProp) {\n  const route = getPropKey(prop.id);\n  state.set(route, prop);\n}\n\n/**\n * 获得 prop\n * @returns 实例副本, 浅拷贝\n * @author Radish\n */\nexport function getProp(state: State, propId: string): IProp {\n  const route = getPropKey(propId);\n  const prop = state.get(route, getDefaultProp(propId));\n  return Object.assign({}, prop);\n}\n\n/**\n * 给指定的道具增加指定数量\n * @author Radish\n */\nexport function addProp(state: State, propId: string, num: string) {\n  const prop = getProp(state, propId);\n  prop.lastNum = prop.num;\n  prop.num = new Big(prop.num).plus(num).toString();\n  state.set(getPropKey(propId), prop);\n}\n\n/**\n * 计算增长率\n * @author Radish\n */\nexport function calculateIncreaseRate(\n  state: State,\n  propId: string,\n  duration: number,\n) {\n  const prop: IProp = getProp(state, propId);\n  const bigNum = new Big(prop.num);\n  prop.increaseRate = bigNum\n    .sub(prop.lastNum)\n    .div(duration)\n    .toString();\n  setProp(state, prop);\n}\n\n/**\n * 计算纯的增长数量\n * @author Radish\n */\nfunction calculatePureProduceNum(\n  state: State,\n  propId: string,\n  duration: number,\n) {\n  const prop = getProp(state, propId);\n  const config = state.configs.props[propId];\n  return new Big(config.place.numPerSec)\n    .mul(config.place.numPerLaborForce)\n    .mul(prop.laborForce)\n    .mul(duration)\n    .toString();\n}\n\n/**\n * 道具生产\n * @author Radish\n */\nfunction produceProp(\n  state: State,\n  propId: string,\n  filter: { [k: string]: boolean },\n  duration: number,\n) {\n  if (filter[propId]) {\n    return;\n  }\n  filter[propId] = true;\n\n  const config: IPropConfig = state.configs.props[propId];\n  if (config.place) {\n    const prop = getProp(state, propId);\n\n    if (config.place.dependencies) {\n      // 1. 预计算总消耗量\n      const advanceProduceNum = calculatePureProduceNum(\n        state,\n        propId,\n        duration,\n      );\n      let actualProduceNum: Big = new Big(advanceProduceNum);\n\n      // 2. 生产依赖的素材\n      for (const { id, num } of config.place.dependencies) {\n        produceProp(state, id, filter, duration);\n\n        const depProp = getProp(state, id);\n\n        // 2.1 计算依赖道具需要的消耗\n        const bigConsume = new Big(num).mul(advanceProduceNum);\n\n        // 2.2 如果依赖道具不足, 那么根据当前依赖道具拥有的数量, 计算出实际合成产出, 这个产出是所有依赖道具所能产生的最小值\n        if (bigConsume.gt(depProp.num)) {\n          const tempActualProduceNum = new Big(depProp.num).div(num);\n          if (actualProduceNum.gt(tempActualProduceNum)) {\n            actualProduceNum = tempActualProduceNum;\n          }\n        }\n      }\n\n      // 没有生产则直接返回\n      if (actualProduceNum.eq(\"0\")) {\n        return;\n      }\n\n      // 3. 计算累加合成道具的数量\n      prop.num = actualProduceNum.add(prop.num).toString();\n      setProp(state, prop);\n\n      // 4. 根据实际的产出数量计算依赖道具的消耗\n      for (const { id, num } of config.place.dependencies) {\n        const depProp = getProp(state, id);\n        const consume: Big = new Big(num).mul(actualProduceNum);\n        depProp.num = new Big(depProp.num).sub(consume).toString();\n        setProp(state, depProp);\n      }\n    } else {\n      prop.num = new Big(calculatePureProduceNum(state, propId, duration))\n        .add(prop.num)\n        .toString();\n      setProp(state, prop);\n    }\n  }\n}\n\n/**\n * 更新道具的数量\n * @author Radish\n */\nexport function produceProps(state: State, duration: number) {\n  for (const id of PLACE_PROP_ID) {\n    const prop = getProp(state, id);\n    prop.lastNum = prop.num;\n    setProp(state, prop);\n  }\n\n  const filter: { [k: string]: boolean } = {};\n  for (const id of PLACE_PROP_ID) {\n    produceProp(state, id, filter, duration);\n  }\n\n  for (const id of PLACE_PROP_ID) {\n    calculateIncreaseRate(state, id, duration);\n  }\n}\n","/**\n * 家园界面\n * @author Radish\n */\n\nimport { INCREASE_DURATION, PROP_ID_MONEY } from \"../../../../fairyland/Consts\";\nimport State from \"../../../../fairyland/State\";\nimport {\n  addProp,\n  produceProps,\n} from \"../../../../fairyland/system/HandlePropSystem\";\nimport { loadPrefab } from \"../../../../sys/Utils\";\nimport { save } from \"../../../system/LocalStorageSystem\";\nimport PlacePropsToolbar from \"../home/PlacePropsToolbar\";\n\nconst { ccclass, property } = cc._decorator;\nconst MASK_OPACITY = 128;\n\n@ccclass\nexport default class HomeComponent extends cc.Component {\n  @property(cc.Node)\n  public maskNode: cc.Node = null;\n\n  private m_elapse: number = 0;\n  private m_toolbarNode: cc.Node = null;\n\n  public async onLoad() {\n    this.maskNode.opacity = MASK_OPACITY;\n    this.maskNode.active = true;\n\n    // toolbar\n    const resource = await loadPrefab(\"prefabs/home/PlacePropsToolbar\");\n    if (resource) {\n      const node = cc.instantiate(resource);\n      this.node.getChildByName(\"toolbar\").addChild(node);\n      this.m_toolbarNode = node;\n      this.m_toolbarNode.getComponent(PlacePropsToolbar).init(\n        {\n          onHideHandle: () => {\n            this.hideToolbar();\n          },\n          onShowHandle: () => {\n            this.showToolbar();\n          },\n        },\n        State.getInstance(),\n      );\n    }\n\n    this.maskNode.active = false;\n  }\n\n  public update(dt: number) {\n    this.m_elapse += dt;\n    if (this.m_elapse >= INCREASE_DURATION) {\n      this.m_elapse -= INCREASE_DURATION;\n      produceProps(State.getInstance(), INCREASE_DURATION);\n      State.getInstance().set(\"timestamp\", Date.now());\n    }\n  }\n\n  /**\n   * 显示资源配置栏\n   * @author Radish\n   */\n  public showToolbar() {\n    this.m_toolbarNode.getComponent(PlacePropsToolbar).show((duration) => {\n      this.maskNode.active = true;\n      this.maskNode.opacity = 0;\n      this.maskNode.runAction(\n        cc.fadeTo(duration, MASK_OPACITY).easing(cc.easeSineOut()),\n      );\n    });\n  }\n\n  /**\n   * 隐藏资源配置栏\n   * @author Radish\n   */\n  public hideToolbar() {\n    this.m_toolbarNode.getComponent(PlacePropsToolbar).hide((duration) => {\n      const seq = cc.sequence([\n        cc.fadeTo(duration, 0).easing(cc.easeSineOut()),\n        cc.callFunc(() => {\n          this.maskNode.active = false;\n        }),\n      ]);\n      this.maskNode.runAction(seq);\n    });\n  }\n\n  /**\n   * 点击山门按钮\n   * @author Radish\n   */\n  public onClickShanMen() {\n    save(State.getInstance());\n  }\n\n  /**\n   * 点击丹炉按钮\n   * @author Radish\n   */\n  public onClickDanLu() {\n    addProp(State.getInstance(), PROP_ID_MONEY, \"1\");\n  }\n}\n","/**\n * 大厅放置增加时间条\n * @author Radish\n */\n\nimport { formatCountDownHHMMSS } from \"../../../../fairyland/utils/Formatter\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class IncreaseProgressBar extends cc.Component {\n  @property(cc.ProgressBar)\n  public progressBar: cc.ProgressBar = null;\n\n  @property(cc.Label)\n  public label: cc.Label = null;\n\n  private m_startTimestamp: number = 0;\n  private m_duration: number = 0;\n\n  public onLoad() {\n    this.updateDisplay();\n  }\n\n  /**\n   * 重置进度条参数\n   * @author Radish\n   */\n  public reset(startTimestamp: number, duration: number) {\n    this.m_startTimestamp = startTimestamp;\n    this.m_duration = duration;\n    this.updateDisplay();\n  }\n\n  public update(dt: number) {\n    this.updateDisplay();\n  }\n\n  /**\n   * 更新显示\n   * @author Radish\n   */\n  private updateDisplay() {\n    const defaultProgressValue = 0;\n    const defaultLabelValue = \"00:00:00\";\n\n    if (this.m_startTimestamp === 0 || this.m_duration === 0) {\n      this.progressBar.progress = defaultProgressValue;\n      this.label.string = defaultLabelValue;\n    } else {\n      const curTimestamp = Date.now();\n      const curDuration = (curTimestamp - this.m_startTimestamp) / 1000;\n\n      if (curDuration < 0) {\n        this.progressBar.progress = defaultProgressValue;\n        this.label.string = defaultLabelValue;\n      } else {\n        this.progressBar.progress = curDuration / this.m_duration;\n        if (this.m_duration > curDuration) {\n          this.label.string = formatCountDownHHMMSS(\n            this.m_duration - Math.floor(curDuration),\n          );\n        } else {\n          this.label.string = defaultLabelValue;\n        }\n      }\n    }\n  }\n}\n","/**\n * 初始化配置相关功能\n * @author Radish\n */\n\nimport State from \"../../fairyland/State\";\nimport { IConfig } from \"../../fairyland/Types\";\nimport Localized from \"../../sys/i18n/Localized\";\nimport * as Utils from \"../../sys/Utils\";\n\n/**\n * 初始化配置\n * @author Radish\n */\nexport async function initConfigs(state: State) {\n  await initProps(state.configs);\n}\n\n/**\n * 初始化道具配置\n * @author Radish\n */\nexport async function initProps(config: IConfig) {\n  const propConfigs = await Utils.loadJson(\n    await Localized.getLocalizedRes(\"configs/Props\"),\n  );\n  config.props = propConfigs;\n}\n","/**\n * 初始化 State.origin\n * @author Radish\n */\n\nimport { IOrigin } from \"../../fairyland/Types\";\n\n/**\n * 初始化 Origin 实例\n * @author Radish\n */\nexport function initOrigin(origin: IOrigin): IOrigin {\n  origin.timestamp = Date.now();\n  return origin;\n}\n","/**\n * 大厅劳动力信息展示\n * @author Radish\n */\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class LaborInfo extends cc.Component {\n  @property(cc.Label)\n  public label: cc.Label = null;\n\n  /**\n   * 设置劳动力的展示\n   * @author Radish\n   */\n  public setLabor(cur: string, max: string) {\n    this.label.string = `${cur}/${max}`;\n  }\n}\n","/**\n * 本地存储相关处理\n * @author Radish\n */\n\nimport * as _ from \"lodash\";\nimport State from \"../../fairyland/State\";\nimport { initOrigin } from \"./InitOriginSystem\";\n\n/**\n * 获得本地存储的账户\n * @author Radish\n */\nexport function getStorageAccount() {\n  return cc.sys.localStorage.getItem(\"account\");\n}\n\n/**\n * 设置本地存储的账户数据\n * @author Radish\n */\nexport function setStorageAccount(account: string) {\n  cc.sys.localStorage.setItem(\"account\", account);\n}\n\n/**\n * 删除本地缓存的账户信息\n * @author Radish\n */\nexport function delStorageAccount() {\n  cc.sys.localStorage.removeItem(\"account\");\n}\n\n/**\n * 存储数据\n * @author Radish\n */\nexport function save(state: State) {\n  cc.sys.localStorage.setItem(\n    getOriginLocalStorageKey(state.origin.user.account),\n    JSON.stringify(state.origin),\n  );\n}\n\n/**\n * 读取数据\n * @author Radish\n */\nexport function load(account: string, state: State) {\n  const jsonOrigin = cc.sys.localStorage.getItem(\n    getOriginLocalStorageKey(account),\n  );\n\n  if (jsonOrigin) {\n    state.origin = initOrigin(JSON.parse(jsonOrigin));\n  }\n}\n\n/**\n * 获得本地存储的键\n * @author Radish\n */\nfunction getOriginLocalStorageKey(account: string) {\n  return account + \"-origin\";\n}\n","/**\n * i18n 处理\n * @author Radish\n */\n\nimport NativeResponse from \"../../native/NativeResponse\";\n\nexport default class Localized {\n  /**\n   * 获得当前使用语言标识\n   * @author Radish\n   */\n  public static async getLanguage() {\n    if (!this.s_language) {\n      if (cc.sys.isBrowser) {\n        this.s_language = this.process(window.navigator.language);\n        return Promise.resolve(this.s_language);\n      }\n\n      if (cc.sys.os === cc.sys.OS_IOS) {\n        return new Promise((resolve) => {\n          jsb.reflection.callStaticMethod(\n            \"QXQUtils\",\n            \"getLanguage:\",\n            JSON.stringify({\n              callback: NativeResponse.push((value: string) => {\n                this.s_language = this.process(value);\n                resolve(this.s_language);\n              }),\n            }),\n          );\n        });\n      } else {\n        this.s_language = \"en\";\n        return Promise.resolve(this.s_language);\n      }\n    } else {\n      return Promise.resolve(this.s_language);\n    }\n  }\n\n  /**\n   * 本地化文本内容, 异步\n   * @author Radish\n   */\n  public static async getValue(key: string) {\n    await this.loadLocalizedText();\n    return this.getValueSync(key);\n  }\n\n  /**\n   * 本地化文本内容, 同步\n   * @author Radish\n   */\n  public static getValueSync(key: string) {\n    let value = this.s_dict[key];\n    if (!value) {\n      value = this.s_defaultDict[key];\n      if (!value) {\n        return key;\n      }\n    }\n    return value;\n  }\n\n  /**\n   * 获得默认的 TTF 字体\n   * @author Radish\n   */\n  public static async getDefaultTTF() {\n    const language = await this.getLanguage();\n    return language + \"/fonts/default.ttf\";\n  }\n\n  /**\n   * 本地化 label 控件\n   * @author Radish\n   */\n  public static async localizeLabel(label: cc.Label) {\n    label.string = await this.getValue(label.string);\n    return new Promise(async (resolve, reject) => {\n      cc.loader.loadRes(await this.getDefaultTTF(), cc.Font, (err, font) => {\n        if (err) {\n          if (CC_DEBUG) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        } else {\n          label.font = font;\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * 获得本地化资源\n   * @author Radish\n   */\n  public static async getLocalizedRes(url: string) {\n    const language = await this.getLanguage();\n    return language + \"/\" + url;\n  }\n\n  private static s_language: string = null;\n  private static s_dict: { [k: string]: string } = {};\n  private static s_defaultDict: { [k: string]: string } = {};\n\n  /**\n   * 对浏览器/终端返回的语言字符串做处理\n   * @author Radish\n   */\n  private static process(value: string): string {\n    value = value.toLocaleLowerCase();\n    cc.log(`=> process value = ${value}`);\n\n    if (value.indexOf(\"zh-hant\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-hans\") !== -1) {\n      return \"zh-hans\";\n    } else if (value.indexOf(\"zh-tw\") !== -1 || value.indexOf(\"zh-hk\") !== -1) {\n      return \"zh-hant\";\n    } else if (value.indexOf(\"zh-cn\") !== -1) {\n      return \"zh-hans\";\n    } else if (value === \"zh\") {\n      return \"zh-hans\";\n    } else {\n      return \"en\";\n    }\n  }\n\n  /**\n   * 加载本地化的文本\n   * @author Radish\n   */\n  private static async loadLocalizedText() {\n    if (this.s_dict === null && this.s_defaultDict === null) {\n      const language = await this.getLanguage();\n      const p1 = new Promise(async (resolve, reject) => {\n        cc.loader.loadRes(language + \"/configs/Localized\", (err, file) => {\n          if (!err) {\n            this.s_dict = file.json;\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n\n      const p2 = new Promise((resolve, reject) => {\n        cc.loader.loadRes(language + \"/configs/Localized\", (err, file) => {\n          if (!err) {\n            this.s_defaultDict = file.json;\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      });\n      return p1.then(() => p2).catch(() => p2);\n    } else {\n      return Promise.resolve();\n    }\n  }\n}\n","const { ccclass } = cc._decorator;\n\nimport App from \"../../../../App\";\nimport * as Utils from \"../../../../sys/Utils\";\n\nconst LoginPrefabPath = \"prefabs/DemoLogin\";\n\n@ccclass\nexport default class MainComponent extends cc.Component {\n  public async onLoad() {\n    App.getInstance().main = this.node;\n\n    const resource = await Utils.loadPrefab(LoginPrefabPath);\n    const loginNode = cc.instantiate(resource);\n    App.getInstance().gameContainer.addChild(loginNode as cc.Node);\n  }\n}\n","/**\n * Native 回调管理相关\n * @author Radish\n */\n\nlet s_session: number = 0;\nconst s_callbacks: { [s: number]: (value: string) => void } = {};\n\nexport default class NativeResponse {\n  /**\n   * 添加回调函数\n   * @author Radish\n   */\n  public static push(callback: (value: string) => void): number {\n    const session = ++s_session;\n    s_callbacks[session] = callback;\n    return session;\n  }\n}\n\nif (cc.sys.isNative) {\n  if (!jsb.onNativeResponse) {\n    jsb.onNativeResponse = (\n      session: number,\n      value?: string,\n      isRemove: boolean = true,\n    ) => {\n      if (value === null || value === undefined) {\n        delete s_callbacks[session];\n      } else {\n        const callback = s_callbacks[session];\n        if (callback) {\n          callback(value);\n\n          if (isRemove) {\n            delete s_callbacks[session];\n          }\n        }\n      }\n    };\n  }\n}\n","/**\n * 放置道具列表中的单元格\n * @author Radish\n */\n\nimport Big from \"big.js\";\nimport State from \"../../../../fairyland/State\";\nimport { getLaborForce } from \"../../../../fairyland/system/DeployLaborForceSystem\";\nimport {\n  addLaborForceToProp,\n  subLaborForceFromProp,\n} from \"../../../../fairyland/system/DeployLaborForceToPropSystem\";\nimport { getProp } from \"../../../../fairyland/system/HandlePropSystem\";\nimport { IProp } from \"../../../../fairyland/Types\";\nimport { formatPropNum } from \"../../../../fairyland/utils/Formatter\";\nimport { loadSpriteFrame } from \"../../../../sys/Utils\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class PlacePropListCell extends cc.Component {\n  @property(cc.Sprite)\n  public icon: cc.Sprite = null;\n\n  @property(cc.Label)\n  public propName: cc.Label = null;\n\n  @property(cc.Label)\n  public quantity: cc.Label = null;\n\n  @property(cc.Label)\n  public labor: cc.Label = null;\n\n  @property(cc.Node)\n  public btnPlusNode: cc.Node = null;\n\n  @property(cc.Node)\n  public btnMinusNode: cc.Node = null;\n\n  @property(cc.SpriteFrame)\n  public sfPlus: cc.SpriteFrame = null;\n\n  @property(cc.SpriteFrame)\n  public sfPlusF: cc.SpriteFrame = null;\n\n  @property(cc.SpriteFrame)\n  public sfMinus: cc.SpriteFrame = null;\n\n  @property(cc.SpriteFrame)\n  public sfMinusF: cc.SpriteFrame = null;\n\n  private m_isInit: boolean = false;\n  private m_propId: string = null;\n  private m_state: State = null;\n\n  public onLoad() {\n    this.onPropChanged = this.onPropChanged.bind(this);\n    this.onLaborForceChanged = this.onLaborForceChanged.bind(this);\n  }\n\n  public onDestroy() {\n    if (this.m_state) {\n      this.m_state.removeListener(\n        `attribute_changed_props[${this.m_propId}]`,\n        this.onPropChanged,\n      );\n\n      this.m_state.removeListener(\n        \"attribute_changed_laborForce\",\n        this.onLaborForceChanged,\n      );\n    }\n  }\n\n  /**\n   * 初始化初次展示\n   * @author Radish\n   */\n  public initDisplay(prop: IProp, state: State) {\n    if (this.m_isInit) {\n      return;\n    }\n    this.m_isInit = true;\n\n    this.m_propId = prop.id;\n    this.m_state = state;\n\n    this.icon.spriteFrame = null;\n\n    const config = this.m_state.configs.props[prop.id];\n    this.propName.string = config.name;\n\n    this.renderQuantity(prop);\n    this.renderIcon(prop);\n    this.renderLabor(prop);\n    this.renderButtons(prop, getLaborForce(this.m_state));\n\n    this.m_state.on(\n      `attribute_changed_props[${this.m_propId}]`,\n      this.onPropChanged,\n    );\n\n    this.m_state.on(\"attribute_changed_laborForce\", this.onLaborForceChanged);\n  }\n\n  /**\n   * 渲染数量\n   * @author Radish\n   */\n  public renderQuantity(prop: IProp) {\n    this.quantity.string = formatPropNum(prop.num);\n  }\n\n  /**\n   * 渲染图标\n   * @author Radish\n   */\n  public async renderIcon(prop: IProp) {\n    const propLaborForce = new Big(prop.laborForce);\n    const propLastNum = new Big(prop.lastNum);\n    const propCurNum = new Big(prop.num);\n    const delta = propCurNum.minus(propLastNum);\n\n    let url = `props/Prop_${prop.id}_`;\n\n    // 闲置\n    if (propLaborForce.eq(0)) {\n      const resource = await loadSpriteFrame(url + \"N\");\n      if (resource) {\n        this.icon.spriteFrame = resource;\n      }\n    } else {\n      const result = delta.cmp(0);\n\n      switch (result) {\n        case 1: // 增长\n          url += \"R\";\n          break;\n\n        case -1: // 减少\n          url += \"D\";\n          break;\n\n        case 0: // 增减平衡\n          url += \"A\";\n          break;\n      }\n\n      const resource = await loadSpriteFrame(url);\n      if (resource) {\n        this.icon.spriteFrame = resource;\n      }\n    }\n  }\n\n  /**\n   * 渲染劳动力数量\n   * @author Radish\n   */\n  public renderLabor(prop: IProp) {\n    this.labor.string = prop.laborForce;\n  }\n\n  /**\n   * 渲染 +/- 按钮\n   * @author Radish\n   */\n  public renderButtons(prop: IProp, laborForce: string) {\n    const ownLaborForce = new Big(laborForce);\n    const propLaborForce = new Big(prop.laborForce);\n\n    // +, 可分配劳动力时, 红色; 无劳动力分配时灰色\n    if (ownLaborForce.gt(0)) {\n      const sprite = this.btnPlusNode.getComponent(cc.Sprite);\n      const button = this.btnPlusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfPlus;\n      button.interactable = true;\n    } else if (ownLaborForce.eq(0)) {\n      const sprite = this.btnPlusNode.getComponent(cc.Sprite);\n      const button = this.btnPlusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfPlusF;\n      button.interactable = false;\n    }\n\n    // -, 当劳动力为 0 时, 灰色; 有劳动力分配时红色\n    if (propLaborForce.eq(0)) {\n      const sprite = this.btnMinusNode.getComponent(cc.Sprite);\n      const button = this.btnMinusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfMinusF;\n      button.interactable = false;\n    } else if (propLaborForce.gt(0)) {\n      const sprite = this.btnMinusNode.getComponent(cc.Sprite);\n      const button = this.btnMinusNode.getComponent(cc.Button);\n\n      sprite.spriteFrame = this.sfMinus;\n      button.interactable = true;\n    }\n  }\n\n  /**\n   * 点击 + 按钮\n   * @author Radish\n   */\n  public onClickPlus() {\n    addLaborForceToProp(this.m_state, this.m_propId, \"1\");\n  }\n\n  /**\n   * 点击 - 按钮\n   * @author Radish\n   */\n  public onClickMinus() {\n    subLaborForceFromProp(this.m_state, this.m_propId, \"1\");\n  }\n\n  /**\n   * 道具改变\n   * @author Radish\n   */\n  private onPropChanged(args: {\n    route: string;\n    value: IProp;\n    lastValue?: IProp;\n  }) {\n    const { value, lastValue } = args;\n\n    if (!lastValue || value.laborForce !== lastValue.laborForce) {\n      this.renderLabor(value);\n    }\n\n    if (!lastValue || value.num !== lastValue.num) {\n      this.renderQuantity(value);\n    }\n\n    if (!lastValue || value.increaseRate !== lastValue.increaseRate) {\n      this.renderIcon(value);\n    }\n  }\n\n  /**\n   * 劳动力改变\n   * @author Radish\n   */\n  private onLaborForceChanged(args: {\n    route: string;\n    value: string;\n    lastValue?: string;\n  }) {\n    const { value, lastValue } = args;\n    if (value !== lastValue) {\n      this.renderButtons(\n        getProp(this.m_state, this.m_propId),\n        getLaborForce(this.m_state),\n      );\n    }\n  }\n}\n","/**\n * 家园界面, 放置资源的控制栏\n * @author Radish\n */\n\nimport { INCREASE_DURATION, PLACE_PROP_ID } from \"../../../../fairyland/Consts\";\nimport State from \"../../../../fairyland/State\";\nimport {\n  addMaxLaborForce,\n  getLaborForce,\n  getMaxLaborForce,\n  subMaxLaborForce,\n} from \"../../../../fairyland/system/DeployLaborForceSystem\";\nimport { getProp } from \"../../../../fairyland/system/HandlePropSystem\";\nimport IncreaseProgressBar from \"./IncreaseProgressBar\";\nimport LaborInfo from \"./LaborInfo\";\nimport PlacePropListCell from \"./PlacePropListCell\";\n\nconst { ccclass, property } = cc._decorator;\nconst DISTANCE = 396;\nconst DURATION = 0.2;\n\ninterface IArgs {\n  onShowHandle: () => void;\n  onHideHandle: () => void;\n}\n\n@ccclass\nexport default class PlacePropsToolbar extends cc.Component {\n  @property(IncreaseProgressBar)\n  public increaseProgressBar: IncreaseProgressBar = null;\n\n  @property(LaborInfo)\n  public laborInfo: LaborInfo = null;\n\n  @property(cc.ScrollView)\n  public scrollView: cc.ScrollView = null;\n\n  @property(cc.Prefab)\n  public placePropListCell: cc.Prefab = null;\n\n  private m_isInit: boolean = false;\n  private m_isMoving: boolean = false;\n  private m_isDisplaying: boolean = false;\n  private m_state: State = null;\n  private m_args: IArgs = null;\n\n  public async onDestroy() {\n    if (this.m_state) {\n      this.m_state.removeListener(\n        \"attribute_changed_maxLaborForce\",\n        this.updateLaborForce,\n      );\n\n      this.m_state.removeListener(\n        \"attribute_changed_laborForce\",\n        this.updateLaborForce,\n      );\n\n      this.m_state.removeListener(\n        \"attribute_changed_timestamp\",\n        this.updateProgressBar,\n      );\n    }\n  }\n\n  /**\n   * 初始化\n   * @author Radish\n   */\n  public init(args: IArgs, state: State) {\n    if (this.m_isInit) {\n      return;\n    }\n    this.m_isInit = false;\n\n    this.updateLaborForce = this.updateLaborForce.bind(this);\n    this.updateProgressBar = this.updateProgressBar.bind(this);\n\n    this.m_args = args;\n    this.m_state = state;\n\n    // props\n    let height = 0;\n    PLACE_PROP_ID.forEach((value) => {\n      const cell = cc.instantiate(this.placePropListCell);\n      cell.y = -height;\n      this.scrollView.content.addChild(cell);\n      height += cell.height;\n\n      const component = cell.getComponent(PlacePropListCell);\n      component.initDisplay(getProp(state, value), state);\n    });\n    this.scrollView.content.height = height;\n\n    // labor force\n    this.updateLaborForce();\n\n    // progress\n    this.updateProgressBar();\n\n    // events\n    this.m_state.on(\"attribute_changed_maxLaborForce\", this.updateLaborForce);\n    this.m_state.on(\"attribute_changed_laborForce\", this.updateLaborForce);\n    this.m_state.on(\"attribute_changed_timestamp\", this.updateProgressBar);\n  }\n\n  /**\n   * 是否正在播放动画\n   * @author Radish\n   */\n  public get isMoving() {\n    return this.m_isMoving;\n  }\n\n  /**\n   * 是否是展示状态\n   * @author Radish\n   */\n  public get isDisplaying() {\n    return this.m_isDisplaying;\n  }\n\n  /**\n   * 显示\n   * @author Radish\n   */\n  public show(other?: (duration: number) => void) {\n    if (this.isMoving || this.isDisplaying) {\n      return;\n    }\n\n    const duration = DURATION;\n\n    this.m_isMoving = true;\n    const seq = cc.sequence([\n      cc.moveBy(duration, new cc.Vec2(-DISTANCE, 0)).easing(cc.easeSineOut()),\n      cc.callFunc(() => {\n        this.m_isMoving = false;\n        this.m_isDisplaying = true;\n      }),\n    ]);\n    this.node.runAction(seq);\n\n    if (other) {\n      other(duration);\n    }\n  }\n\n  /**\n   * 隐藏\n   * @author Radish\n   */\n  public hide(other?: (duration: number) => void) {\n    if (this.isMoving || !this.isDisplaying) {\n      return;\n    }\n\n    const duration = DURATION;\n\n    this.m_isMoving = false;\n    const seq = cc.sequence([\n      cc.moveBy(duration, new cc.Vec2(DISTANCE, 0)).easing(cc.easeSineOut()),\n      cc.callFunc(() => {\n        this.m_isMoving = false;\n        this.m_isDisplaying = false;\n      }),\n    ]);\n    this.node.runAction(seq);\n\n    if (other) {\n      other(duration);\n    }\n  }\n\n  /**\n   * 点击设置按钮\n   * @author Radish\n   */\n  public onClickSetting() {\n    if (this.isDisplaying) {\n      this.m_args.onHideHandle();\n    } else {\n      this.m_args.onShowHandle();\n    }\n  }\n\n  /**\n   * 增加最大劳动力\n   * @author Radish\n   */\n  public onClickPlusMaxLaborForce() {\n    addMaxLaborForce(this.m_state, \"1\");\n  }\n\n  /**\n   * 减少最大劳动力\n   * @author Radish\n   */\n  public onClickMinusMaxLaborForce() {\n    subMaxLaborForce(this.m_state, \"1\");\n  }\n\n  /**\n   * 最大劳动力改变侦听事件\n   * @author Radish\n   */\n  private updateLaborForce() {\n    const laborForce = getLaborForce(this.m_state);\n    const maxLaborForce = getMaxLaborForce(this.m_state);\n    this.laborInfo.setLabor(laborForce, maxLaborForce);\n  }\n\n  /**\n   * 更新进度条显示\n   * @author Radish\n   */\n  private updateProgressBar() {\n    this.increaseProgressBar.reset(\n      this.m_state.origin.timestamp,\n      INCREASE_DURATION,\n    );\n  }\n}\n","/**\n * 数据相关处理内容\n * @author Radish\n */\n\nimport { EventEmitter } from \"events\";\nimport * as _ from \"lodash\";\nimport { IConfig, IOrigin } from \"./Types\";\n\ninterface IStateExtend {\n  [k: string]: any;\n}\n\nexport default class State extends EventEmitter implements IStateExtend {\n  /**\n   * 获得 State 实例\n   * @author Radish\n   */\n  public static getInstance() {\n    if (this.s_instance === null) {\n      this.s_instance = new State();\n    }\n    return this.s_instance;\n  }\n  private static s_instance: State = null;\n\n  private m_origin: IOrigin = {\n    laborForce: \"0\",\n    props: {},\n    timestamp: Date.now(),\n    user: {},\n  };\n\n  private m_configs: IConfig = {\n    props: {},\n  };\n\n  private constructor() {\n    super();\n\n    if (State.s_instance) {\n      throw new Error(\"State is already init.\");\n    }\n  }\n\n  /**\n   * 设置 origin 值\n   * @author Radish\n   */\n  public set<T>(route: string, value: T) {\n    const lastValue = _.get(this.m_origin, route);\n    _.set(this.m_origin, route, value);\n    this.emit(\"attribute_changed\", { route, value, lastValue });\n    this.emit(\"attribute_changed_\" + route, { route, value, lastValue });\n  }\n\n  /**\n   * 获得 origin 值\n   * @author Radish\n   */\n  public get<T>(route: string, defaultValue?: T): T {\n    const value = _.get(this.m_origin, route);\n    if ((value === null || value === undefined) && defaultValue !== undefined) {\n      _.set(this.m_origin, route, defaultValue);\n      return defaultValue;\n    }\n    return value;\n  }\n\n  /**\n   * 获得 origin 实例\n   * @author Radish\n   */\n  public get origin() {\n    return this.m_origin;\n  }\n\n  /**\n   * 设置 origin 实例\n   * @author Radish\n   */\n  public set origin(value: IOrigin) {\n    this.m_origin = value;\n  }\n\n  /**\n   * 获得 configs 实例\n   * @author Radish\n   */\n  public get configs() {\n    return this.m_configs;\n  }\n\n  /**\n   * 设置 configs 实例\n   * @author Radish\n   */\n  public set configs(value: IConfig) {\n    this.m_configs = value;\n  }\n}\n","/**\n * 常用的工具整合\n * @author Radish\n */\n\n/**\n * 加载 cc.Prefab 资源\n * @author Radish\n */\nexport async function loadPrefab(url: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, cc.Prefab, (err, resource) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(resource);\n      }\n    });\n  });\n}\n\n/**\n * 加载 json 资源\n * @author Radish\n */\nexport async function loadJson(url: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, (err, jsonAssets) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(jsonAssets.json);\n      }\n    });\n  });\n}\n\n/**\n * 加载 SpriteFrame 资源\n * @author Radish\n */\nexport async function loadSpriteFrame(url: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    cc.loader.loadRes(url, cc.SpriteFrame, (err, resource) => {\n      if (err) {\n        if (CC_DEBUG) {\n          cc.error(err);\n        } else {\n          reject();\n        }\n      } else {\n        resolve(resource);\n      }\n    });\n  });\n}\n"],"sourceRoot":"/source/","file":"project.js"}